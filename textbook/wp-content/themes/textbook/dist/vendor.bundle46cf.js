(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[function(module,exports,__webpack_require__){eval("__webpack_require__(121)('asyncIterator');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN5bWJvbC5hc3luYy1pdGVyYXRvci5qcz9hYzRkIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnYXN5bmNJdGVyYXRvcicpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// ECMAScript 6 symbols shim\nvar global = __webpack_require__(17);\nvar has = __webpack_require__(35);\nvar DESCRIPTORS = __webpack_require__(16);\nvar $export = __webpack_require__(36);\nvar redefine = __webpack_require__(34);\nvar META = __webpack_require__(145).KEY;\nvar $fails = __webpack_require__(26);\nvar shared = __webpack_require__(74);\nvar setToStringTag = __webpack_require__(102);\nvar uid = __webpack_require__(62);\nvar wks = __webpack_require__(9);\nvar wksExt = __webpack_require__(122);\nvar wksDefine = __webpack_require__(121);\nvar enumKeys = __webpack_require__(146);\nvar isArray = __webpack_require__(147);\nvar anObject = __webpack_require__(11);\nvar isObject = __webpack_require__(56);\nvar toObject = __webpack_require__(79);\nvar toIObject = __webpack_require__(58);\nvar toPrimitive = __webpack_require__(97);\nvar createDesc = __webpack_require__(61);\nvar _create = __webpack_require__(117);\nvar gOPNExt = __webpack_require__(148);\nvar $GOPD = __webpack_require__(149);\nvar $GOPS = __webpack_require__(123);\nvar $DP = __webpack_require__(15);\nvar $keys = __webpack_require__(78);\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  __webpack_require__(124).f = gOPNExt.f = $getOwnPropertyNames;\n  __webpack_require__(103).f = $propertyIsEnumerable;\n  $GOPS.f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !__webpack_require__(75)) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });\n\n$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    return $GOPS.f(toObject(it));\n  }\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    $replacer = replacer = args[1];\n    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    if (!isArray(replacer)) replacer = function (key, value) {\n      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(27)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){"use strict";eval("\n__webpack_require__(130);\nvar anObject = __webpack_require__(11);\nvar $flags = __webpack_require__(98);\nvar DESCRIPTORS = __webpack_require__(16);\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  __webpack_require__(34)(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (__webpack_require__(26)(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcuanM/NmI1NCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRmbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFRPX1NUUklORyA9ICd0b1N0cmluZyc7XG52YXIgJHRvU3RyaW5nID0gLy4vW1RPX1NUUklOR107XG5cbnZhciBkZWZpbmUgPSBmdW5jdGlvbiAoZm4pIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShSZWdFeHAucHJvdG90eXBlLCBUT19TVFJJTkcsIGZuLCB0cnVlKTtcbn07XG5cbi8vIDIxLjIuNS4xNCBSZWdFeHAucHJvdG90eXBlLnRvU3RyaW5nKClcbmlmIChyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHsgcmV0dXJuICR0b1N0cmluZy5jYWxsKHsgc291cmNlOiAnYScsIGZsYWdzOiAnYicgfSkgIT0gJy9hL2InOyB9KSkge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgdmFyIFIgPSBhbk9iamVjdCh0aGlzKTtcbiAgICByZXR1cm4gJy8nLmNvbmNhdChSLnNvdXJjZSwgJy8nLFxuICAgICAgJ2ZsYWdzJyBpbiBSID8gUi5mbGFncyA6ICFERVNDUklQVE9SUyAmJiBSIGluc3RhbmNlb2YgUmVnRXhwID8gJGZsYWdzLmNhbGwoUikgOiB1bmRlZmluZWQpO1xuICB9KTtcbi8vIEZGNDQtIFJlZ0V4cCN0b1N0cmluZyBoYXMgYSB3cm9uZyBuYW1lXG59IGVsc2UgaWYgKCR0b1N0cmluZy5uYW1lICE9IFRPX1NUUklORykge1xuICBkZWZpbmUoZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICR0b1N0cmluZy5jYWxsKHRoaXMpO1xuICB9KTtcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 19.1.3.6 Object.prototype.toString()\nvar classof = __webpack_require__(99);\nvar test = {};\ntest[__webpack_require__(9)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __webpack_require__(34)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcuanM/MDZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIHRlc3QgPSB7fTtcbnRlc3RbcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyldID0gJ3onO1xuaWYgKHRlc3QgKyAnJyAhPSAnW29iamVjdCB6XScpIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7XG4gIH0sIHRydWUpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(15).f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || __webpack_require__(16) && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUuanM/N2Y3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIEZQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbnZhciBuYW1lUkUgPSAvXlxccypmdW5jdGlvbiAoW14gKF0qKS87XG52YXIgTkFNRSA9ICduYW1lJztcblxuLy8gMTkuMi40LjIgbmFtZVxuTkFNRSBpbiBGUHJvdG8gfHwgcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiBkUChGUHJvdG8sIE5BTUUsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICB0cnkge1xuICAgICAgcmV0dXJuICgnJyArIHRoaXMpLm1hdGNoKG5hbWVSRSlbMV07XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///4\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $at = __webpack_require__(113)(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n__webpack_require__(114)(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcz81ZGYzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar ctx = __webpack_require__(115);\nvar $export = __webpack_require__(36);\nvar toObject = __webpack_require__(79);\nvar call = __webpack_require__(138);\nvar isArrayIter = __webpack_require__(139);\nvar toLength = __webpack_require__(65);\nvar createProperty = __webpack_require__(140);\nvar getIterFn = __webpack_require__(141);\n\n$export($export.S + $export.F * !__webpack_require__(142)(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZyb20uanM/MWM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAobWFwcGluZykgbWFwZm4gPSBjdHgobWFwZm4sIGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkLCAyKTtcbiAgICAvLyBpZiBvYmplY3QgaXNuJ3QgaXRlcmFibGUgb3IgaXQncyBhcnJheSB3aXRoIGRlZmF1bHQgaXRlcmF0b3IgLSB1c2Ugc2ltcGxlIGNhc2VcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgcmVzdWx0ID0gbmV3IEMoKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBjYWxsKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgICAgZm9yIChyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n")},function(module,exports,__webpack_require__){eval("var $iterators = __webpack_require__(143);\nvar getKeys = __webpack_require__(78);\nvar redefine = __webpack_require__(34);\nvar global = __webpack_require__(17);\nvar hide = __webpack_require__(27);\nvar Iterators = __webpack_require__(64);\nvar wks = __webpack_require__(9);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcz9hYzZhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciAkaXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gSXRlcmF0b3JzLkFycmF5O1xuXG52YXIgRE9NSXRlcmFibGVzID0ge1xuICBDU1NSdWxlTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IGZhbHNlLFxuICBDU1NWYWx1ZUxpc3Q6IGZhbHNlLFxuICBDbGllbnRSZWN0TGlzdDogZmFsc2UsXG4gIERPTVJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NU3RyaW5nTGlzdDogZmFsc2UsXG4gIERPTVRva2VuTGlzdDogdHJ1ZSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IGZhbHNlLFxuICBGaWxlTGlzdDogZmFsc2UsXG4gIEhUTUxBbGxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MRm9ybUVsZW1lbnQ6IGZhbHNlLFxuICBIVE1MU2VsZWN0RWxlbWVudDogZmFsc2UsXG4gIE1lZGlhTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIE1pbWVUeXBlQXJyYXk6IGZhbHNlLFxuICBOYW1lZE5vZGVNYXA6IGZhbHNlLFxuICBOb2RlTGlzdDogdHJ1ZSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogZmFsc2UsXG4gIFBsdWdpbjogZmFsc2UsXG4gIFBsdWdpbkFycmF5OiBmYWxzZSxcbiAgU1ZHTGVuZ3RoTGlzdDogZmFsc2UsXG4gIFNWR051bWJlckxpc3Q6IGZhbHNlLFxuICBTVkdQYXRoU2VnTGlzdDogZmFsc2UsXG4gIFNWR1BvaW50TGlzdDogZmFsc2UsXG4gIFNWR1N0cmluZ0xpc3Q6IGZhbHNlLFxuICBTVkdUcmFuc2Zvcm1MaXN0OiBmYWxzZSxcbiAgU291cmNlQnVmZmVyTGlzdDogZmFsc2UsXG4gIFN0eWxlU2hlZXRMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgVGV4dFRyYWNrQ3VlTGlzdDogZmFsc2UsXG4gIFRleHRUcmFja0xpc3Q6IGZhbHNlLFxuICBUb3VjaExpc3Q6IGZhbHNlXG59O1xuXG5mb3IgKHZhciBjb2xsZWN0aW9ucyA9IGdldEtleXMoRE9NSXRlcmFibGVzKSwgaSA9IDA7IGkgPCBjb2xsZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IGNvbGxlY3Rpb25zW2ldO1xuICB2YXIgZXhwbGljaXQgPSBET01JdGVyYWJsZXNbTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICB2YXIga2V5O1xuICBpZiAocHJvdG8pIHtcbiAgICBpZiAoIXByb3RvW0lURVJBVE9SXSkgaGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZiAoIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlcztcbiAgICBpZiAoZXhwbGljaXQpIGZvciAoa2V5IGluICRpdGVyYXRvcnMpIGlmICghcHJvdG9ba2V5XSkgcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///7\n")},,function(module,exports,__webpack_require__){eval("var store = __webpack_require__(74)('wks');\nvar uid = __webpack_require__(62);\nvar Symbol = __webpack_require__(17).Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy5qcz8yYjRjIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9\n")},function(module,exports,__webpack_require__){eval('!function(t,e){ true?module.exports=e():undefined}(this,(function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function i(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function n(t,e,n){return e&&i(t.prototype,e),n&&i(t,n),t}function s(t){return function(t){if(Array.isArray(t)){for(var e=0,i=new Array(t.length);e<t.length;e++)i[e]=t[e];return i}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function o(t){return Math.sqrt(t.x*t.x+t.y*t.y)}function l(t,e){var i=function(t,e){var i=o(t)*o(e);if(0===i)return 0;var n=function(t,e){return t.x*e.x+t.y*e.y}(t,e)/i;return n>1&&(n=1),Math.acos(n)}(t,e);return function(t,e){return t.x*e.y-e.x*t.y}(t,e)>0&&(i*=-1),180*i/Math.PI}var r=function(){function t(i){e(this,t),this.handlers=[],this.el=i}return n(t,[{key:"add",value:function(t){this.handlers.push(t)}},{key:"del",value:function(t){t||(this.handlers=[]);for(var e=this.handlers.length;e>=0;e--)this.handlers[e]===t&&this.handlers.splice(e,1)}},{key:"dispatch",value:function(){for(var t=0,e=this.handlers.length;t<e;t++){var i=this.handlers[t];"function"==typeof i&&i.apply(this.el,arguments)}}}]),t}();function a(t,e){var i=new r(t);return i.add(e),i}var h=function(){function t(i,n){e(this,t),this.element="string"==typeof i?document.querySelector(i):i,this.start=this.start.bind(this),this.move=this.move.bind(this),this.end=this.end.bind(this),this.cancel=this.cancel.bind(this),this.element.addEventListener("touchstart",this.start,!1),this.element.addEventListener("touchmove",this.move,!1),this.element.addEventListener("touchend",this.end,!1),this.element.addEventListener("touchcancel",this.cancel,!1),this.preV={x:null,y:null},this.pinchStartLen=null,this.zoom=1,this.isDoubleTap=!1;var s=function(){};this.rotate=a(this.element,n.rotate||s),this.touchStart=a(this.element,n.touchStart||s),this.multipointStart=a(this.element,n.multipointStart||s),this.multipointEnd=a(this.element,n.multipointEnd||s),this.pinch=a(this.element,n.pinch||s),this.swipe=a(this.element,n.swipe||s),this.tap=a(this.element,n.tap||s),this.doubleTap=a(this.element,n.doubleTap||s),this.longTap=a(this.element,n.longTap||s),this.singleTap=a(this.element,n.singleTap||s),this.pressMove=a(this.element,n.pressMove||s),this.twoFingerPressMove=a(this.element,n.twoFingerPressMove||s),this.touchMove=a(this.element,n.touchMove||s),this.touchEnd=a(this.element,n.touchEnd||s),this.touchCancel=a(this.element,n.touchCancel||s),this._cancelAllHandler=this.cancelAll.bind(this),window.addEventListener("scroll",this._cancelAllHandler),this.delta=null,this.last=null,this.now=null,this.tapTimeout=null,this.singleTapTimeout=null,this.longTapTimeout=null,this.swipeTimeout=null,this.x1=this.x2=this.y1=this.y2=null,this.preTapPosition={x:null,y:null}}return n(t,[{key:"start",value:function(t){if(t.touches){this.now=Date.now(),this.x1=t.touches[0].pageX,this.y1=t.touches[0].pageY,this.delta=this.now-(this.last||this.now),this.touchStart.dispatch(t,this.element),null!==this.preTapPosition.x&&(this.isDoubleTap=this.delta>0&&this.delta<=250&&Math.abs(this.preTapPosition.x-this.x1)<30&&Math.abs(this.preTapPosition.y-this.y1)<30,this.isDoubleTap&&clearTimeout(this.singleTapTimeout)),this.preTapPosition.x=this.x1,this.preTapPosition.y=this.y1,this.last=this.now;var e=this.preV;if(t.touches.length>1){this._cancelLongTap(),this._cancelSingleTap();var i={x:t.touches[1].pageX-this.x1,y:t.touches[1].pageY-this.y1};e.x=i.x,e.y=i.y,this.pinchStartLen=o(e),this.multipointStart.dispatch(t,this.element)}this._preventTap=!1,this.longTapTimeout=setTimeout(function(){this.longTap.dispatch(t,this.element),this._preventTap=!0}.bind(this),750)}}},{key:"move",value:function(t){if(t.touches){var e=this.preV,i=t.touches.length,n=t.touches[0].pageX,s=t.touches[0].pageY;if(this.isDoubleTap=!1,i>1){var r=t.touches[1].pageX,a=t.touches[1].pageY,h={x:t.touches[1].pageX-n,y:t.touches[1].pageY-s};null!==e.x&&(this.pinchStartLen>0&&(t.zoom=o(h)/this.pinchStartLen,this.pinch.dispatch(t,this.element)),t.angle=l(h,e),this.rotate.dispatch(t,this.element)),e.x=h.x,e.y=h.y,null!==this.x2&&null!==this.sx2?(t.deltaX=(n-this.x2+r-this.sx2)/2,t.deltaY=(s-this.y2+a-this.sy2)/2):(t.deltaX=0,t.deltaY=0),this.twoFingerPressMove.dispatch(t,this.element),this.sx2=r,this.sy2=a}else{if(null!==this.x2){t.deltaX=n-this.x2,t.deltaY=s-this.y2;var c=Math.abs(this.x1-this.x2),u=Math.abs(this.y1-this.y2);(c>10||u>10)&&(this._preventTap=!0)}else t.deltaX=0,t.deltaY=0;this.pressMove.dispatch(t,this.element)}this.touchMove.dispatch(t,this.element),this._cancelLongTap(),this.x2=n,this.y2=s,i>1&&t.preventDefault()}}},{key:"end",value:function(t){if(t.changedTouches){this._cancelLongTap();var e=this;t.touches.length<2&&(this.multipointEnd.dispatch(t,this.element),this.sx2=this.sy2=null),this.x2&&Math.abs(this.x1-this.x2)>30||this.y2&&Math.abs(this.y1-this.y2)>30?(t.direction=this._swipeDirection(this.x1,this.x2,this.y1,this.y2),this.swipeTimeout=setTimeout((function(){e.swipe.dispatch(t,e.element)}),0)):(this.tapTimeout=setTimeout((function(){e._preventTap||e.tap.dispatch(t,e.element),e.isDoubleTap&&(e.doubleTap.dispatch(t,e.element),e.isDoubleTap=!1)}),0),e.isDoubleTap||(e.singleTapTimeout=setTimeout((function(){e.singleTap.dispatch(t,e.element)}),250))),this.touchEnd.dispatch(t,this.element),this.preV.x=0,this.preV.y=0,this.zoom=1,this.pinchStartLen=null,this.x1=this.x2=this.y1=this.y2=null}}},{key:"cancelAll",value:function(){this._preventTap=!0,clearTimeout(this.singleTapTimeout),clearTimeout(this.tapTimeout),clearTimeout(this.longTapTimeout),clearTimeout(this.swipeTimeout)}},{key:"cancel",value:function(t){this.cancelAll(),this.touchCancel.dispatch(t,this.element)}},{key:"_cancelLongTap",value:function(){clearTimeout(this.longTapTimeout)}},{key:"_cancelSingleTap",value:function(){clearTimeout(this.singleTapTimeout)}},{key:"_swipeDirection",value:function(t,e,i,n){return Math.abs(t-e)>=Math.abs(i-n)?t-e>0?"Left":"Right":i-n>0?"Up":"Down"}},{key:"on",value:function(t,e){this[t]&&this[t].add(e)}},{key:"off",value:function(t,e){this[t]&&this[t].del(e)}},{key:"destroy",value:function(){return this.singleTapTimeout&&clearTimeout(this.singleTapTimeout),this.tapTimeout&&clearTimeout(this.tapTimeout),this.longTapTimeout&&clearTimeout(this.longTapTimeout),this.swipeTimeout&&clearTimeout(this.swipeTimeout),this.element.removeEventListener("touchstart",this.start),this.element.removeEventListener("touchmove",this.move),this.element.removeEventListener("touchend",this.end),this.element.removeEventListener("touchcancel",this.cancel),this.rotate.del(),this.touchStart.del(),this.multipointStart.del(),this.multipointEnd.del(),this.pinch.del(),this.swipe.del(),this.tap.del(),this.doubleTap.del(),this.longTap.del(),this.singleTap.del(),this.pressMove.del(),this.twoFingerPressMove.del(),this.touchMove.del(),this.touchEnd.del(),this.touchCancel.del(),this.preV=this.pinchStartLen=this.zoom=this.isDoubleTap=this.delta=this.last=this.now=this.tapTimeout=this.singleTapTimeout=this.longTapTimeout=this.swipeTimeout=this.x1=this.x2=this.y1=this.y2=this.preTapPosition=this.rotate=this.touchStart=this.multipointStart=this.multipointEnd=this.pinch=this.swipe=this.tap=this.doubleTap=this.longTap=this.singleTap=this.pressMove=this.touchMove=this.touchEnd=this.touchCancel=this.twoFingerPressMove=null,window.removeEventListener("scroll",this._cancelAllHandler),null}}]),t}(),c=function(){function t(i,n){var s=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(e(this,t),this.img=i,this.slide=n,this.onclose=o,this.img.setZoomEvents)return!1;this.active=!1,this.zoomedIn=!1,this.dragging=!1,this.currentX=null,this.currentY=null,this.initialX=null,this.initialY=null,this.xOffset=0,this.yOffset=0,this.img.addEventListener("mousedown",(function(t){return s.dragStart(t)}),!1),this.img.addEventListener("mouseup",(function(t){return s.dragEnd(t)}),!1),this.img.addEventListener("mousemove",(function(t){return s.drag(t)}),!1),this.img.addEventListener("click",(function(t){if(!s.zoomedIn)return s.zoomIn();s.zoomedIn&&!s.dragging&&s.zoomOut()}),!1),this.img.setZoomEvents=!0}return n(t,[{key:"zoomIn",value:function(){var t=this.widowWidth();if(!(this.zoomedIn||t<=768)){var e=this.img;if(e.setAttribute("data-style",e.getAttribute("style")),e.style.maxWidth=e.naturalWidth+"px",e.style.maxHeight=e.naturalHeight+"px",e.naturalWidth>t){var i=t/2-e.naturalWidth/2;this.setTranslate(this.img.parentNode,i,0)}this.slide.classList.add("zoomed"),this.zoomedIn=!0}}},{key:"zoomOut",value:function(){this.img.parentNode.setAttribute("style",""),this.img.setAttribute("style",this.img.getAttribute("data-style")),this.slide.classList.remove("zoomed"),this.zoomedIn=!1,this.currentX=null,this.currentY=null,this.initialX=null,this.initialY=null,this.xOffset=0,this.yOffset=0,this.onclose&&"function"==typeof this.onclose&&this.onclose()}},{key:"dragStart",value:function(t){t.preventDefault(),this.zoomedIn?("touchstart"===t.type?(this.initialX=t.touches[0].clientX-this.xOffset,this.initialY=t.touches[0].clientY-this.yOffset):(this.initialX=t.clientX-this.xOffset,this.initialY=t.clientY-this.yOffset),t.target===this.img&&(this.active=!0,this.img.classList.add("dragging"))):this.active=!1}},{key:"dragEnd",value:function(t){var e=this;t.preventDefault(),this.initialX=this.currentX,this.initialY=this.currentY,this.active=!1,setTimeout((function(){e.dragging=!1,e.img.isDragging=!1,e.img.classList.remove("dragging")}),100)}},{key:"drag",value:function(t){this.active&&(t.preventDefault(),"touchmove"===t.type?(this.currentX=t.touches[0].clientX-this.initialX,this.currentY=t.touches[0].clientY-this.initialY):(this.currentX=t.clientX-this.initialX,this.currentY=t.clientY-this.initialY),this.xOffset=this.currentX,this.yOffset=this.currentY,this.img.isDragging=!0,this.dragging=!0,this.setTranslate(this.img,this.currentX,this.currentY))}},{key:"onMove",value:function(t){if(this.zoomedIn){var e=t.clientX-this.img.naturalWidth/2,i=t.clientY-this.img.naturalHeight/2;this.setTranslate(this.img,e,i)}}},{key:"setTranslate",value:function(t,e,i){t.style.transform="translate3d("+e+"px, "+i+"px, 0)"}},{key:"widowWidth",value:function(){return window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth}}]),t}(),u=navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(Android)|(PlayBook)|(BB10)|(BlackBerry)|(Opera Mini)|(IEMobile)|(webOS)|(MeeGo)/i),d=null!==u||void 0!==document.createTouch||"ontouchstart"in window||"onmsgesturechange"in window||navigator.msMaxTouchPoints,g=document.getElementsByTagName("html")[0],p=function(){var t,e=document.createElement("fakeelement"),i={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(t in i)if(void 0!==e.style[t])return i[t]}(),v=function(){var t,e=document.createElement("fakeelement"),i={animation:"animationend",OAnimation:"oAnimationEnd",MozAnimation:"animationend",WebkitAnimation:"webkitAnimationEnd"};for(t in i)if(void 0!==e.style[t])return i[t]}(),f=Date.now(),m={},y={selector:"glightbox",elements:null,skin:"clean",closeButton:!0,startAt:null,autoplayVideos:!0,descPosition:"bottom",width:900,height:506,videosWidth:960,beforeSlideChange:null,afterSlideChange:null,beforeSlideLoad:null,afterSlideLoad:null,onOpen:null,onClose:null,loop:!1,touchNavigation:!0,touchFollowAxis:!0,keyboardNavigation:!0,closeOnOutsideClick:!0,plyr:{css:"https://cdn.plyr.io/3.5.6/plyr.css",js:"https://cdn.plyr.io/3.5.6/plyr.js",ratio:"16:9",config:{youtube:{noCookie:!0,rel:0,showinfo:0,iv_load_policy:3},vimeo:{byline:!1,portrait:!1,title:!1,transparent:!1}}},openEffect:"zoomIn",closeEffect:"zoomOut",slideEffect:"slide",moreText:"See more",moreLength:60,lightboxHtml:"",cssEfects:{fade:{in:"fadeIn",out:"fadeOut"},zoom:{in:"zoomIn",out:"zoomOut"},slide:{in:"slideInRight",out:"slideOutLeft"},slide_back:{in:"slideInLeft",out:"slideOutRight"}},svg:{close:\'<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" xml:space="preserve"><g><g><path d="M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306C514.019,27.23,514.019,14.135,505.943,6.058z"/></g></g><g><g><path d="M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z"/></g></g></svg>\',next:\'<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"> <g><path d="M360.731,229.075l-225.1-225.1c-5.3-5.3-13.8-5.3-19.1,0s-5.3,13.8,0,19.1l215.5,215.5l-215.5,215.5c-5.3,5.3-5.3,13.8,0,19.1c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-4l225.1-225.1C365.931,242.875,365.931,234.275,360.731,229.075z"/></g></svg>\',prev:\'<svg version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 477.175 477.175" xml:space="preserve"><g><path d="M145.188,238.575l215.5-215.5c5.3-5.3,5.3-13.8,0-19.1s-13.8-5.3-19.1,0l-225.1,225.1c-5.3,5.3-5.3,13.8,0,19.1l225.1,225c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4c5.3-5.3,5.3-13.8,0-19.1L145.188,238.575z"/></g></svg>\'}};y.slideHtml=\'<div class="gslide">\\n    <div class="gslide-inner-content">\\n        <div class="ginner-container">\\n            <div class="gslide-media">\\n            </div>\\n            <div class="gslide-description">\\n                <div class="gdesc-inner">\\n                    <h4 class="gslide-title"></h4>\\n                    <div class="gslide-desc"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\';function b(){var t={},e=!1,i=0,n=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(e=arguments[0],i++);for(var s=function(i){for(var n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e&&"[object Object]"===Object.prototype.toString.call(i[n])?t[n]=b(!0,t[n],i[n]):t[n]=i[n])};i<n;i++){s(arguments[i])}return t}y.lightboxHtml=\'<div id="glightbox-body" class="glightbox-container">\\n    <div class="gloader visible"></div>\\n    <div class="goverlay"></div>\\n    <div class="gcontainer">\\n    <div id="glightbox-slider" class="gslider"></div>\\n    <button class="gnext gbtn" tabindex="0">{nextSVG}</button>\\n    <button class="gprev gbtn" tabindex="1">{prevSVG}</button>\\n    <button class="gclose gbtn" tabindex="2">{closeSVG}</button>\\n</div>\\n</div>\';var x={isFunction:function(t){return"function"==typeof t},isString:function(t){return"string"==typeof t},isNode:function(t){return!(!t||!t.nodeType||1!=t.nodeType)},isArray:function(t){return Array.isArray(t)},isArrayLike:function(t){return t&&t.length&&isFinite(t.length)},isObject:function(e){return"object"===t(e)&&null!=e&&!x.isFunction(e)&&!x.isArray(e)},isNil:function(t){return null==t},has:function(t,e){return null!==t&&hasOwnProperty.call(t,e)},size:function(t){if(x.isObject(t)){if(t.keys)return t.keys().length;var e=0;for(var i in t)x.has(t,i)&&e++;return e}return t.length},isNumber:function(t){return!isNaN(parseFloat(t))&&isFinite(t)}};function w(t,e){if((x.isNode(t)||t===window||t===document)&&(t=[t]),x.isArrayLike(t)||x.isObject(t)||(t=[t]),0!=x.size(t))if(x.isArrayLike(t)&&!x.isObject(t))for(var i=t.length,n=0;n<i&&!1!==e.call(t[n],t[n],n,t);n++);else if(x.isObject(t))for(var s in t)if(x.has(t,s)&&!1===e.call(t[s],t[s],s,t))break}function S(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,n=t[f]=t[f]||[],s={all:n,evt:null,found:null};return e&&i&&x.size(n)>0&&w(n,(function(t,n){if(t.eventName==e&&t.fn.toString()==i.toString())return s.found=!0,s.evt=n,!1})),s}function T(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=e.onElement,n=e.withCallback,s=e.avoidDuplicate,o=void 0===s||s,l=e.once,r=void 0!==l&&l,a=e.useCapture,h=void 0!==a&&a,c=arguments.length>2?arguments[2]:void 0,u=i||[];function d(t){x.isFunction(n)&&n.call(c,t,this),r&&d.destroy()}return x.isString(u)&&(u=document.querySelectorAll(u)),d.destroy=function(){w(u,(function(e){var i=S(e,t,d);i.found&&i.all.splice(i.evt,1),e.removeEventListener&&e.removeEventListener(t,d,h)}))},w(u,(function(e){var i=S(e,t,d);(e.addEventListener&&o&&!i.found||!o)&&(e.addEventListener(t,d,h),i.all.push({eventName:t,fn:d}))})),d}function k(t,e){w(e.split(" "),(function(e){return t.classList.add(e)}))}function E(t,e){w(e.split(" "),(function(e){return t.classList.remove(e)}))}function A(t,e){return t.classList.contains(e)}function C(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!t||""===e)return!1;if("none"==e)return x.isFunction(i)&&i(),!1;var n=e.split(" ");w(n,(function(e){k(t,"g"+e)})),T(v,{onElement:t,avoidDuplicate:!1,once:!0,withCallback:function(t,e){w(n,(function(t){E(e,"g"+t)})),x.isFunction(i)&&i()}})}function L(t){var e=document.createDocumentFragment(),i=document.createElement("div");for(i.innerHTML=t;i.firstChild;)e.appendChild(i.firstChild);return e}function M(t,e){for(;t!==document.body;){if("function"==typeof(t=t.parentElement).matches?t.matches(e):t.msMatchesSelector(e))return t}}function O(t){t.style.display="block"}function z(t){t.style.display="none"}function q(){return{width:window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,height:window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight}}function N(t){if(A(t.target,"plyr--html5")){var e=M(t.target,".gslide-media");"enterfullscreen"==t.type&&k(e,"fullscreen"),"exitfullscreen"==t.type&&E(e,"fullscreen")}}var I=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1?arguments[1]:void 0,i={href:"",title:"",type:"",description:"",descPosition:e.descPosition,effect:"",width:"",height:"",node:t};if(x.isObject(t)&&!x.isNode(t))return b(i,t);var n="",s=t.getAttribute("data-glightbox"),o=t.nodeName.toLowerCase();if("a"===o&&(n=t.href),"img"===o&&(n=t.src),i.href=n,w(i,(function(n,s){x.has(e,s)&&"width"!==s&&(i[s]=e[s]);var o=t.dataset[s];x.isNil(o)||(i[s]=o)})),i.type||(i.type=W(n)),x.isNil(s)){if("a"==o){var l=t.title;x.isNil(l)||""===l||(i.title=l)}if("img"==o){var r=t.alt;x.isNil(r)||""===r||(i.title=r)}var a=t.getAttribute("data-description");x.isNil(a)||""===a||(i.description=a)}else{var h=[];w(i,(function(t,e){h.push(";\\\\s?"+e)})),h=h.join("\\\\s?:|"),""!==s.trim()&&w(i,(function(t,e){var n=s,o=new RegExp("s?"+e+"s?:s?(.*?)("+h+"s?:|$)"),l=n.match(o);if(l&&l.length&&l[1]){var r=l[1].trim().replace(/;\\s*$/,"");i[e]=r}}))}if(i.description&&"."==i.description.substring(0,1)&&document.querySelector(i.description))i.description=document.querySelector(i.description).innerHTML;else{var c=t.querySelector(".glightbox-desc");c&&(i.description=c.innerHTML)}var u="video"==i.type?e.videosWidth:e.width,d=e.height;return i.width=x.has(i,"width")&&""!==i.width?i.width:u,i.height=x.has(i,"height")&&""!==i.height?i.height:d,i},D=function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(A(e,"loaded"))return!1;x.isFunction(this.settings.beforeSlideLoad)&&this.settings.beforeSlideLoad(e,i);var s=i.type,o=i.descPosition,l=e.querySelector(".gslide-media"),r=e.querySelector(".gslide-title"),a=e.querySelector(".gslide-desc"),h=e.querySelector(".gdesc-inner"),d=n;if(x.isFunction(this.settings.afterSlideLoad)&&(d=function(){x.isFunction(n)&&n(),t.settings.afterSlideLoad(e,i)}),""==i.title&&""==i.description?h&&h.parentNode.parentNode.removeChild(h.parentNode):(r&&""!==i.title?r.innerHTML=i.title:r.parentNode.removeChild(r),a&&""!==i.description?u&&this.settings.moreLength>0?(i.smallDescription=G(i.description,this.settings.moreLength,this.settings.moreText),a.innerHTML=i.smallDescription,Z.apply(this,[a,i])):a.innerHTML=i.description:a.parentNode.removeChild(a),k(l.parentNode,"desc-".concat(o)),k(h.parentNode,"description-".concat(o))),k(l,"gslide-".concat(s)),k(e,"loaded"),"video"===s)return k(l.parentNode,"gvideo-container"),l.insertBefore(L(\'<div class="gvideo-wrapper"></div>\'),l.firstChild),void X.apply(this,[e,i,d]);if("external"===s){var g=Y({url:i.href,width:i.width,height:i.height,callback:d});return l.parentNode.style.maxWidth="".concat(i.width,"px"),void l.appendChild(g)}if("inline"!==s){if("image"===s){var p=new Image;return p.addEventListener("load",(function(){!u&&p.naturalWidth>p.offsetWidth&&(k(p,"zoomable"),new c(p,e,(function(){t.resize(e)}))),x.isFunction(d)&&d()}),!1),p.src=i.href,void l.insertBefore(p,l.firstChild)}x.isFunction(d)&&d()}else P.apply(this,[e,i,d])};function X(t,e,i){var n=this,s="gvideo"+e.index,o=t.querySelector(".gvideo-wrapper");B(this.settings.plyr.css);var l=e.href,r=location.protocol.replace(":",""),a="",h="",c=!1;"file"==r&&(r="http"),o.parentNode.style.maxWidth="".concat(e.width,"px"),B(this.settings.plyr.js,"Plyr",(function(){if(l.match(/vimeo\\.com\\/([0-9]*)/)){var t=/vimeo.*\\/(\\d+)/i.exec(l);a="vimeo",h=t[1]}if(l.match(/(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/)||l.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/)||l.match(/(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/)){var r=function(t){var e="";e=void 0!==(t=t.replace(/(>|<)/gi,"").split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/))[2]?(e=t[2].split(/[^0-9a-z_\\-]/i))[0]:t;return e}(l);a="youtube",h=r}if(null!==l.match(/\\.(mp4|ogg|webm|mov)$/)){a="local";var u=\'<video id="\'+s+\'" \';u+=\'style="background:#000; max-width: \'.concat(e.width,\'px;" \'),u+=\'preload="metadata" \',u+=\'x-webkit-airplay="allow" \',u+=\'webkit-playsinline="" \',u+="controls ",u+=\'class="gvideo-local">\';var d=l.toLowerCase().split(".").pop(),g={mp4:"",ogg:"",webm:""};for(var p in g[d="mov"==d?"mp4":d]=l,g)if(g.hasOwnProperty(p)){var v=g[p];e.hasOwnProperty(p)&&(v=e[p]),""!==v&&(u+=\'<source src="\'.concat(v,\'" type="video/\').concat(p,\'">\'))}c=L(u+="</video>")}var f=c||L(\'<div id="\'.concat(s,\'" data-plyr-provider="\').concat(a,\'" data-plyr-embed-id="\').concat(h,\'"></div>\'));k(o,"".concat(a,"-video gvideo")),o.appendChild(f),o.setAttribute("data-id",s);var y=x.has(n.settings.plyr,"config")?n.settings.plyr.config:{},b=new Plyr("#"+s,y);b.on("ready",(function(t){var e=t.detail.plyr;m[s]=e,x.isFunction(i)&&i()})),b.on("enterfullscreen",N),b.on("exitfullscreen",N)}))}function Y(t){var e=t.url,i=t.width,n=t.height,s=t.allow,o=t.callback,l=t.appendTo,r=document.createElement("iframe"),a=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth;return r.className="vimeo-video gvideo",r.src=e,n&&(r.style.height=u&&a<767?"":"".concat(n,"px")),i&&(r.style.width="".concat(i,"px")),s&&r.setAttribute("allow",s),r.onload=function(){k(r,"node-ready"),x.isFunction(o)&&o()},l&&l.appendChild(r),r}function B(t,e,i){if(x.isNil(t))console.error("Inject videos api error");else{var n;if(x.isFunction(e)&&(i=e,e=!1),-1!==t.indexOf(".css")){if((n=document.querySelectorAll(\'link[href="\'+t+\'"]\'))&&n.length>0)return void(x.isFunction(i)&&i());var s=document.getElementsByTagName("head")[0],o=s.querySelectorAll(\'link[rel="stylesheet"]\'),l=document.createElement("link");return l.rel="stylesheet",l.type="text/css",l.href=t,l.media="all",o?s.insertBefore(l,o[0]):s.appendChild(l),void(x.isFunction(i)&&i())}if((n=document.querySelectorAll(\'script[src="\'+t+\'"]\'))&&n.length>0){if(x.isFunction(i)){if(x.isString(e))return F((function(){return void 0!==window[e]}),(function(){i()})),!1;i()}}else{var r=document.createElement("script");r.type="text/javascript",r.src=t,r.onload=function(){if(x.isFunction(i)){if(x.isString(e))return F((function(){return void 0!==window[e]}),(function(){i()})),!1;i()}},document.body.appendChild(r)}}}function F(t,e,i,n){if(t())e();else{var s;i||(i=100);var o=setInterval((function(){t()&&(clearInterval(o),s&&clearTimeout(s),e())}),i);n&&(s=setTimeout((function(){clearInterval(o)}),n))}}function P(t,e,i){var n=this,s=t.querySelector(".gslide-media"),o=e.href.split("#").pop().trim(),l=document.getElementById(o);if(!l)return!1;var r=l.cloneNode(!0);r.style.height=x.isNumber(e.height)?"".concat(e.height,"px"):e.height,r.style.maxWidth=x.isNumber(e.width)?"".concat(e.width,"px"):e.width,k(r,"ginlined-content"),s.appendChild(r),this.events["inlineclose"+o]=T("click",{onElement:s.querySelectorAll(".gtrigger-close"),withCallback:function(t){t.preventDefault(),n.close()}}),x.isFunction(i)&&i()}var W=function(t){var e=t;if(null!==(t=t.toLowerCase()).match(/\\.(jpeg|jpg|jpe|gif|png|apn|webp|svg)$/))return"image";if(t.match(/(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/)||t.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/)||t.match(/(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/))return"video";if(t.match(/vimeo\\.com\\/([0-9]*)/))return"video";if(null!==t.match(/\\.(mp4|ogg|webm|mov)$/))return"video";if(t.indexOf("#")>-1&&""!==e.split("#").pop().trim())return"inline";return t.includes("gajax=true")?"ajax":"external"};function _(){var t=this;if(this.events.hasOwnProperty("keyboard"))return!1;this.events.keyboard=T("keydown",{onElement:window,withCallback:function(e,i){var n=(e=e||window.event).keyCode;if(9==n){e.preventDefault();var o=document.querySelectorAll(".gbtn");if(!o||o.length<=0)return;var l=s(o).filter((function(t){return A(t,"focused")}));if(!l.length){var r=document.querySelector(\'.gbtn[tabindex="0"]\');return void(r&&(r.focus(),k(r,"focused")))}o.forEach((function(t){return E(t,"focused")}));var a=l[0].getAttribute("tabindex");a=a||"0";var h=parseInt(a)+1;h>o.length-1&&(h="0");var c=document.querySelector(\'.gbtn[tabindex="\'.concat(h,\'"]\'));c&&(c.focus(),k(c,"focused"))}39==n&&t.nextSlide(),37==n&&t.prevSlide(),27==n&&t.close()}})}function j(){var t=this;if(this.events.hasOwnProperty("touch"))return!1;var e,i,n,s=q(),o=s.width,l=s.height,r=!1,a=null,c=null,u=null,d=!1,g=1,p=1,v=!1,f=!1,m=null,y=null,b=null,x=null,w=0,S=0,T=!1,C=!1,L={},M={},O=0,z=0,N=this,I=document.getElementById("glightbox-slider"),D=document.querySelector(".goverlay"),X=(this.loop(),new h(I,{touchStart:function(t){if(A(t.targetTouches[0].target,"ginner-container"))return r=!1,!1;r=!0,M=t.targetTouches[0],L.pageX=t.targetTouches[0].pageX,L.pageY=t.targetTouches[0].pageY,O=t.targetTouches[0].clientX,z=t.targetTouches[0].clientY,a=N.activeSlide,c=a.querySelector(".gslide-media"),n=a.querySelector(".gslide-inline"),u=null,A(c,"gslide-image")&&(u=c.querySelector("img")),E(D,"greset")},touchMove:function(s){if(r&&(M=s.targetTouches[0],!v&&!f)){if(n&&n.offsetHeight>l){var a=L.pageX-M.pageX;if(Math.abs(a)<=13)return!1}d=!0;var h,g=s.targetTouches[0].clientX,p=s.targetTouches[0].clientY,m=O-g,y=z-p;if(Math.abs(m)>Math.abs(y)?(T=!1,C=!0):(C=!1,T=!0),e=M.pageX-L.pageX,w=100*e/o,i=M.pageY-L.pageY,S=100*i/l,T&&u&&(h=1-Math.abs(i)/l,D.style.opacity=h,t.settings.touchFollowAxis&&(w=0)),C&&(h=1-Math.abs(e)/o,c.style.opacity=h,t.settings.touchFollowAxis&&(S=0)),!u)return H(c,"translate3d(".concat(w,"%, 0, 0)"));H(c,"translate3d(".concat(w,"%, ").concat(S,"%, 0)"))}},touchEnd:function(){if(r){if(d=!1,f||v)return b=m,void(x=y);var e=Math.abs(parseInt(S)),i=Math.abs(parseInt(w));if(!(e>29&&u))return e<29&&i<25?(k(D,"greset"),D.style.opacity=1,V(c)):void 0;t.close()}},multipointEnd:function(){setTimeout((function(){v=!1}),50)},multipointStart:function(){v=!0,g=p||1},pinch:function(t){if(!u||d)return!1;v=!0,u.scaleX=u.scaleY=g*t.zoom;var e=g*t.zoom;if(f=!0,e<=1)return f=!1,e=1,x=null,b=null,m=null,y=null,void u.setAttribute("style","");e>4.5&&(e=4.5),u.style.transform="scale3d(".concat(e,", ").concat(e,", 1)"),p=e},pressMove:function(t){if(f&&!v){var e=M.pageX-L.pageX,i=M.pageY-L.pageY;b&&(e+=b),x&&(i+=x),m=e,y=i;var n="translate3d(".concat(e,"px, ").concat(i,"px, 0)");p&&(n+=" scale3d(".concat(p,", ").concat(p,", 1)")),H(u,n)}},swipe:function(e){if(!f)if(v)v=!1;else{if("Left"==e.direction){if(t.index==t.elements.length-1)return V(c);t.nextSlide()}if("Right"==e.direction){if(0==t.index)return V(c);t.prevSlide()}}}}));this.events.touch=X}function H(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";if(""==e)return t.style.webkitTransform="",t.style.MozTransform="",t.style.msTransform="",t.style.OTransform="",t.style.transform="",!1;t.style.webkitTransform=e,t.style.MozTransform=e,t.style.msTransform=e,t.style.OTransform=e,t.style.transform=e}function V(t){var e=A(t,"gslide-media")?t:t.querySelector(".gslide-media"),i=t.querySelector(".gslide-description");k(e,"greset"),H(e,"translate3d(0, 0, 0)");T(p,{onElement:e,once:!0,withCallback:function(t,i){E(e,"greset")}});e.style.opacity="",i&&(i.style.opacity="")}function G(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:50,i=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=i;if((t=t.trim()).length<=e)return t;var s=t.substr(0,e-1);return n?s+\'... <a href="#" class="desc-more">\'+i+"</a>":s}function Z(t,e){var i=t.querySelector(".desc-more");if(!i)return!1;T("click",{onElement:i,withCallback:function(t,i){t.preventDefault();var n=document.body,s=M(i,".gslide-desc");if(!s)return!1;s.innerHTML=e.description,k(n,"gdesc-open");var o=T("click",{onElement:[n,M(s,".gslide-description")],withCallback:function(t,i){"a"!==t.target.nodeName.toLowerCase()&&(E(n,"gdesc-open"),k(n,"gdesc-closed"),s.innerHTML=e.smallDescription,Z(s,e),setTimeout((function(){E(n,"gdesc-closed")}),400),o.destroy())}})}})}var R=function(){function t(i){e(this,t),this.settings=b(y,i||{}),this.effectsClasses=this.getAnimationClasses(),this.slidesData={}}return n(t,[{key:"init",value:function(){var t=this;this.baseEvents=T("click",{onElement:".".concat(this.settings.selector),withCallback:function(e,i){e.preventDefault(),t.open(i)}})}},{key:"open",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.elements=this.getElements(t),0==this.elements.length)return!1;this.activeSlide=null,this.prevActiveSlideIndex=null,this.prevActiveSlide=null;var e=this.settings.startAt;t&&x.isNil(e)&&(e=this.elements.indexOf(t))<0&&(e=0),x.isNil(e)&&(e=0),this.build(),C(this.overlay,"none"==this.settings.openEffect?"none":this.settings.cssEfects.fade.in);var i=document.body;if(i.style.width="".concat(i.offsetWidth,"px"),k(i,"glightbox-open"),k(g,"glightbox-open"),u&&(k(document.body,"glightbox-mobile"),this.settings.slideEffect="slide"),this.showSlide(e,!0),1==this.elements.length?(z(this.prevButton),z(this.nextButton)):(O(this.prevButton),O(this.nextButton)),this.lightboxOpen=!0,x.isFunction(this.settings.onOpen)&&this.settings.onOpen(),u&&d&&this.settings.touchNavigation)return j.apply(this),!1;this.settings.keyboardNavigation&&_.apply(this)}},{key:"showSlide",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];O(this.loader),this.index=parseInt(e);var n=this.slidesContainer.querySelector(".current");n&&E(n,"current"),this.slideAnimateOut();var s=this.slidesContainer.querySelectorAll(".gslide")[e];if(A(s,"loaded"))this.slideAnimateIn(s,i),z(this.loader);else{O(this.loader);var o=I(this.elements[e],this.settings);o.index=e,this.slidesData[e]=o,D.apply(this,[s,o,function(){z(t.loader),t.resize(),t.slideAnimateIn(s,i)}])}this.slideDescription=s.querySelector(".gslide-description"),this.slideDescriptionContained=this.slideDescription&&A(this.slideDescription.parentNode,"gslide-media"),this.preloadSlide(e+1),this.preloadSlide(e-1);var l=this.loop();E(this.nextButton,"disabled"),E(this.prevButton,"disabled"),0!==e||l?e!==this.elements.length-1||l||k(this.nextButton,"disabled"):k(this.prevButton,"disabled"),this.activeSlide=s}},{key:"preloadSlide",value:function(t){var e=this;if(t<0||t>this.elements.length)return!1;if(x.isNil(this.elements[t]))return!1;var i=this.slidesContainer.querySelectorAll(".gslide")[t];if(A(i,"loaded"))return!1;var n=I(this.elements[t],this.settings);n.index=t,this.slidesData[t]=n;var s=n.sourcetype;"video"==s||"external"==s?setTimeout((function(){D.apply(e,[i,n])}),200):D.apply(this,[i,n])}},{key:"prevSlide",value:function(){this.goToSlide(this.index-1)}},{key:"nextSlide",value:function(){this.goToSlide(this.index+1)}},{key:"goToSlide",value:function(){var t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.prevActiveSlide=this.activeSlide,this.prevActiveSlideIndex=this.index;var e=this.loop();if(!e&&(t<0||t>this.elements.length))return!1;t<0?t=this.elements.length-1:t>=this.elements.length&&(t=0),this.showSlide(t)}},{key:"slideAnimateIn",value:function(t,e){var i=this,n=t.querySelector(".gslide-media"),s=t.querySelector(".gslide-description"),o={index:this.prevActiveSlideIndex,slide:this.prevActiveSlide},l={index:this.index,slide:this.activeSlide};if(n.offsetWidth>0&&s&&(z(s),s.style.display=""),E(t,this.effectsClasses),e)C(t,this.settings.openEffect,(function(){!u&&i.settings.autoplayVideos&&i.playSlideVideo(t),x.isFunction(i.settings.afterSlideChange)&&i.settings.afterSlideChange.apply(i,[o,l])}));else{var r=this.settings.slideEffect,a="none"!==r?this.settings.cssEfects[r].in:r;this.prevActiveSlideIndex>this.index&&"slide"==this.settings.slideEffect&&(a=this.settings.cssEfects.slide_back.in),C(t,a,(function(){!u&&i.settings.autoplayVideos&&i.playSlideVideo(t),x.isFunction(i.settings.afterSlideChange)&&i.settings.afterSlideChange.apply(i,[o,l])}))}setTimeout((function(){i.resize(t)}),100),k(t,"current")}},{key:"slideAnimateOut",value:function(){if(!this.prevActiveSlide)return!1;var t=this.prevActiveSlide;E(t,this.effectsClasses),k(t,"prev");var e=this.settings.slideEffect,i="none"!==e?this.settings.cssEfects[e].out:e;this.stopSlideVideo(t),x.isFunction(this.settings.beforeSlideChange)&&this.settings.beforeSlideChange.apply(this,[{index:this.prevActiveSlideIndex,slide:this.prevActiveSlide},{index:this.index,slide:this.activeSlide}]),this.prevActiveSlideIndex>this.index&&"slide"==this.settings.slideEffect&&(i=this.settings.cssEfects.slide_back.out),C(t,i,(function(){var e=t.querySelector(".gslide-media"),i=t.querySelector(".gslide-description");e.style.transform="",E(e,"greset"),e.style.opacity="",i&&(i.style.opacity=""),E(t,"prev")}))}},{key:"stopSlideVideo",value:function(t){x.isNumber(t)&&(t=this.slidesContainer.querySelectorAll(".gslide")[t]);var e=t?t.querySelector(".gvideo"):null;if(!e)return!1;var i=e.getAttribute("data-id");if(m&&x.has(m,i)){var n=m[i];n&&n.play&&n.pause()}}},{key:"playSlideVideo",value:function(t){x.isNumber(t)&&(t=this.slidesContainer.querySelectorAll(".gslide")[t]);var e=t.querySelector(".gvideo");if(!e)return!1;var i=e.getAttribute("data-id");if(m&&x.has(m,i)){var n=m[i];n&&n.play&&n.play()}}},{key:"setElements",value:function(t){this.settings.elements=t}},{key:"getElements",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.elements=[],!x.isNil(this.settings.elements)&&x.isArray(this.settings.elements))return this.settings.elements;var e=!1;if(null!==t){var i=t.getAttribute("data-gallery");i&&""!==i&&(e=document.querySelectorAll(\'[data-gallery="\'.concat(i,\'"]\')))}return 0==e&&(e=document.querySelectorAll(".".concat(this.settings.selector))),e=Array.prototype.slice.call(e)}},{key:"getActiveSlide",value:function(){return this.slidesContainer.querySelectorAll(".gslide")[this.index]}},{key:"getActiveSlideIndex",value:function(){return this.index}},{key:"getAnimationClasses",value:function(){var t=[];for(var e in this.settings.cssEfects)if(this.settings.cssEfects.hasOwnProperty(e)){var i=this.settings.cssEfects[e];t.push("g".concat(i.in)),t.push("g".concat(i.out))}return t.join(" ")}},{key:"build",value:function(){var t=this;if(this.built)return!1;var e=x.has(this.settings.svg,"next")?this.settings.svg.next:"",i=x.has(this.settings.svg,"prev")?this.settings.svg.prev:"",n=x.has(this.settings.svg,"close")?this.settings.svg.close:"",s=this.settings.lightboxHtml;s=L(s=(s=(s=s.replace(/{nextSVG}/g,e)).replace(/{prevSVG}/g,i)).replace(/{closeSVG}/g,n)),document.body.appendChild(s);var o=document.getElementById("glightbox-body");this.modal=o;var l=o.querySelector(".gclose");this.prevButton=o.querySelector(".gprev"),this.nextButton=o.querySelector(".gnext"),this.overlay=o.querySelector(".goverlay"),this.loader=o.querySelector(".gloader"),this.slidesContainer=document.getElementById("glightbox-slider"),this.events={},k(this.modal,"glightbox-"+this.settings.skin),this.settings.closeButton&&l&&(this.events.close=T("click",{onElement:l,withCallback:function(e,i){e.preventDefault(),t.close()}})),l&&!this.settings.closeButton&&l.parentNode.removeChild(l),this.nextButton&&(this.events.next=T("click",{onElement:this.nextButton,withCallback:function(e,i){e.preventDefault(),t.nextSlide()}})),this.prevButton&&(this.events.prev=T("click",{onElement:this.prevButton,withCallback:function(e,i){e.preventDefault(),t.prevSlide()}})),this.settings.closeOnOutsideClick&&(this.events.outClose=T("click",{onElement:o,withCallback:function(e,i){A(document.body,"glightbox-mobile")||M(e.target,".ginner-container")||M(e.target,".gbtn")||A(e.target,"gnext")||A(e.target,"gprev")||t.close()}})),w(this.elements,(function(){var e=L(t.settings.slideHtml);t.slidesContainer.appendChild(e)})),d&&k(document.body,"glightbox-touch"),this.events.resize=T("resize",{onElement:window,withCallback:function(){t.resize()}}),this.built=!0}},{key:"resize",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(t=t||this.activeSlide,document.body.style.width="",document.body.style.width="".concat(document.body.offsetWidth,"px"),t&&!A(t,"zoomed")){var e=q(),i=t.querySelector(".gvideo-wrapper"),n=t.querySelector(".gslide-image"),s=this.slideDescription,o=e.width,l=e.height;if(o<=768?k(document.body,"glightbox-mobile"):E(document.body,"glightbox-mobile"),i||n){var r=!1;if(s&&(A(s,"description-bottom")||A(s,"description-top"))&&!A(s,"gabsolute")&&(r=!0),n)if(o<=768){var a=n.querySelector("img");a.setAttribute("style","")}else if(r){var h=s.offsetHeight,c=this.slidesData[this.index].width;c=c<=o?c+"px":"100%";var u=n.querySelector("img");u.setAttribute("style","max-height: calc(100vh - ".concat(h,"px)")),s.setAttribute("style","max-width: ".concat(u.offsetWidth,"px;"))}if(i){var d=this.settings.plyr.ratio.split(":"),g=this.slidesData[this.index].width,p=g/(parseInt(d[0])/parseInt(d[1]));if(p=Math.floor(p),r&&(l-=s.offsetHeight),l<p&&o>g){var v=i.offsetWidth,f=i.offsetHeight,m=l/f,y={width:v*m,height:f*m};i.parentNode.setAttribute("style","max-width: ".concat(y.width,"px")),r&&s.setAttribute("style","max-width: ".concat(y.width,"px;"))}else i.parentNode.style.maxWidth="".concat(g,"px"),r&&s.setAttribute("style","max-width: ".concat(g,"px;"))}}}}},{key:"reload",value:function(){this.init()}},{key:"loop",value:function(){var t=x.has(this.settings,"loopAtEnd")?this.settings.loopAtEnd:null;return t=x.has(this.settings,"loop")?this.settings.loop:t,t}},{key:"close",value:function(){var t=this;if(this.closing)return!1;this.closing=!0,this.stopSlideVideo(this.activeSlide),k(this.modal,"glightbox-closing"),C(this.overlay,"none"==this.settings.openEffect?"none":this.settings.cssEfects.fade.out),C(this.activeSlide,this.settings.closeEffect,(function(){if(t.activeSlide=null,t.prevActiveSlideIndex=null,t.prevActiveSlide=null,t.built=!1,t.events){for(var e in t.events)t.events.hasOwnProperty(e)&&t.events[e].destroy();t.events=null}var i=document.body;E(g,"glightbox-open"),E(i,"glightbox-open touching gdesc-open glightbox-touch glightbox-mobile"),i.style.width="",t.modal.parentNode.removeChild(t.modal),x.isFunction(t.settings.onClose)&&t.settings.onClose(),t.closing=null}))}},{key:"destroy",value:function(){this.close(),this.baseEvents.destroy()}}]),t}();return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=new R(t);return e.init(),e}}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ2xpZ2h0Ym94L2Rpc3QvanMvZ2xpZ2h0Ym94Lm1pbi5qcz83YjYwIl0sInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGUpOih0PXR8fHNlbGYpLkdMaWdodGJveD1lKCl9KHRoaXMsKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gdChlKXtyZXR1cm4odD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJlwic3ltYm9sXCI9PXR5cGVvZiBTeW1ib2wuaXRlcmF0b3I/ZnVuY3Rpb24odCl7cmV0dXJuIHR5cGVvZiB0fTpmdW5jdGlvbih0KXtyZXR1cm4gdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZ0LmNvbnN0cnVjdG9yPT09U3ltYm9sJiZ0IT09U3ltYm9sLnByb3RvdHlwZT9cInN5bWJvbFwiOnR5cGVvZiB0fSkoZSl9ZnVuY3Rpb24gZSh0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9ZnVuY3Rpb24gaSh0LGUpe2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgbj1lW2ldO24uZW51bWVyYWJsZT1uLmVudW1lcmFibGV8fCExLG4uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG4mJihuLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLmtleSxuKX19ZnVuY3Rpb24gbih0LGUsbil7cmV0dXJuIGUmJmkodC5wcm90b3R5cGUsZSksbiYmaSh0LG4pLHR9ZnVuY3Rpb24gcyh0KXtyZXR1cm4gZnVuY3Rpb24odCl7aWYoQXJyYXkuaXNBcnJheSh0KSl7Zm9yKHZhciBlPTAsaT1uZXcgQXJyYXkodC5sZW5ndGgpO2U8dC5sZW5ndGg7ZSsrKWlbZV09dFtlXTtyZXR1cm4gaX19KHQpfHxmdW5jdGlvbih0KXtpZihTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KHQpfHxcIltvYmplY3QgQXJndW1lbnRzXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKXJldHVybiBBcnJheS5mcm9tKHQpfSh0KXx8ZnVuY3Rpb24oKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIil9KCl9ZnVuY3Rpb24gbyh0KXtyZXR1cm4gTWF0aC5zcXJ0KHQueCp0LngrdC55KnQueSl9ZnVuY3Rpb24gbCh0LGUpe3ZhciBpPWZ1bmN0aW9uKHQsZSl7dmFyIGk9byh0KSpvKGUpO2lmKDA9PT1pKXJldHVybiAwO3ZhciBuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQueCplLngrdC55KmUueX0odCxlKS9pO3JldHVybiBuPjEmJihuPTEpLE1hdGguYWNvcyhuKX0odCxlKTtyZXR1cm4gZnVuY3Rpb24odCxlKXtyZXR1cm4gdC54KmUueS1lLngqdC55fSh0LGUpPjAmJihpKj0tMSksMTgwKmkvTWF0aC5QSX12YXIgcj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoaSl7ZSh0aGlzLHQpLHRoaXMuaGFuZGxlcnM9W10sdGhpcy5lbD1pfXJldHVybiBuKHQsW3trZXk6XCJhZGRcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmhhbmRsZXJzLnB1c2godCl9fSx7a2V5OlwiZGVsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dHx8KHRoaXMuaGFuZGxlcnM9W10pO2Zvcih2YXIgZT10aGlzLmhhbmRsZXJzLmxlbmd0aDtlPj0wO2UtLSl0aGlzLmhhbmRsZXJzW2VdPT09dCYmdGhpcy5oYW5kbGVycy5zcGxpY2UoZSwxKX19LHtrZXk6XCJkaXNwYXRjaFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT10aGlzLmhhbmRsZXJzLmxlbmd0aDt0PGU7dCsrKXt2YXIgaT10aGlzLmhhbmRsZXJzW3RdO1wiZnVuY3Rpb25cIj09dHlwZW9mIGkmJmkuYXBwbHkodGhpcy5lbCxhcmd1bWVudHMpfX19XSksdH0oKTtmdW5jdGlvbiBhKHQsZSl7dmFyIGk9bmV3IHIodCk7cmV0dXJuIGkuYWRkKGUpLGl9dmFyIGg9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGksbil7ZSh0aGlzLHQpLHRoaXMuZWxlbWVudD1cInN0cmluZ1wiPT10eXBlb2YgaT9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGkpOmksdGhpcy5zdGFydD10aGlzLnN0YXJ0LmJpbmQodGhpcyksdGhpcy5tb3ZlPXRoaXMubW92ZS5iaW5kKHRoaXMpLHRoaXMuZW5kPXRoaXMuZW5kLmJpbmQodGhpcyksdGhpcy5jYW5jZWw9dGhpcy5jYW5jZWwuYmluZCh0aGlzKSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoc3RhcnRcIix0aGlzLnN0YXJ0LCExKSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNobW92ZVwiLHRoaXMubW92ZSwhMSksdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJ0b3VjaGVuZFwiLHRoaXMuZW5kLCExKSx0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInRvdWNoY2FuY2VsXCIsdGhpcy5jYW5jZWwsITEpLHRoaXMucHJlVj17eDpudWxsLHk6bnVsbH0sdGhpcy5waW5jaFN0YXJ0TGVuPW51bGwsdGhpcy56b29tPTEsdGhpcy5pc0RvdWJsZVRhcD0hMTt2YXIgcz1mdW5jdGlvbigpe307dGhpcy5yb3RhdGU9YSh0aGlzLmVsZW1lbnQsbi5yb3RhdGV8fHMpLHRoaXMudG91Y2hTdGFydD1hKHRoaXMuZWxlbWVudCxuLnRvdWNoU3RhcnR8fHMpLHRoaXMubXVsdGlwb2ludFN0YXJ0PWEodGhpcy5lbGVtZW50LG4ubXVsdGlwb2ludFN0YXJ0fHxzKSx0aGlzLm11bHRpcG9pbnRFbmQ9YSh0aGlzLmVsZW1lbnQsbi5tdWx0aXBvaW50RW5kfHxzKSx0aGlzLnBpbmNoPWEodGhpcy5lbGVtZW50LG4ucGluY2h8fHMpLHRoaXMuc3dpcGU9YSh0aGlzLmVsZW1lbnQsbi5zd2lwZXx8cyksdGhpcy50YXA9YSh0aGlzLmVsZW1lbnQsbi50YXB8fHMpLHRoaXMuZG91YmxlVGFwPWEodGhpcy5lbGVtZW50LG4uZG91YmxlVGFwfHxzKSx0aGlzLmxvbmdUYXA9YSh0aGlzLmVsZW1lbnQsbi5sb25nVGFwfHxzKSx0aGlzLnNpbmdsZVRhcD1hKHRoaXMuZWxlbWVudCxuLnNpbmdsZVRhcHx8cyksdGhpcy5wcmVzc01vdmU9YSh0aGlzLmVsZW1lbnQsbi5wcmVzc01vdmV8fHMpLHRoaXMudHdvRmluZ2VyUHJlc3NNb3ZlPWEodGhpcy5lbGVtZW50LG4udHdvRmluZ2VyUHJlc3NNb3ZlfHxzKSx0aGlzLnRvdWNoTW92ZT1hKHRoaXMuZWxlbWVudCxuLnRvdWNoTW92ZXx8cyksdGhpcy50b3VjaEVuZD1hKHRoaXMuZWxlbWVudCxuLnRvdWNoRW5kfHxzKSx0aGlzLnRvdWNoQ2FuY2VsPWEodGhpcy5lbGVtZW50LG4udG91Y2hDYW5jZWx8fHMpLHRoaXMuX2NhbmNlbEFsbEhhbmRsZXI9dGhpcy5jYW5jZWxBbGwuYmluZCh0aGlzKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLHRoaXMuX2NhbmNlbEFsbEhhbmRsZXIpLHRoaXMuZGVsdGE9bnVsbCx0aGlzLmxhc3Q9bnVsbCx0aGlzLm5vdz1udWxsLHRoaXMudGFwVGltZW91dD1udWxsLHRoaXMuc2luZ2xlVGFwVGltZW91dD1udWxsLHRoaXMubG9uZ1RhcFRpbWVvdXQ9bnVsbCx0aGlzLnN3aXBlVGltZW91dD1udWxsLHRoaXMueDE9dGhpcy54Mj10aGlzLnkxPXRoaXMueTI9bnVsbCx0aGlzLnByZVRhcFBvc2l0aW9uPXt4Om51bGwseTpudWxsfX1yZXR1cm4gbih0LFt7a2V5Olwic3RhcnRcIix2YWx1ZTpmdW5jdGlvbih0KXtpZih0LnRvdWNoZXMpe3RoaXMubm93PURhdGUubm93KCksdGhpcy54MT10LnRvdWNoZXNbMF0ucGFnZVgsdGhpcy55MT10LnRvdWNoZXNbMF0ucGFnZVksdGhpcy5kZWx0YT10aGlzLm5vdy0odGhpcy5sYXN0fHx0aGlzLm5vdyksdGhpcy50b3VjaFN0YXJ0LmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KSxudWxsIT09dGhpcy5wcmVUYXBQb3NpdGlvbi54JiYodGhpcy5pc0RvdWJsZVRhcD10aGlzLmRlbHRhPjAmJnRoaXMuZGVsdGE8PTI1MCYmTWF0aC5hYnModGhpcy5wcmVUYXBQb3NpdGlvbi54LXRoaXMueDEpPDMwJiZNYXRoLmFicyh0aGlzLnByZVRhcFBvc2l0aW9uLnktdGhpcy55MSk8MzAsdGhpcy5pc0RvdWJsZVRhcCYmY2xlYXJUaW1lb3V0KHRoaXMuc2luZ2xlVGFwVGltZW91dCkpLHRoaXMucHJlVGFwUG9zaXRpb24ueD10aGlzLngxLHRoaXMucHJlVGFwUG9zaXRpb24ueT10aGlzLnkxLHRoaXMubGFzdD10aGlzLm5vdzt2YXIgZT10aGlzLnByZVY7aWYodC50b3VjaGVzLmxlbmd0aD4xKXt0aGlzLl9jYW5jZWxMb25nVGFwKCksdGhpcy5fY2FuY2VsU2luZ2xlVGFwKCk7dmFyIGk9e3g6dC50b3VjaGVzWzFdLnBhZ2VYLXRoaXMueDEseTp0LnRvdWNoZXNbMV0ucGFnZVktdGhpcy55MX07ZS54PWkueCxlLnk9aS55LHRoaXMucGluY2hTdGFydExlbj1vKGUpLHRoaXMubXVsdGlwb2ludFN0YXJ0LmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KX10aGlzLl9wcmV2ZW50VGFwPSExLHRoaXMubG9uZ1RhcFRpbWVvdXQ9c2V0VGltZW91dChmdW5jdGlvbigpe3RoaXMubG9uZ1RhcC5kaXNwYXRjaCh0LHRoaXMuZWxlbWVudCksdGhpcy5fcHJldmVudFRhcD0hMH0uYmluZCh0aGlzKSw3NTApfX19LHtrZXk6XCJtb3ZlXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYodC50b3VjaGVzKXt2YXIgZT10aGlzLnByZVYsaT10LnRvdWNoZXMubGVuZ3RoLG49dC50b3VjaGVzWzBdLnBhZ2VYLHM9dC50b3VjaGVzWzBdLnBhZ2VZO2lmKHRoaXMuaXNEb3VibGVUYXA9ITEsaT4xKXt2YXIgcj10LnRvdWNoZXNbMV0ucGFnZVgsYT10LnRvdWNoZXNbMV0ucGFnZVksaD17eDp0LnRvdWNoZXNbMV0ucGFnZVgtbix5OnQudG91Y2hlc1sxXS5wYWdlWS1zfTtudWxsIT09ZS54JiYodGhpcy5waW5jaFN0YXJ0TGVuPjAmJih0Lnpvb209byhoKS90aGlzLnBpbmNoU3RhcnRMZW4sdGhpcy5waW5jaC5kaXNwYXRjaCh0LHRoaXMuZWxlbWVudCkpLHQuYW5nbGU9bChoLGUpLHRoaXMucm90YXRlLmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KSksZS54PWgueCxlLnk9aC55LG51bGwhPT10aGlzLngyJiZudWxsIT09dGhpcy5zeDI/KHQuZGVsdGFYPShuLXRoaXMueDIrci10aGlzLnN4MikvMix0LmRlbHRhWT0ocy10aGlzLnkyK2EtdGhpcy5zeTIpLzIpOih0LmRlbHRhWD0wLHQuZGVsdGFZPTApLHRoaXMudHdvRmluZ2VyUHJlc3NNb3ZlLmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KSx0aGlzLnN4Mj1yLHRoaXMuc3kyPWF9ZWxzZXtpZihudWxsIT09dGhpcy54Mil7dC5kZWx0YVg9bi10aGlzLngyLHQuZGVsdGFZPXMtdGhpcy55Mjt2YXIgYz1NYXRoLmFicyh0aGlzLngxLXRoaXMueDIpLHU9TWF0aC5hYnModGhpcy55MS10aGlzLnkyKTsoYz4xMHx8dT4xMCkmJih0aGlzLl9wcmV2ZW50VGFwPSEwKX1lbHNlIHQuZGVsdGFYPTAsdC5kZWx0YVk9MDt0aGlzLnByZXNzTW92ZS5kaXNwYXRjaCh0LHRoaXMuZWxlbWVudCl9dGhpcy50b3VjaE1vdmUuZGlzcGF0Y2godCx0aGlzLmVsZW1lbnQpLHRoaXMuX2NhbmNlbExvbmdUYXAoKSx0aGlzLngyPW4sdGhpcy55Mj1zLGk+MSYmdC5wcmV2ZW50RGVmYXVsdCgpfX19LHtrZXk6XCJlbmRcIix2YWx1ZTpmdW5jdGlvbih0KXtpZih0LmNoYW5nZWRUb3VjaGVzKXt0aGlzLl9jYW5jZWxMb25nVGFwKCk7dmFyIGU9dGhpczt0LnRvdWNoZXMubGVuZ3RoPDImJih0aGlzLm11bHRpcG9pbnRFbmQuZGlzcGF0Y2godCx0aGlzLmVsZW1lbnQpLHRoaXMuc3gyPXRoaXMuc3kyPW51bGwpLHRoaXMueDImJk1hdGguYWJzKHRoaXMueDEtdGhpcy54Mik+MzB8fHRoaXMueTImJk1hdGguYWJzKHRoaXMueTEtdGhpcy55Mik+MzA/KHQuZGlyZWN0aW9uPXRoaXMuX3N3aXBlRGlyZWN0aW9uKHRoaXMueDEsdGhpcy54Mix0aGlzLnkxLHRoaXMueTIpLHRoaXMuc3dpcGVUaW1lb3V0PXNldFRpbWVvdXQoKGZ1bmN0aW9uKCl7ZS5zd2lwZS5kaXNwYXRjaCh0LGUuZWxlbWVudCl9KSwwKSk6KHRoaXMudGFwVGltZW91dD1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuX3ByZXZlbnRUYXB8fGUudGFwLmRpc3BhdGNoKHQsZS5lbGVtZW50KSxlLmlzRG91YmxlVGFwJiYoZS5kb3VibGVUYXAuZGlzcGF0Y2godCxlLmVsZW1lbnQpLGUuaXNEb3VibGVUYXA9ITEpfSksMCksZS5pc0RvdWJsZVRhcHx8KGUuc2luZ2xlVGFwVGltZW91dD1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2Uuc2luZ2xlVGFwLmRpc3BhdGNoKHQsZS5lbGVtZW50KX0pLDI1MCkpKSx0aGlzLnRvdWNoRW5kLmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KSx0aGlzLnByZVYueD0wLHRoaXMucHJlVi55PTAsdGhpcy56b29tPTEsdGhpcy5waW5jaFN0YXJ0TGVuPW51bGwsdGhpcy54MT10aGlzLngyPXRoaXMueTE9dGhpcy55Mj1udWxsfX19LHtrZXk6XCJjYW5jZWxBbGxcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX3ByZXZlbnRUYXA9ITAsY2xlYXJUaW1lb3V0KHRoaXMuc2luZ2xlVGFwVGltZW91dCksY2xlYXJUaW1lb3V0KHRoaXMudGFwVGltZW91dCksY2xlYXJUaW1lb3V0KHRoaXMubG9uZ1RhcFRpbWVvdXQpLGNsZWFyVGltZW91dCh0aGlzLnN3aXBlVGltZW91dCl9fSx7a2V5OlwiY2FuY2VsXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy5jYW5jZWxBbGwoKSx0aGlzLnRvdWNoQ2FuY2VsLmRpc3BhdGNoKHQsdGhpcy5lbGVtZW50KX19LHtrZXk6XCJfY2FuY2VsTG9uZ1RhcFwiLHZhbHVlOmZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KHRoaXMubG9uZ1RhcFRpbWVvdXQpfX0se2tleTpcIl9jYW5jZWxTaW5nbGVUYXBcIix2YWx1ZTpmdW5jdGlvbigpe2NsZWFyVGltZW91dCh0aGlzLnNpbmdsZVRhcFRpbWVvdXQpfX0se2tleTpcIl9zd2lwZURpcmVjdGlvblwiLHZhbHVlOmZ1bmN0aW9uKHQsZSxpLG4pe3JldHVybiBNYXRoLmFicyh0LWUpPj1NYXRoLmFicyhpLW4pP3QtZT4wP1wiTGVmdFwiOlwiUmlnaHRcIjppLW4+MD9cIlVwXCI6XCJEb3duXCJ9fSx7a2V5Olwib25cIix2YWx1ZTpmdW5jdGlvbih0LGUpe3RoaXNbdF0mJnRoaXNbdF0uYWRkKGUpfX0se2tleTpcIm9mZlwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dGhpc1t0XSYmdGhpc1t0XS5kZWwoZSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2luZ2xlVGFwVGltZW91dCYmY2xlYXJUaW1lb3V0KHRoaXMuc2luZ2xlVGFwVGltZW91dCksdGhpcy50YXBUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy50YXBUaW1lb3V0KSx0aGlzLmxvbmdUYXBUaW1lb3V0JiZjbGVhclRpbWVvdXQodGhpcy5sb25nVGFwVGltZW91dCksdGhpcy5zd2lwZVRpbWVvdXQmJmNsZWFyVGltZW91dCh0aGlzLnN3aXBlVGltZW91dCksdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaHN0YXJ0XCIsdGhpcy5zdGFydCksdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaG1vdmVcIix0aGlzLm1vdmUpLHRoaXMuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidG91Y2hlbmRcIix0aGlzLmVuZCksdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0b3VjaGNhbmNlbFwiLHRoaXMuY2FuY2VsKSx0aGlzLnJvdGF0ZS5kZWwoKSx0aGlzLnRvdWNoU3RhcnQuZGVsKCksdGhpcy5tdWx0aXBvaW50U3RhcnQuZGVsKCksdGhpcy5tdWx0aXBvaW50RW5kLmRlbCgpLHRoaXMucGluY2guZGVsKCksdGhpcy5zd2lwZS5kZWwoKSx0aGlzLnRhcC5kZWwoKSx0aGlzLmRvdWJsZVRhcC5kZWwoKSx0aGlzLmxvbmdUYXAuZGVsKCksdGhpcy5zaW5nbGVUYXAuZGVsKCksdGhpcy5wcmVzc01vdmUuZGVsKCksdGhpcy50d29GaW5nZXJQcmVzc01vdmUuZGVsKCksdGhpcy50b3VjaE1vdmUuZGVsKCksdGhpcy50b3VjaEVuZC5kZWwoKSx0aGlzLnRvdWNoQ2FuY2VsLmRlbCgpLHRoaXMucHJlVj10aGlzLnBpbmNoU3RhcnRMZW49dGhpcy56b29tPXRoaXMuaXNEb3VibGVUYXA9dGhpcy5kZWx0YT10aGlzLmxhc3Q9dGhpcy5ub3c9dGhpcy50YXBUaW1lb3V0PXRoaXMuc2luZ2xlVGFwVGltZW91dD10aGlzLmxvbmdUYXBUaW1lb3V0PXRoaXMuc3dpcGVUaW1lb3V0PXRoaXMueDE9dGhpcy54Mj10aGlzLnkxPXRoaXMueTI9dGhpcy5wcmVUYXBQb3NpdGlvbj10aGlzLnJvdGF0ZT10aGlzLnRvdWNoU3RhcnQ9dGhpcy5tdWx0aXBvaW50U3RhcnQ9dGhpcy5tdWx0aXBvaW50RW5kPXRoaXMucGluY2g9dGhpcy5zd2lwZT10aGlzLnRhcD10aGlzLmRvdWJsZVRhcD10aGlzLmxvbmdUYXA9dGhpcy5zaW5nbGVUYXA9dGhpcy5wcmVzc01vdmU9dGhpcy50b3VjaE1vdmU9dGhpcy50b3VjaEVuZD10aGlzLnRvdWNoQ2FuY2VsPXRoaXMudHdvRmluZ2VyUHJlc3NNb3ZlPW51bGwsd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIix0aGlzLl9jYW5jZWxBbGxIYW5kbGVyKSxudWxsfX1dKSx0fSgpLGM9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGksbil7dmFyIHM9dGhpcyxvPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKGUodGhpcyx0KSx0aGlzLmltZz1pLHRoaXMuc2xpZGU9bix0aGlzLm9uY2xvc2U9byx0aGlzLmltZy5zZXRab29tRXZlbnRzKXJldHVybiExO3RoaXMuYWN0aXZlPSExLHRoaXMuem9vbWVkSW49ITEsdGhpcy5kcmFnZ2luZz0hMSx0aGlzLmN1cnJlbnRYPW51bGwsdGhpcy5jdXJyZW50WT1udWxsLHRoaXMuaW5pdGlhbFg9bnVsbCx0aGlzLmluaXRpYWxZPW51bGwsdGhpcy54T2Zmc2V0PTAsdGhpcy55T2Zmc2V0PTAsdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLChmdW5jdGlvbih0KXtyZXR1cm4gcy5kcmFnU3RhcnQodCl9KSwhMSksdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNldXBcIiwoZnVuY3Rpb24odCl7cmV0dXJuIHMuZHJhZ0VuZCh0KX0pLCExKSx0aGlzLmltZy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsKGZ1bmN0aW9uKHQpe3JldHVybiBzLmRyYWcodCl9KSwhMSksdGhpcy5pbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsKGZ1bmN0aW9uKHQpe2lmKCFzLnpvb21lZEluKXJldHVybiBzLnpvb21JbigpO3Muem9vbWVkSW4mJiFzLmRyYWdnaW5nJiZzLnpvb21PdXQoKX0pLCExKSx0aGlzLmltZy5zZXRab29tRXZlbnRzPSEwfXJldHVybiBuKHQsW3trZXk6XCJ6b29tSW5cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMud2lkb3dXaWR0aCgpO2lmKCEodGhpcy56b29tZWRJbnx8dDw9NzY4KSl7dmFyIGU9dGhpcy5pbWc7aWYoZS5zZXRBdHRyaWJ1dGUoXCJkYXRhLXN0eWxlXCIsZS5nZXRBdHRyaWJ1dGUoXCJzdHlsZVwiKSksZS5zdHlsZS5tYXhXaWR0aD1lLm5hdHVyYWxXaWR0aCtcInB4XCIsZS5zdHlsZS5tYXhIZWlnaHQ9ZS5uYXR1cmFsSGVpZ2h0K1wicHhcIixlLm5hdHVyYWxXaWR0aD50KXt2YXIgaT10LzItZS5uYXR1cmFsV2lkdGgvMjt0aGlzLnNldFRyYW5zbGF0ZSh0aGlzLmltZy5wYXJlbnROb2RlLGksMCl9dGhpcy5zbGlkZS5jbGFzc0xpc3QuYWRkKFwiem9vbWVkXCIpLHRoaXMuem9vbWVkSW49ITB9fX0se2tleTpcInpvb21PdXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaW1nLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKFwic3R5bGVcIixcIlwiKSx0aGlzLmltZy5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLHRoaXMuaW1nLmdldEF0dHJpYnV0ZShcImRhdGEtc3R5bGVcIikpLHRoaXMuc2xpZGUuY2xhc3NMaXN0LnJlbW92ZShcInpvb21lZFwiKSx0aGlzLnpvb21lZEluPSExLHRoaXMuY3VycmVudFg9bnVsbCx0aGlzLmN1cnJlbnRZPW51bGwsdGhpcy5pbml0aWFsWD1udWxsLHRoaXMuaW5pdGlhbFk9bnVsbCx0aGlzLnhPZmZzZXQ9MCx0aGlzLnlPZmZzZXQ9MCx0aGlzLm9uY2xvc2UmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMub25jbG9zZSYmdGhpcy5vbmNsb3NlKCl9fSx7a2V5OlwiZHJhZ1N0YXJ0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuem9vbWVkSW4/KFwidG91Y2hzdGFydFwiPT09dC50eXBlPyh0aGlzLmluaXRpYWxYPXQudG91Y2hlc1swXS5jbGllbnRYLXRoaXMueE9mZnNldCx0aGlzLmluaXRpYWxZPXQudG91Y2hlc1swXS5jbGllbnRZLXRoaXMueU9mZnNldCk6KHRoaXMuaW5pdGlhbFg9dC5jbGllbnRYLXRoaXMueE9mZnNldCx0aGlzLmluaXRpYWxZPXQuY2xpZW50WS10aGlzLnlPZmZzZXQpLHQudGFyZ2V0PT09dGhpcy5pbWcmJih0aGlzLmFjdGl2ZT0hMCx0aGlzLmltZy5jbGFzc0xpc3QuYWRkKFwiZHJhZ2dpbmdcIikpKTp0aGlzLmFjdGl2ZT0hMX19LHtrZXk6XCJkcmFnRW5kXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0LnByZXZlbnREZWZhdWx0KCksdGhpcy5pbml0aWFsWD10aGlzLmN1cnJlbnRYLHRoaXMuaW5pdGlhbFk9dGhpcy5jdXJyZW50WSx0aGlzLmFjdGl2ZT0hMSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuZHJhZ2dpbmc9ITEsZS5pbWcuaXNEcmFnZ2luZz0hMSxlLmltZy5jbGFzc0xpc3QucmVtb3ZlKFwiZHJhZ2dpbmdcIil9KSwxMDApfX0se2tleTpcImRyYWdcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLmFjdGl2ZSYmKHQucHJldmVudERlZmF1bHQoKSxcInRvdWNobW92ZVwiPT09dC50eXBlPyh0aGlzLmN1cnJlbnRYPXQudG91Y2hlc1swXS5jbGllbnRYLXRoaXMuaW5pdGlhbFgsdGhpcy5jdXJyZW50WT10LnRvdWNoZXNbMF0uY2xpZW50WS10aGlzLmluaXRpYWxZKToodGhpcy5jdXJyZW50WD10LmNsaWVudFgtdGhpcy5pbml0aWFsWCx0aGlzLmN1cnJlbnRZPXQuY2xpZW50WS10aGlzLmluaXRpYWxZKSx0aGlzLnhPZmZzZXQ9dGhpcy5jdXJyZW50WCx0aGlzLnlPZmZzZXQ9dGhpcy5jdXJyZW50WSx0aGlzLmltZy5pc0RyYWdnaW5nPSEwLHRoaXMuZHJhZ2dpbmc9ITAsdGhpcy5zZXRUcmFuc2xhdGUodGhpcy5pbWcsdGhpcy5jdXJyZW50WCx0aGlzLmN1cnJlbnRZKSl9fSx7a2V5Olwib25Nb3ZlXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYodGhpcy56b29tZWRJbil7dmFyIGU9dC5jbGllbnRYLXRoaXMuaW1nLm5hdHVyYWxXaWR0aC8yLGk9dC5jbGllbnRZLXRoaXMuaW1nLm5hdHVyYWxIZWlnaHQvMjt0aGlzLnNldFRyYW5zbGF0ZSh0aGlzLmltZyxlLGkpfX19LHtrZXk6XCJzZXRUcmFuc2xhdGVcIix2YWx1ZTpmdW5jdGlvbih0LGUsaSl7dC5zdHlsZS50cmFuc2Zvcm09XCJ0cmFuc2xhdGUzZChcIitlK1wicHgsIFwiK2krXCJweCwgMClcIn19LHtrZXk6XCJ3aWRvd1dpZHRoXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gd2luZG93LmlubmVyV2lkdGh8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aHx8ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aH19XSksdH0oKSx1PW5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goLyhpUGFkKXwoaVBob25lKXwoaVBvZCl8KEFuZHJvaWQpfChQbGF5Qm9vayl8KEJCMTApfChCbGFja0JlcnJ5KXwoT3BlcmEgTWluaSl8KElFTW9iaWxlKXwod2ViT1MpfChNZWVHbykvaSksZD1udWxsIT09dXx8dm9pZCAwIT09ZG9jdW1lbnQuY3JlYXRlVG91Y2h8fFwib250b3VjaHN0YXJ0XCJpbiB3aW5kb3d8fFwib25tc2dlc3R1cmVjaGFuZ2VcImluIHdpbmRvd3x8bmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMsZz1kb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImh0bWxcIilbMF0scD1mdW5jdGlvbigpe3ZhciB0LGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZha2VlbGVtZW50XCIpLGk9e3RyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsT1RyYW5zaXRpb246XCJvVHJhbnNpdGlvbkVuZFwiLE1velRyYW5zaXRpb246XCJ0cmFuc2l0aW9uZW5kXCIsV2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIn07Zm9yKHQgaW4gaSlpZih2b2lkIDAhPT1lLnN0eWxlW3RdKXJldHVybiBpW3RdfSgpLHY9ZnVuY3Rpb24oKXt2YXIgdCxlPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmYWtlZWxlbWVudFwiKSxpPXthbmltYXRpb246XCJhbmltYXRpb25lbmRcIixPQW5pbWF0aW9uOlwib0FuaW1hdGlvbkVuZFwiLE1vekFuaW1hdGlvbjpcImFuaW1hdGlvbmVuZFwiLFdlYmtpdEFuaW1hdGlvbjpcIndlYmtpdEFuaW1hdGlvbkVuZFwifTtmb3IodCBpbiBpKWlmKHZvaWQgMCE9PWUuc3R5bGVbdF0pcmV0dXJuIGlbdF19KCksZj1EYXRlLm5vdygpLG09e30seT17c2VsZWN0b3I6XCJnbGlnaHRib3hcIixlbGVtZW50czpudWxsLHNraW46XCJjbGVhblwiLGNsb3NlQnV0dG9uOiEwLHN0YXJ0QXQ6bnVsbCxhdXRvcGxheVZpZGVvczohMCxkZXNjUG9zaXRpb246XCJib3R0b21cIix3aWR0aDo5MDAsaGVpZ2h0OjUwNix2aWRlb3NXaWR0aDo5NjAsYmVmb3JlU2xpZGVDaGFuZ2U6bnVsbCxhZnRlclNsaWRlQ2hhbmdlOm51bGwsYmVmb3JlU2xpZGVMb2FkOm51bGwsYWZ0ZXJTbGlkZUxvYWQ6bnVsbCxvbk9wZW46bnVsbCxvbkNsb3NlOm51bGwsbG9vcDohMSx0b3VjaE5hdmlnYXRpb246ITAsdG91Y2hGb2xsb3dBeGlzOiEwLGtleWJvYXJkTmF2aWdhdGlvbjohMCxjbG9zZU9uT3V0c2lkZUNsaWNrOiEwLHBseXI6e2NzczpcImh0dHBzOi8vY2RuLnBseXIuaW8vMy41LjYvcGx5ci5jc3NcIixqczpcImh0dHBzOi8vY2RuLnBseXIuaW8vMy41LjYvcGx5ci5qc1wiLHJhdGlvOlwiMTY6OVwiLGNvbmZpZzp7eW91dHViZTp7bm9Db29raWU6ITAscmVsOjAsc2hvd2luZm86MCxpdl9sb2FkX3BvbGljeTozfSx2aW1lbzp7YnlsaW5lOiExLHBvcnRyYWl0OiExLHRpdGxlOiExLHRyYW5zcGFyZW50OiExfX19LG9wZW5FZmZlY3Q6XCJ6b29tSW5cIixjbG9zZUVmZmVjdDpcInpvb21PdXRcIixzbGlkZUVmZmVjdDpcInNsaWRlXCIsbW9yZVRleHQ6XCJTZWUgbW9yZVwiLG1vcmVMZW5ndGg6NjAsbGlnaHRib3hIdG1sOlwiXCIsY3NzRWZlY3RzOntmYWRlOntpbjpcImZhZGVJblwiLG91dDpcImZhZGVPdXRcIn0sem9vbTp7aW46XCJ6b29tSW5cIixvdXQ6XCJ6b29tT3V0XCJ9LHNsaWRlOntpbjpcInNsaWRlSW5SaWdodFwiLG91dDpcInNsaWRlT3V0TGVmdFwifSxzbGlkZV9iYWNrOntpbjpcInNsaWRlSW5MZWZ0XCIsb3V0Olwic2xpZGVPdXRSaWdodFwifX0sc3ZnOntjbG9zZTonPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJMYXllcl8xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zOnhsaW5rPVwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiIHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgeG1sOnNwYWNlPVwicHJlc2VydmVcIj48Zz48Zz48cGF0aCBkPVwiTTUwNS45NDMsNi4wNThjLTguMDc3LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDksMEw2LjA1OCw0NzYuNjkzYy04LjA3Nyw4LjA3Ny04LjA3NywyMS4xNzIsMCwyOS4yNDlDMTAuMDk2LDUwOS45ODIsMTUuMzksNTEyLDIwLjY4Myw1MTJjNS4yOTMsMCwxMC41ODYtMi4wMTksMTQuNjI1LTYuMDU5TDUwNS45NDMsMzUuMzA2QzUxNC4wMTksMjcuMjMsNTE0LjAxOSwxNC4xMzUsNTA1Ljk0Myw2LjA1OHpcIi8+PC9nPjwvZz48Zz48Zz48cGF0aCBkPVwiTTUwNS45NDIsNDc2LjY5NEwzNS4zMDYsNi4wNTljLTguMDc2LTguMDc3LTIxLjE3Mi04LjA3Ny0yOS4yNDgsMGMtOC4wNzcsOC4wNzYtOC4wNzcsMjEuMTcxLDAsMjkuMjQ4bDQ3MC42MzYsNDcwLjYzNmM0LjAzOCw0LjAzOSw5LjMzMiw2LjA1OCwxNC42MjUsNi4wNThjNS4yOTMsMCwxMC41ODctMi4wMTksMTQuNjI0LTYuMDU3QzUxNC4wMTgsNDk3Ljg2Niw1MTQuMDE4LDQ4NC43NzEsNTA1Ljk0Miw0NzYuNjk0elwiLz48L2c+PC9nPjwvc3ZnPicsbmV4dDonPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJDYXBhXzFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDQ3Ny4xNzUgNDc3LjE3NVwiIHhtbDpzcGFjZT1cInByZXNlcnZlXCI+IDxnPjxwYXRoIGQ9XCJNMzYwLjczMSwyMjkuMDc1bC0yMjUuMS0yMjUuMWMtNS4zLTUuMy0xMy44LTUuMy0xOS4xLDBzLTUuMywxMy44LDAsMTkuMWwyMTUuNSwyMTUuNWwtMjE1LjUsMjE1LjVjLTUuMyw1LjMtNS4zLDEzLjgsMCwxOS4xYzIuNiwyLjYsNi4xLDQsOS41LDRjMy40LDAsNi45LTEuMyw5LjUtNGwyMjUuMS0yMjUuMUMzNjUuOTMxLDI0Mi44NzUsMzY1LjkzMSwyMzQuMjc1LDM2MC43MzEsMjI5LjA3NXpcIi8+PC9nPjwvc3ZnPicscHJldjonPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJDYXBhXzFcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeG1sbnM6eGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDQ3Ny4xNzUgNDc3LjE3NVwiIHhtbDpzcGFjZT1cInByZXNlcnZlXCI+PGc+PHBhdGggZD1cIk0xNDUuMTg4LDIzOC41NzVsMjE1LjUtMjE1LjVjNS4zLTUuMyw1LjMtMTMuOCwwLTE5LjFzLTEzLjgtNS4zLTE5LjEsMGwtMjI1LjEsMjI1LjFjLTUuMyw1LjMtNS4zLDEzLjgsMCwxOS4xbDIyNS4xLDIyNWMyLjYsMi42LDYuMSw0LDkuNSw0czYuOS0xLjMsOS41LTRjNS4zLTUuMyw1LjMtMTMuOCwwLTE5LjFMMTQ1LjE4OCwyMzguNTc1elwiLz48L2c+PC9zdmc+J319O3kuc2xpZGVIdG1sPSc8ZGl2IGNsYXNzPVwiZ3NsaWRlXCI+XFxuICAgIDxkaXYgY2xhc3M9XCJnc2xpZGUtaW5uZXItY29udGVudFwiPlxcbiAgICAgICAgPGRpdiBjbGFzcz1cImdpbm5lci1jb250YWluZXJcIj5cXG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3NsaWRlLW1lZGlhXCI+XFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImdzbGlkZS1kZXNjcmlwdGlvblwiPlxcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ2Rlc2MtaW5uZXJcIj5cXG4gICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz1cImdzbGlkZS10aXRsZVwiPjwvaDQ+XFxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZ3NsaWRlLWRlc2NcIj48L2Rpdj5cXG4gICAgICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICAgICAgPC9kaXY+XFxuICAgICAgICA8L2Rpdj5cXG4gICAgPC9kaXY+XFxuPC9kaXY+JztmdW5jdGlvbiBiKCl7dmFyIHQ9e30sZT0hMSxpPTAsbj1hcmd1bWVudHMubGVuZ3RoO1wiW29iamVjdCBCb29sZWFuXVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50c1swXSkmJihlPWFyZ3VtZW50c1swXSxpKyspO2Zvcih2YXIgcz1mdW5jdGlvbihpKXtmb3IodmFyIG4gaW4gaSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaSxuKSYmKGUmJlwiW29iamVjdCBPYmplY3RdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaVtuXSk/dFtuXT1iKCEwLHRbbl0saVtuXSk6dFtuXT1pW25dKX07aTxuO2krKyl7cyhhcmd1bWVudHNbaV0pfXJldHVybiB0fXkubGlnaHRib3hIdG1sPSc8ZGl2IGlkPVwiZ2xpZ2h0Ym94LWJvZHlcIiBjbGFzcz1cImdsaWdodGJveC1jb250YWluZXJcIj5cXG4gICAgPGRpdiBjbGFzcz1cImdsb2FkZXIgdmlzaWJsZVwiPjwvZGl2PlxcbiAgICA8ZGl2IGNsYXNzPVwiZ292ZXJsYXlcIj48L2Rpdj5cXG4gICAgPGRpdiBjbGFzcz1cImdjb250YWluZXJcIj5cXG4gICAgPGRpdiBpZD1cImdsaWdodGJveC1zbGlkZXJcIiBjbGFzcz1cImdzbGlkZXJcIj48L2Rpdj5cXG4gICAgPGJ1dHRvbiBjbGFzcz1cImduZXh0IGdidG5cIiB0YWJpbmRleD1cIjBcIj57bmV4dFNWR308L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBjbGFzcz1cImdwcmV2IGdidG5cIiB0YWJpbmRleD1cIjFcIj57cHJldlNWR308L2J1dHRvbj5cXG4gICAgPGJ1dHRvbiBjbGFzcz1cImdjbG9zZSBnYnRuXCIgdGFiaW5kZXg9XCIyXCI+e2Nsb3NlU1ZHfTwvYnV0dG9uPlxcbjwvZGl2PlxcbjwvZGl2Pic7dmFyIHg9e2lzRnVuY3Rpb246ZnVuY3Rpb24odCl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgdH0saXNTdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHR9LGlzTm9kZTpmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHwhdC5ub2RlVHlwZXx8MSE9dC5ub2RlVHlwZSl9LGlzQXJyYXk6ZnVuY3Rpb24odCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodCl9LGlzQXJyYXlMaWtlOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0Lmxlbmd0aCYmaXNGaW5pdGUodC5sZW5ndGgpfSxpc09iamVjdDpmdW5jdGlvbihlKXtyZXR1cm5cIm9iamVjdFwiPT09dChlKSYmbnVsbCE9ZSYmIXguaXNGdW5jdGlvbihlKSYmIXguaXNBcnJheShlKX0saXNOaWw6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXR9LGhhczpmdW5jdGlvbih0LGUpe3JldHVybiBudWxsIT09dCYmaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfSxzaXplOmZ1bmN0aW9uKHQpe2lmKHguaXNPYmplY3QodCkpe2lmKHQua2V5cylyZXR1cm4gdC5rZXlzKCkubGVuZ3RoO3ZhciBlPTA7Zm9yKHZhciBpIGluIHQpeC5oYXModCxpKSYmZSsrO3JldHVybiBlfXJldHVybiB0Lmxlbmd0aH0saXNOdW1iZXI6ZnVuY3Rpb24odCl7cmV0dXJuIWlzTmFOKHBhcnNlRmxvYXQodCkpJiZpc0Zpbml0ZSh0KX19O2Z1bmN0aW9uIHcodCxlKXtpZigoeC5pc05vZGUodCl8fHQ9PT13aW5kb3d8fHQ9PT1kb2N1bWVudCkmJih0PVt0XSkseC5pc0FycmF5TGlrZSh0KXx8eC5pc09iamVjdCh0KXx8KHQ9W3RdKSwwIT14LnNpemUodCkpaWYoeC5pc0FycmF5TGlrZSh0KSYmIXguaXNPYmplY3QodCkpZm9yKHZhciBpPXQubGVuZ3RoLG49MDtuPGkmJiExIT09ZS5jYWxsKHRbbl0sdFtuXSxuLHQpO24rKyk7ZWxzZSBpZih4LmlzT2JqZWN0KHQpKWZvcih2YXIgcyBpbiB0KWlmKHguaGFzKHQscykmJiExPT09ZS5jYWxsKHRbc10sdFtzXSxzLHQpKWJyZWFrfWZ1bmN0aW9uIFModCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOm51bGwsaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCxuPXRbZl09dFtmXXx8W10scz17YWxsOm4sZXZ0Om51bGwsZm91bmQ6bnVsbH07cmV0dXJuIGUmJmkmJnguc2l6ZShuKT4wJiZ3KG4sKGZ1bmN0aW9uKHQsbil7aWYodC5ldmVudE5hbWU9PWUmJnQuZm4udG9TdHJpbmcoKT09aS50b1N0cmluZygpKXJldHVybiBzLmZvdW5kPSEwLHMuZXZ0PW4sITF9KSksc31mdW5jdGlvbiBUKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxpPWUub25FbGVtZW50LG49ZS53aXRoQ2FsbGJhY2sscz1lLmF2b2lkRHVwbGljYXRlLG89dm9pZCAwPT09c3x8cyxsPWUub25jZSxyPXZvaWQgMCE9PWwmJmwsYT1lLnVzZUNhcHR1cmUsaD12b2lkIDAhPT1hJiZhLGM9YXJndW1lbnRzLmxlbmd0aD4yP2FyZ3VtZW50c1syXTp2b2lkIDAsdT1pfHxbXTtmdW5jdGlvbiBkKHQpe3guaXNGdW5jdGlvbihuKSYmbi5jYWxsKGMsdCx0aGlzKSxyJiZkLmRlc3Ryb3koKX1yZXR1cm4geC5pc1N0cmluZyh1KSYmKHU9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh1KSksZC5kZXN0cm95PWZ1bmN0aW9uKCl7dyh1LChmdW5jdGlvbihlKXt2YXIgaT1TKGUsdCxkKTtpLmZvdW5kJiZpLmFsbC5zcGxpY2UoaS5ldnQsMSksZS5yZW1vdmVFdmVudExpc3RlbmVyJiZlLnJlbW92ZUV2ZW50TGlzdGVuZXIodCxkLGgpfSkpfSx3KHUsKGZ1bmN0aW9uKGUpe3ZhciBpPVMoZSx0LGQpOyhlLmFkZEV2ZW50TGlzdGVuZXImJm8mJiFpLmZvdW5kfHwhbykmJihlLmFkZEV2ZW50TGlzdGVuZXIodCxkLGgpLGkuYWxsLnB1c2goe2V2ZW50TmFtZTp0LGZuOmR9KSl9KSksZH1mdW5jdGlvbiBrKHQsZSl7dyhlLnNwbGl0KFwiIFwiKSwoZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LmFkZChlKX0pKX1mdW5jdGlvbiBFKHQsZSl7dyhlLnNwbGl0KFwiIFwiKSwoZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2xhc3NMaXN0LnJlbW92ZShlKX0pKX1mdW5jdGlvbiBBKHQsZSl7cmV0dXJuIHQuY2xhc3NMaXN0LmNvbnRhaW5zKGUpfWZ1bmN0aW9uIEModCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4xJiZ2b2lkIDAhPT1hcmd1bWVudHNbMV0/YXJndW1lbnRzWzFdOlwiXCIsaT1hcmd1bWVudHMubGVuZ3RoPjImJnZvaWQgMCE9PWFyZ3VtZW50c1syXSYmYXJndW1lbnRzWzJdO2lmKCF0fHxcIlwiPT09ZSlyZXR1cm4hMTtpZihcIm5vbmVcIj09ZSlyZXR1cm4geC5pc0Z1bmN0aW9uKGkpJiZpKCksITE7dmFyIG49ZS5zcGxpdChcIiBcIik7dyhuLChmdW5jdGlvbihlKXtrKHQsXCJnXCIrZSl9KSksVCh2LHtvbkVsZW1lbnQ6dCxhdm9pZER1cGxpY2F0ZTohMSxvbmNlOiEwLHdpdGhDYWxsYmFjazpmdW5jdGlvbih0LGUpe3cobiwoZnVuY3Rpb24odCl7RShlLFwiZ1wiK3QpfSkpLHguaXNGdW5jdGlvbihpKSYmaSgpfX0pfWZ1bmN0aW9uIEwodCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLGk9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtmb3IoaS5pbm5lckhUTUw9dDtpLmZpcnN0Q2hpbGQ7KWUuYXBwZW5kQ2hpbGQoaS5maXJzdENoaWxkKTtyZXR1cm4gZX1mdW5jdGlvbiBNKHQsZSl7Zm9yKDt0IT09ZG9jdW1lbnQuYm9keTspe2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mKHQ9dC5wYXJlbnRFbGVtZW50KS5tYXRjaGVzP3QubWF0Y2hlcyhlKTp0Lm1zTWF0Y2hlc1NlbGVjdG9yKGUpKXJldHVybiB0fX1mdW5jdGlvbiBPKHQpe3Quc3R5bGUuZGlzcGxheT1cImJsb2NrXCJ9ZnVuY3Rpb24geih0KXt0LnN0eWxlLmRpc3BsYXk9XCJub25lXCJ9ZnVuY3Rpb24gcSgpe3JldHVybnt3aWR0aDp3aW5kb3cuaW5uZXJXaWR0aHx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudFdpZHRofHxkb2N1bWVudC5ib2R5LmNsaWVudFdpZHRoLGhlaWdodDp3aW5kb3cuaW5uZXJIZWlnaHR8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRIZWlnaHR8fGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0fX1mdW5jdGlvbiBOKHQpe2lmKEEodC50YXJnZXQsXCJwbHlyLS1odG1sNVwiKSl7dmFyIGU9TSh0LnRhcmdldCxcIi5nc2xpZGUtbWVkaWFcIik7XCJlbnRlcmZ1bGxzY3JlZW5cIj09dC50eXBlJiZrKGUsXCJmdWxsc2NyZWVuXCIpLFwiZXhpdGZ1bGxzY3JlZW5cIj09dC50eXBlJiZFKGUsXCJmdWxsc2NyZWVuXCIpfX12YXIgST1mdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpudWxsLGU9YXJndW1lbnRzLmxlbmd0aD4xP2FyZ3VtZW50c1sxXTp2b2lkIDAsaT17aHJlZjpcIlwiLHRpdGxlOlwiXCIsdHlwZTpcIlwiLGRlc2NyaXB0aW9uOlwiXCIsZGVzY1Bvc2l0aW9uOmUuZGVzY1Bvc2l0aW9uLGVmZmVjdDpcIlwiLHdpZHRoOlwiXCIsaGVpZ2h0OlwiXCIsbm9kZTp0fTtpZih4LmlzT2JqZWN0KHQpJiYheC5pc05vZGUodCkpcmV0dXJuIGIoaSx0KTt2YXIgbj1cIlwiLHM9dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWdsaWdodGJveFwiKSxvPXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcImFcIj09PW8mJihuPXQuaHJlZiksXCJpbWdcIj09PW8mJihuPXQuc3JjKSxpLmhyZWY9bix3KGksKGZ1bmN0aW9uKG4scyl7eC5oYXMoZSxzKSYmXCJ3aWR0aFwiIT09cyYmKGlbc109ZVtzXSk7dmFyIG89dC5kYXRhc2V0W3NdO3guaXNOaWwobyl8fChpW3NdPW8pfSkpLGkudHlwZXx8KGkudHlwZT1XKG4pKSx4LmlzTmlsKHMpKXtpZihcImFcIj09byl7dmFyIGw9dC50aXRsZTt4LmlzTmlsKGwpfHxcIlwiPT09bHx8KGkudGl0bGU9bCl9aWYoXCJpbWdcIj09byl7dmFyIHI9dC5hbHQ7eC5pc05pbChyKXx8XCJcIj09PXJ8fChpLnRpdGxlPXIpfXZhciBhPXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1kZXNjcmlwdGlvblwiKTt4LmlzTmlsKGEpfHxcIlwiPT09YXx8KGkuZGVzY3JpcHRpb249YSl9ZWxzZXt2YXIgaD1bXTt3KGksKGZ1bmN0aW9uKHQsZSl7aC5wdXNoKFwiO1xcXFxzP1wiK2UpfSkpLGg9aC5qb2luKFwiXFxcXHM/OnxcIiksXCJcIiE9PXMudHJpbSgpJiZ3KGksKGZ1bmN0aW9uKHQsZSl7dmFyIG49cyxvPW5ldyBSZWdFeHAoXCJzP1wiK2UrXCJzPzpzPyguKj8pKFwiK2grXCJzPzp8JClcIiksbD1uLm1hdGNoKG8pO2lmKGwmJmwubGVuZ3RoJiZsWzFdKXt2YXIgcj1sWzFdLnRyaW0oKS5yZXBsYWNlKC87XFxzKiQvLFwiXCIpO2lbZV09cn19KSl9aWYoaS5kZXNjcmlwdGlvbiYmXCIuXCI9PWkuZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsMSkmJmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoaS5kZXNjcmlwdGlvbikpaS5kZXNjcmlwdGlvbj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKGkuZGVzY3JpcHRpb24pLmlubmVySFRNTDtlbHNle3ZhciBjPXQucXVlcnlTZWxlY3RvcihcIi5nbGlnaHRib3gtZGVzY1wiKTtjJiYoaS5kZXNjcmlwdGlvbj1jLmlubmVySFRNTCl9dmFyIHU9XCJ2aWRlb1wiPT1pLnR5cGU/ZS52aWRlb3NXaWR0aDplLndpZHRoLGQ9ZS5oZWlnaHQ7cmV0dXJuIGkud2lkdGg9eC5oYXMoaSxcIndpZHRoXCIpJiZcIlwiIT09aS53aWR0aD9pLndpZHRoOnUsaS5oZWlnaHQ9eC5oYXMoaSxcImhlaWdodFwiKSYmXCJcIiE9PWkuaGVpZ2h0P2kuaGVpZ2h0OmQsaX0sRD1mdW5jdGlvbigpe3ZhciB0PXRoaXMsZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06bnVsbCxpPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTp7fSxuPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl07aWYoQShlLFwibG9hZGVkXCIpKXJldHVybiExO3guaXNGdW5jdGlvbih0aGlzLnNldHRpbmdzLmJlZm9yZVNsaWRlTG9hZCkmJnRoaXMuc2V0dGluZ3MuYmVmb3JlU2xpZGVMb2FkKGUsaSk7dmFyIHM9aS50eXBlLG89aS5kZXNjUG9zaXRpb24sbD1lLnF1ZXJ5U2VsZWN0b3IoXCIuZ3NsaWRlLW1lZGlhXCIpLHI9ZS5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS10aXRsZVwiKSxhPWUucXVlcnlTZWxlY3RvcihcIi5nc2xpZGUtZGVzY1wiKSxoPWUucXVlcnlTZWxlY3RvcihcIi5nZGVzYy1pbm5lclwiKSxkPW47aWYoeC5pc0Z1bmN0aW9uKHRoaXMuc2V0dGluZ3MuYWZ0ZXJTbGlkZUxvYWQpJiYoZD1mdW5jdGlvbigpe3guaXNGdW5jdGlvbihuKSYmbigpLHQuc2V0dGluZ3MuYWZ0ZXJTbGlkZUxvYWQoZSxpKX0pLFwiXCI9PWkudGl0bGUmJlwiXCI9PWkuZGVzY3JpcHRpb24/aCYmaC5wYXJlbnROb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoaC5wYXJlbnROb2RlKToociYmXCJcIiE9PWkudGl0bGU/ci5pbm5lckhUTUw9aS50aXRsZTpyLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQociksYSYmXCJcIiE9PWkuZGVzY3JpcHRpb24/dSYmdGhpcy5zZXR0aW5ncy5tb3JlTGVuZ3RoPjA/KGkuc21hbGxEZXNjcmlwdGlvbj1HKGkuZGVzY3JpcHRpb24sdGhpcy5zZXR0aW5ncy5tb3JlTGVuZ3RoLHRoaXMuc2V0dGluZ3MubW9yZVRleHQpLGEuaW5uZXJIVE1MPWkuc21hbGxEZXNjcmlwdGlvbixaLmFwcGx5KHRoaXMsW2EsaV0pKTphLmlubmVySFRNTD1pLmRlc2NyaXB0aW9uOmEucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhKSxrKGwucGFyZW50Tm9kZSxcImRlc2MtXCIuY29uY2F0KG8pKSxrKGgucGFyZW50Tm9kZSxcImRlc2NyaXB0aW9uLVwiLmNvbmNhdChvKSkpLGsobCxcImdzbGlkZS1cIi5jb25jYXQocykpLGsoZSxcImxvYWRlZFwiKSxcInZpZGVvXCI9PT1zKXJldHVybiBrKGwucGFyZW50Tm9kZSxcImd2aWRlby1jb250YWluZXJcIiksbC5pbnNlcnRCZWZvcmUoTCgnPGRpdiBjbGFzcz1cImd2aWRlby13cmFwcGVyXCI+PC9kaXY+JyksbC5maXJzdENoaWxkKSx2b2lkIFguYXBwbHkodGhpcyxbZSxpLGRdKTtpZihcImV4dGVybmFsXCI9PT1zKXt2YXIgZz1ZKHt1cmw6aS5ocmVmLHdpZHRoOmkud2lkdGgsaGVpZ2h0OmkuaGVpZ2h0LGNhbGxiYWNrOmR9KTtyZXR1cm4gbC5wYXJlbnROb2RlLnN0eWxlLm1heFdpZHRoPVwiXCIuY29uY2F0KGkud2lkdGgsXCJweFwiKSx2b2lkIGwuYXBwZW5kQ2hpbGQoZyl9aWYoXCJpbmxpbmVcIiE9PXMpe2lmKFwiaW1hZ2VcIj09PXMpe3ZhciBwPW5ldyBJbWFnZTtyZXR1cm4gcC5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLChmdW5jdGlvbigpeyF1JiZwLm5hdHVyYWxXaWR0aD5wLm9mZnNldFdpZHRoJiYoayhwLFwiem9vbWFibGVcIiksbmV3IGMocCxlLChmdW5jdGlvbigpe3QucmVzaXplKGUpfSkpKSx4LmlzRnVuY3Rpb24oZCkmJmQoKX0pLCExKSxwLnNyYz1pLmhyZWYsdm9pZCBsLmluc2VydEJlZm9yZShwLGwuZmlyc3RDaGlsZCl9eC5pc0Z1bmN0aW9uKGQpJiZkKCl9ZWxzZSBQLmFwcGx5KHRoaXMsW2UsaSxkXSl9O2Z1bmN0aW9uIFgodCxlLGkpe3ZhciBuPXRoaXMscz1cImd2aWRlb1wiK2UuaW5kZXgsbz10LnF1ZXJ5U2VsZWN0b3IoXCIuZ3ZpZGVvLXdyYXBwZXJcIik7Qih0aGlzLnNldHRpbmdzLnBseXIuY3NzKTt2YXIgbD1lLmhyZWYscj1sb2NhdGlvbi5wcm90b2NvbC5yZXBsYWNlKFwiOlwiLFwiXCIpLGE9XCJcIixoPVwiXCIsYz0hMTtcImZpbGVcIj09ciYmKHI9XCJodHRwXCIpLG8ucGFyZW50Tm9kZS5zdHlsZS5tYXhXaWR0aD1cIlwiLmNvbmNhdChlLndpZHRoLFwicHhcIiksQih0aGlzLnNldHRpbmdzLnBseXIuanMsXCJQbHlyXCIsKGZ1bmN0aW9uKCl7aWYobC5tYXRjaCgvdmltZW9cXC5jb21cXC8oWzAtOV0qKS8pKXt2YXIgdD0vdmltZW8uKlxcLyhcXGQrKS9pLmV4ZWMobCk7YT1cInZpbWVvXCIsaD10WzFdfWlmKGwubWF0Y2goLyh5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pXFwvd2F0Y2hcXD92PShbYS16QS1aMC05XFwtX10rKS8pfHxsLm1hdGNoKC95b3V0dVxcLmJlXFwvKFthLXpBLVowLTlcXC1fXSspLyl8fGwubWF0Y2goLyh5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pXFwvZW1iZWRcXC8oW2EtekEtWjAtOVxcLV9dKykvKSl7dmFyIHI9ZnVuY3Rpb24odCl7dmFyIGU9XCJcIjtlPXZvaWQgMCE9PSh0PXQucmVwbGFjZSgvKD58PCkvZ2ksXCJcIikuc3BsaXQoLyh2aVxcL3x2PXxcXC92XFwvfHlvdXR1XFwuYmVcXC98XFwvZW1iZWRcXC8pLykpWzJdPyhlPXRbMl0uc3BsaXQoL1teMC05YS16X1xcLV0vaSkpWzBdOnQ7cmV0dXJuIGV9KGwpO2E9XCJ5b3V0dWJlXCIsaD1yfWlmKG51bGwhPT1sLm1hdGNoKC9cXC4obXA0fG9nZ3x3ZWJtfG1vdikkLykpe2E9XCJsb2NhbFwiO3ZhciB1PSc8dmlkZW8gaWQ9XCInK3MrJ1wiICc7dSs9J3N0eWxlPVwiYmFja2dyb3VuZDojMDAwOyBtYXgtd2lkdGg6ICcuY29uY2F0KGUud2lkdGgsJ3B4O1wiICcpLHUrPSdwcmVsb2FkPVwibWV0YWRhdGFcIiAnLHUrPSd4LXdlYmtpdC1haXJwbGF5PVwiYWxsb3dcIiAnLHUrPSd3ZWJraXQtcGxheXNpbmxpbmU9XCJcIiAnLHUrPVwiY29udHJvbHMgXCIsdSs9J2NsYXNzPVwiZ3ZpZGVvLWxvY2FsXCI+Jzt2YXIgZD1sLnRvTG93ZXJDYXNlKCkuc3BsaXQoXCIuXCIpLnBvcCgpLGc9e21wNDpcIlwiLG9nZzpcIlwiLHdlYm06XCJcIn07Zm9yKHZhciBwIGluIGdbZD1cIm1vdlwiPT1kP1wibXA0XCI6ZF09bCxnKWlmKGcuaGFzT3duUHJvcGVydHkocCkpe3ZhciB2PWdbcF07ZS5oYXNPd25Qcm9wZXJ0eShwKSYmKHY9ZVtwXSksXCJcIiE9PXYmJih1Kz0nPHNvdXJjZSBzcmM9XCInLmNvbmNhdCh2LCdcIiB0eXBlPVwidmlkZW8vJykuY29uY2F0KHAsJ1wiPicpKX1jPUwodSs9XCI8L3ZpZGVvPlwiKX12YXIgZj1jfHxMKCc8ZGl2IGlkPVwiJy5jb25jYXQocywnXCIgZGF0YS1wbHlyLXByb3ZpZGVyPVwiJykuY29uY2F0KGEsJ1wiIGRhdGEtcGx5ci1lbWJlZC1pZD1cIicpLmNvbmNhdChoLCdcIj48L2Rpdj4nKSk7ayhvLFwiXCIuY29uY2F0KGEsXCItdmlkZW8gZ3ZpZGVvXCIpKSxvLmFwcGVuZENoaWxkKGYpLG8uc2V0QXR0cmlidXRlKFwiZGF0YS1pZFwiLHMpO3ZhciB5PXguaGFzKG4uc2V0dGluZ3MucGx5cixcImNvbmZpZ1wiKT9uLnNldHRpbmdzLnBseXIuY29uZmlnOnt9LGI9bmV3IFBseXIoXCIjXCIrcyx5KTtiLm9uKFwicmVhZHlcIiwoZnVuY3Rpb24odCl7dmFyIGU9dC5kZXRhaWwucGx5cjttW3NdPWUseC5pc0Z1bmN0aW9uKGkpJiZpKCl9KSksYi5vbihcImVudGVyZnVsbHNjcmVlblwiLE4pLGIub24oXCJleGl0ZnVsbHNjcmVlblwiLE4pfSkpfWZ1bmN0aW9uIFkodCl7dmFyIGU9dC51cmwsaT10LndpZHRoLG49dC5oZWlnaHQscz10LmFsbG93LG89dC5jYWxsYmFjayxsPXQuYXBwZW5kVG8scj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpLGE9d2luZG93LmlubmVyV2lkdGh8fGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aHx8ZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtyZXR1cm4gci5jbGFzc05hbWU9XCJ2aW1lby12aWRlbyBndmlkZW9cIixyLnNyYz1lLG4mJihyLnN0eWxlLmhlaWdodD11JiZhPDc2Nz9cIlwiOlwiXCIuY29uY2F0KG4sXCJweFwiKSksaSYmKHIuc3R5bGUud2lkdGg9XCJcIi5jb25jYXQoaSxcInB4XCIpKSxzJiZyLnNldEF0dHJpYnV0ZShcImFsbG93XCIscyksci5vbmxvYWQ9ZnVuY3Rpb24oKXtrKHIsXCJub2RlLXJlYWR5XCIpLHguaXNGdW5jdGlvbihvKSYmbygpfSxsJiZsLmFwcGVuZENoaWxkKHIpLHJ9ZnVuY3Rpb24gQih0LGUsaSl7aWYoeC5pc05pbCh0KSljb25zb2xlLmVycm9yKFwiSW5qZWN0IHZpZGVvcyBhcGkgZXJyb3JcIik7ZWxzZXt2YXIgbjtpZih4LmlzRnVuY3Rpb24oZSkmJihpPWUsZT0hMSksLTEhPT10LmluZGV4T2YoXCIuY3NzXCIpKXtpZigobj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdsaW5rW2hyZWY9XCInK3QrJ1wiXScpKSYmbi5sZW5ndGg+MClyZXR1cm4gdm9pZCh4LmlzRnVuY3Rpb24oaSkmJmkoKSk7dmFyIHM9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLG89cy5xdWVyeVNlbGVjdG9yQWxsKCdsaW5rW3JlbD1cInN0eWxlc2hlZXRcIl0nKSxsPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO3JldHVybiBsLnJlbD1cInN0eWxlc2hlZXRcIixsLnR5cGU9XCJ0ZXh0L2Nzc1wiLGwuaHJlZj10LGwubWVkaWE9XCJhbGxcIixvP3MuaW5zZXJ0QmVmb3JlKGwsb1swXSk6cy5hcHBlbmRDaGlsZChsKSx2b2lkKHguaXNGdW5jdGlvbihpKSYmaSgpKX1pZigobj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHRbc3JjPVwiJyt0KydcIl0nKSkmJm4ubGVuZ3RoPjApe2lmKHguaXNGdW5jdGlvbihpKSl7aWYoeC5pc1N0cmluZyhlKSlyZXR1cm4gRigoZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09d2luZG93W2VdfSksKGZ1bmN0aW9uKCl7aSgpfSkpLCExO2koKX19ZWxzZXt2YXIgcj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO3IudHlwZT1cInRleHQvamF2YXNjcmlwdFwiLHIuc3JjPXQsci5vbmxvYWQ9ZnVuY3Rpb24oKXtpZih4LmlzRnVuY3Rpb24oaSkpe2lmKHguaXNTdHJpbmcoZSkpcmV0dXJuIEYoKGZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXdpbmRvd1tlXX0pLChmdW5jdGlvbigpe2koKX0pKSwhMTtpKCl9fSxkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHIpfX19ZnVuY3Rpb24gRih0LGUsaSxuKXtpZih0KCkpZSgpO2Vsc2V7dmFyIHM7aXx8KGk9MTAwKTt2YXIgbz1zZXRJbnRlcnZhbCgoZnVuY3Rpb24oKXt0KCkmJihjbGVhckludGVydmFsKG8pLHMmJmNsZWFyVGltZW91dChzKSxlKCkpfSksaSk7biYmKHM9c2V0VGltZW91dCgoZnVuY3Rpb24oKXtjbGVhckludGVydmFsKG8pfSksbikpfX1mdW5jdGlvbiBQKHQsZSxpKXt2YXIgbj10aGlzLHM9dC5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS1tZWRpYVwiKSxvPWUuaHJlZi5zcGxpdChcIiNcIikucG9wKCkudHJpbSgpLGw9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobyk7aWYoIWwpcmV0dXJuITE7dmFyIHI9bC5jbG9uZU5vZGUoITApO3Iuc3R5bGUuaGVpZ2h0PXguaXNOdW1iZXIoZS5oZWlnaHQpP1wiXCIuY29uY2F0KGUuaGVpZ2h0LFwicHhcIik6ZS5oZWlnaHQsci5zdHlsZS5tYXhXaWR0aD14LmlzTnVtYmVyKGUud2lkdGgpP1wiXCIuY29uY2F0KGUud2lkdGgsXCJweFwiKTplLndpZHRoLGsocixcImdpbmxpbmVkLWNvbnRlbnRcIikscy5hcHBlbmRDaGlsZChyKSx0aGlzLmV2ZW50c1tcImlubGluZWNsb3NlXCIrb109VChcImNsaWNrXCIse29uRWxlbWVudDpzLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZ3RyaWdnZXItY2xvc2VcIiksd2l0aENhbGxiYWNrOmZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxuLmNsb3NlKCl9fSkseC5pc0Z1bmN0aW9uKGkpJiZpKCl9dmFyIFc9ZnVuY3Rpb24odCl7dmFyIGU9dDtpZihudWxsIT09KHQ9dC50b0xvd2VyQ2FzZSgpKS5tYXRjaCgvXFwuKGpwZWd8anBnfGpwZXxnaWZ8cG5nfGFwbnx3ZWJwfHN2ZykkLykpcmV0dXJuXCJpbWFnZVwiO2lmKHQubWF0Y2goLyh5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pXFwvd2F0Y2hcXD92PShbYS16QS1aMC05XFwtX10rKS8pfHx0Lm1hdGNoKC95b3V0dVxcLmJlXFwvKFthLXpBLVowLTlcXC1fXSspLyl8fHQubWF0Y2goLyh5b3V0dWJlXFwuY29tfHlvdXR1YmUtbm9jb29raWVcXC5jb20pXFwvZW1iZWRcXC8oW2EtekEtWjAtOVxcLV9dKykvKSlyZXR1cm5cInZpZGVvXCI7aWYodC5tYXRjaCgvdmltZW9cXC5jb21cXC8oWzAtOV0qKS8pKXJldHVyblwidmlkZW9cIjtpZihudWxsIT09dC5tYXRjaCgvXFwuKG1wNHxvZ2d8d2VibXxtb3YpJC8pKXJldHVyblwidmlkZW9cIjtpZih0LmluZGV4T2YoXCIjXCIpPi0xJiZcIlwiIT09ZS5zcGxpdChcIiNcIikucG9wKCkudHJpbSgpKXJldHVyblwiaW5saW5lXCI7cmV0dXJuIHQuaW5jbHVkZXMoXCJnYWpheD10cnVlXCIpP1wiYWpheFwiOlwiZXh0ZXJuYWxcIn07ZnVuY3Rpb24gXygpe3ZhciB0PXRoaXM7aWYodGhpcy5ldmVudHMuaGFzT3duUHJvcGVydHkoXCJrZXlib2FyZFwiKSlyZXR1cm4hMTt0aGlzLmV2ZW50cy5rZXlib2FyZD1UKFwia2V5ZG93blwiLHtvbkVsZW1lbnQ6d2luZG93LHdpdGhDYWxsYmFjazpmdW5jdGlvbihlLGkpe3ZhciBuPShlPWV8fHdpbmRvdy5ldmVudCkua2V5Q29kZTtpZig5PT1uKXtlLnByZXZlbnREZWZhdWx0KCk7dmFyIG89ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5nYnRuXCIpO2lmKCFvfHxvLmxlbmd0aDw9MClyZXR1cm47dmFyIGw9cyhvKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBBKHQsXCJmb2N1c2VkXCIpfSkpO2lmKCFsLmxlbmd0aCl7dmFyIHI9ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmdidG5bdGFiaW5kZXg9XCIwXCJdJyk7cmV0dXJuIHZvaWQociYmKHIuZm9jdXMoKSxrKHIsXCJmb2N1c2VkXCIpKSl9by5mb3JFYWNoKChmdW5jdGlvbih0KXtyZXR1cm4gRSh0LFwiZm9jdXNlZFwiKX0pKTt2YXIgYT1sWzBdLmdldEF0dHJpYnV0ZShcInRhYmluZGV4XCIpO2E9YXx8XCIwXCI7dmFyIGg9cGFyc2VJbnQoYSkrMTtoPm8ubGVuZ3RoLTEmJihoPVwiMFwiKTt2YXIgYz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZ2J0blt0YWJpbmRleD1cIicuY29uY2F0KGgsJ1wiXScpKTtjJiYoYy5mb2N1cygpLGsoYyxcImZvY3VzZWRcIikpfTM5PT1uJiZ0Lm5leHRTbGlkZSgpLDM3PT1uJiZ0LnByZXZTbGlkZSgpLDI3PT1uJiZ0LmNsb3NlKCl9fSl9ZnVuY3Rpb24gaigpe3ZhciB0PXRoaXM7aWYodGhpcy5ldmVudHMuaGFzT3duUHJvcGVydHkoXCJ0b3VjaFwiKSlyZXR1cm4hMTt2YXIgZSxpLG4scz1xKCksbz1zLndpZHRoLGw9cy5oZWlnaHQscj0hMSxhPW51bGwsYz1udWxsLHU9bnVsbCxkPSExLGc9MSxwPTEsdj0hMSxmPSExLG09bnVsbCx5PW51bGwsYj1udWxsLHg9bnVsbCx3PTAsUz0wLFQ9ITEsQz0hMSxMPXt9LE09e30sTz0wLHo9MCxOPXRoaXMsST1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdsaWdodGJveC1zbGlkZXJcIiksRD1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdvdmVybGF5XCIpLFg9KHRoaXMubG9vcCgpLG5ldyBoKEkse3RvdWNoU3RhcnQ6ZnVuY3Rpb24odCl7aWYoQSh0LnRhcmdldFRvdWNoZXNbMF0udGFyZ2V0LFwiZ2lubmVyLWNvbnRhaW5lclwiKSlyZXR1cm4gcj0hMSwhMTtyPSEwLE09dC50YXJnZXRUb3VjaGVzWzBdLEwucGFnZVg9dC50YXJnZXRUb3VjaGVzWzBdLnBhZ2VYLEwucGFnZVk9dC50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZLE89dC50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFgsej10LnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WSxhPU4uYWN0aXZlU2xpZGUsYz1hLnF1ZXJ5U2VsZWN0b3IoXCIuZ3NsaWRlLW1lZGlhXCIpLG49YS5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS1pbmxpbmVcIiksdT1udWxsLEEoYyxcImdzbGlkZS1pbWFnZVwiKSYmKHU9Yy5xdWVyeVNlbGVjdG9yKFwiaW1nXCIpKSxFKEQsXCJncmVzZXRcIil9LHRvdWNoTW92ZTpmdW5jdGlvbihzKXtpZihyJiYoTT1zLnRhcmdldFRvdWNoZXNbMF0sIXYmJiFmKSl7aWYobiYmbi5vZmZzZXRIZWlnaHQ+bCl7dmFyIGE9TC5wYWdlWC1NLnBhZ2VYO2lmKE1hdGguYWJzKGEpPD0xMylyZXR1cm4hMX1kPSEwO3ZhciBoLGc9cy50YXJnZXRUb3VjaGVzWzBdLmNsaWVudFgscD1zLnRhcmdldFRvdWNoZXNbMF0uY2xpZW50WSxtPU8tZyx5PXotcDtpZihNYXRoLmFicyhtKT5NYXRoLmFicyh5KT8oVD0hMSxDPSEwKTooQz0hMSxUPSEwKSxlPU0ucGFnZVgtTC5wYWdlWCx3PTEwMCplL28saT1NLnBhZ2VZLUwucGFnZVksUz0xMDAqaS9sLFQmJnUmJihoPTEtTWF0aC5hYnMoaSkvbCxELnN0eWxlLm9wYWNpdHk9aCx0LnNldHRpbmdzLnRvdWNoRm9sbG93QXhpcyYmKHc9MCkpLEMmJihoPTEtTWF0aC5hYnMoZSkvbyxjLnN0eWxlLm9wYWNpdHk9aCx0LnNldHRpbmdzLnRvdWNoRm9sbG93QXhpcyYmKFM9MCkpLCF1KXJldHVybiBIKGMsXCJ0cmFuc2xhdGUzZChcIi5jb25jYXQodyxcIiUsIDAsIDApXCIpKTtIKGMsXCJ0cmFuc2xhdGUzZChcIi5jb25jYXQodyxcIiUsIFwiKS5jb25jYXQoUyxcIiUsIDApXCIpKX19LHRvdWNoRW5kOmZ1bmN0aW9uKCl7aWYocil7aWYoZD0hMSxmfHx2KXJldHVybiBiPW0sdm9pZCh4PXkpO3ZhciBlPU1hdGguYWJzKHBhcnNlSW50KFMpKSxpPU1hdGguYWJzKHBhcnNlSW50KHcpKTtpZighKGU+MjkmJnUpKXJldHVybiBlPDI5JiZpPDI1PyhrKEQsXCJncmVzZXRcIiksRC5zdHlsZS5vcGFjaXR5PTEsVihjKSk6dm9pZCAwO3QuY2xvc2UoKX19LG11bHRpcG9pbnRFbmQ6ZnVuY3Rpb24oKXtzZXRUaW1lb3V0KChmdW5jdGlvbigpe3Y9ITF9KSw1MCl9LG11bHRpcG9pbnRTdGFydDpmdW5jdGlvbigpe3Y9ITAsZz1wfHwxfSxwaW5jaDpmdW5jdGlvbih0KXtpZighdXx8ZClyZXR1cm4hMTt2PSEwLHUuc2NhbGVYPXUuc2NhbGVZPWcqdC56b29tO3ZhciBlPWcqdC56b29tO2lmKGY9ITAsZTw9MSlyZXR1cm4gZj0hMSxlPTEseD1udWxsLGI9bnVsbCxtPW51bGwseT1udWxsLHZvaWQgdS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwiXCIpO2U+NC41JiYoZT00LjUpLHUuc3R5bGUudHJhbnNmb3JtPVwic2NhbGUzZChcIi5jb25jYXQoZSxcIiwgXCIpLmNvbmNhdChlLFwiLCAxKVwiKSxwPWV9LHByZXNzTW92ZTpmdW5jdGlvbih0KXtpZihmJiYhdil7dmFyIGU9TS5wYWdlWC1MLnBhZ2VYLGk9TS5wYWdlWS1MLnBhZ2VZO2ImJihlKz1iKSx4JiYoaSs9eCksbT1lLHk9aTt2YXIgbj1cInRyYW5zbGF0ZTNkKFwiLmNvbmNhdChlLFwicHgsIFwiKS5jb25jYXQoaSxcInB4LCAwKVwiKTtwJiYobis9XCIgc2NhbGUzZChcIi5jb25jYXQocCxcIiwgXCIpLmNvbmNhdChwLFwiLCAxKVwiKSksSCh1LG4pfX0sc3dpcGU6ZnVuY3Rpb24oZSl7aWYoIWYpaWYodil2PSExO2Vsc2V7aWYoXCJMZWZ0XCI9PWUuZGlyZWN0aW9uKXtpZih0LmluZGV4PT10LmVsZW1lbnRzLmxlbmd0aC0xKXJldHVybiBWKGMpO3QubmV4dFNsaWRlKCl9aWYoXCJSaWdodFwiPT1lLmRpcmVjdGlvbil7aWYoMD09dC5pbmRleClyZXR1cm4gVihjKTt0LnByZXZTbGlkZSgpfX19fSkpO3RoaXMuZXZlbnRzLnRvdWNoPVh9ZnVuY3Rpb24gSCh0KXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjEmJnZvaWQgMCE9PWFyZ3VtZW50c1sxXT9hcmd1bWVudHNbMV06XCJcIjtpZihcIlwiPT1lKXJldHVybiB0LnN0eWxlLndlYmtpdFRyYW5zZm9ybT1cIlwiLHQuc3R5bGUuTW96VHJhbnNmb3JtPVwiXCIsdC5zdHlsZS5tc1RyYW5zZm9ybT1cIlwiLHQuc3R5bGUuT1RyYW5zZm9ybT1cIlwiLHQuc3R5bGUudHJhbnNmb3JtPVwiXCIsITE7dC5zdHlsZS53ZWJraXRUcmFuc2Zvcm09ZSx0LnN0eWxlLk1velRyYW5zZm9ybT1lLHQuc3R5bGUubXNUcmFuc2Zvcm09ZSx0LnN0eWxlLk9UcmFuc2Zvcm09ZSx0LnN0eWxlLnRyYW5zZm9ybT1lfWZ1bmN0aW9uIFYodCl7dmFyIGU9QSh0LFwiZ3NsaWRlLW1lZGlhXCIpP3Q6dC5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS1tZWRpYVwiKSxpPXQucXVlcnlTZWxlY3RvcihcIi5nc2xpZGUtZGVzY3JpcHRpb25cIik7ayhlLFwiZ3Jlc2V0XCIpLEgoZSxcInRyYW5zbGF0ZTNkKDAsIDAsIDApXCIpO1QocCx7b25FbGVtZW50OmUsb25jZTohMCx3aXRoQ2FsbGJhY2s6ZnVuY3Rpb24odCxpKXtFKGUsXCJncmVzZXRcIil9fSk7ZS5zdHlsZS5vcGFjaXR5PVwiXCIsaSYmKGkuc3R5bGUub3BhY2l0eT1cIlwiKX1mdW5jdGlvbiBHKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdP2FyZ3VtZW50c1sxXTo1MCxpPWFyZ3VtZW50cy5sZW5ndGg+MiYmdm9pZCAwIT09YXJndW1lbnRzWzJdJiZhcmd1bWVudHNbMl0sbj1pO2lmKCh0PXQudHJpbSgpKS5sZW5ndGg8PWUpcmV0dXJuIHQ7dmFyIHM9dC5zdWJzdHIoMCxlLTEpO3JldHVybiBuP3MrJy4uLiA8YSBocmVmPVwiI1wiIGNsYXNzPVwiZGVzYy1tb3JlXCI+JytpK1wiPC9hPlwiOnN9ZnVuY3Rpb24gWih0LGUpe3ZhciBpPXQucXVlcnlTZWxlY3RvcihcIi5kZXNjLW1vcmVcIik7aWYoIWkpcmV0dXJuITE7VChcImNsaWNrXCIse29uRWxlbWVudDppLHdpdGhDYWxsYmFjazpmdW5jdGlvbih0LGkpe3QucHJldmVudERlZmF1bHQoKTt2YXIgbj1kb2N1bWVudC5ib2R5LHM9TShpLFwiLmdzbGlkZS1kZXNjXCIpO2lmKCFzKXJldHVybiExO3MuaW5uZXJIVE1MPWUuZGVzY3JpcHRpb24sayhuLFwiZ2Rlc2Mtb3BlblwiKTt2YXIgbz1UKFwiY2xpY2tcIix7b25FbGVtZW50OltuLE0ocyxcIi5nc2xpZGUtZGVzY3JpcHRpb25cIildLHdpdGhDYWxsYmFjazpmdW5jdGlvbih0LGkpe1wiYVwiIT09dC50YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSYmKEUobixcImdkZXNjLW9wZW5cIiksayhuLFwiZ2Rlc2MtY2xvc2VkXCIpLHMuaW5uZXJIVE1MPWUuc21hbGxEZXNjcmlwdGlvbixaKHMsZSksc2V0VGltZW91dCgoZnVuY3Rpb24oKXtFKG4sXCJnZGVzYy1jbG9zZWRcIil9KSw0MDApLG8uZGVzdHJveSgpKX19KX19KX12YXIgUj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoaSl7ZSh0aGlzLHQpLHRoaXMuc2V0dGluZ3M9Yih5LGl8fHt9KSx0aGlzLmVmZmVjdHNDbGFzc2VzPXRoaXMuZ2V0QW5pbWF0aW9uQ2xhc3NlcygpLHRoaXMuc2xpZGVzRGF0YT17fX1yZXR1cm4gbih0LFt7a2V5OlwiaW5pdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmJhc2VFdmVudHM9VChcImNsaWNrXCIse29uRWxlbWVudDpcIi5cIi5jb25jYXQodGhpcy5zZXR0aW5ncy5zZWxlY3Rvciksd2l0aENhbGxiYWNrOmZ1bmN0aW9uKGUsaSl7ZS5wcmV2ZW50RGVmYXVsdCgpLHQub3BlbihpKX19KX19LHtrZXk6XCJvcGVuXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06bnVsbDtpZih0aGlzLmVsZW1lbnRzPXRoaXMuZ2V0RWxlbWVudHModCksMD09dGhpcy5lbGVtZW50cy5sZW5ndGgpcmV0dXJuITE7dGhpcy5hY3RpdmVTbGlkZT1udWxsLHRoaXMucHJldkFjdGl2ZVNsaWRlSW5kZXg9bnVsbCx0aGlzLnByZXZBY3RpdmVTbGlkZT1udWxsO3ZhciBlPXRoaXMuc2V0dGluZ3Muc3RhcnRBdDt0JiZ4LmlzTmlsKGUpJiYoZT10aGlzLmVsZW1lbnRzLmluZGV4T2YodCkpPDAmJihlPTApLHguaXNOaWwoZSkmJihlPTApLHRoaXMuYnVpbGQoKSxDKHRoaXMub3ZlcmxheSxcIm5vbmVcIj09dGhpcy5zZXR0aW5ncy5vcGVuRWZmZWN0P1wibm9uZVwiOnRoaXMuc2V0dGluZ3MuY3NzRWZlY3RzLmZhZGUuaW4pO3ZhciBpPWRvY3VtZW50LmJvZHk7aWYoaS5zdHlsZS53aWR0aD1cIlwiLmNvbmNhdChpLm9mZnNldFdpZHRoLFwicHhcIiksayhpLFwiZ2xpZ2h0Ym94LW9wZW5cIiksayhnLFwiZ2xpZ2h0Ym94LW9wZW5cIiksdSYmKGsoZG9jdW1lbnQuYm9keSxcImdsaWdodGJveC1tb2JpbGVcIiksdGhpcy5zZXR0aW5ncy5zbGlkZUVmZmVjdD1cInNsaWRlXCIpLHRoaXMuc2hvd1NsaWRlKGUsITApLDE9PXRoaXMuZWxlbWVudHMubGVuZ3RoPyh6KHRoaXMucHJldkJ1dHRvbikseih0aGlzLm5leHRCdXR0b24pKTooTyh0aGlzLnByZXZCdXR0b24pLE8odGhpcy5uZXh0QnV0dG9uKSksdGhpcy5saWdodGJveE9wZW49ITAseC5pc0Z1bmN0aW9uKHRoaXMuc2V0dGluZ3Mub25PcGVuKSYmdGhpcy5zZXR0aW5ncy5vbk9wZW4oKSx1JiZkJiZ0aGlzLnNldHRpbmdzLnRvdWNoTmF2aWdhdGlvbilyZXR1cm4gai5hcHBseSh0aGlzKSwhMTt0aGlzLnNldHRpbmdzLmtleWJvYXJkTmF2aWdhdGlvbiYmXy5hcHBseSh0aGlzKX19LHtrZXk6XCJzaG93U2xpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06MCxpPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV07Tyh0aGlzLmxvYWRlciksdGhpcy5pbmRleD1wYXJzZUludChlKTt2YXIgbj10aGlzLnNsaWRlc0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLmN1cnJlbnRcIik7biYmRShuLFwiY3VycmVudFwiKSx0aGlzLnNsaWRlQW5pbWF0ZU91dCgpO3ZhciBzPXRoaXMuc2xpZGVzQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZ3NsaWRlXCIpW2VdO2lmKEEocyxcImxvYWRlZFwiKSl0aGlzLnNsaWRlQW5pbWF0ZUluKHMsaSkseih0aGlzLmxvYWRlcik7ZWxzZXtPKHRoaXMubG9hZGVyKTt2YXIgbz1JKHRoaXMuZWxlbWVudHNbZV0sdGhpcy5zZXR0aW5ncyk7by5pbmRleD1lLHRoaXMuc2xpZGVzRGF0YVtlXT1vLEQuYXBwbHkodGhpcyxbcyxvLGZ1bmN0aW9uKCl7eih0LmxvYWRlciksdC5yZXNpemUoKSx0LnNsaWRlQW5pbWF0ZUluKHMsaSl9XSl9dGhpcy5zbGlkZURlc2NyaXB0aW9uPXMucXVlcnlTZWxlY3RvcihcIi5nc2xpZGUtZGVzY3JpcHRpb25cIiksdGhpcy5zbGlkZURlc2NyaXB0aW9uQ29udGFpbmVkPXRoaXMuc2xpZGVEZXNjcmlwdGlvbiYmQSh0aGlzLnNsaWRlRGVzY3JpcHRpb24ucGFyZW50Tm9kZSxcImdzbGlkZS1tZWRpYVwiKSx0aGlzLnByZWxvYWRTbGlkZShlKzEpLHRoaXMucHJlbG9hZFNsaWRlKGUtMSk7dmFyIGw9dGhpcy5sb29wKCk7RSh0aGlzLm5leHRCdXR0b24sXCJkaXNhYmxlZFwiKSxFKHRoaXMucHJldkJ1dHRvbixcImRpc2FibGVkXCIpLDAhPT1lfHxsP2UhPT10aGlzLmVsZW1lbnRzLmxlbmd0aC0xfHxsfHxrKHRoaXMubmV4dEJ1dHRvbixcImRpc2FibGVkXCIpOmsodGhpcy5wcmV2QnV0dG9uLFwiZGlzYWJsZWRcIiksdGhpcy5hY3RpdmVTbGlkZT1zfX0se2tleTpcInByZWxvYWRTbGlkZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYodDwwfHx0PnRoaXMuZWxlbWVudHMubGVuZ3RoKXJldHVybiExO2lmKHguaXNOaWwodGhpcy5lbGVtZW50c1t0XSkpcmV0dXJuITE7dmFyIGk9dGhpcy5zbGlkZXNDb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcIi5nc2xpZGVcIilbdF07aWYoQShpLFwibG9hZGVkXCIpKXJldHVybiExO3ZhciBuPUkodGhpcy5lbGVtZW50c1t0XSx0aGlzLnNldHRpbmdzKTtuLmluZGV4PXQsdGhpcy5zbGlkZXNEYXRhW3RdPW47dmFyIHM9bi5zb3VyY2V0eXBlO1widmlkZW9cIj09c3x8XCJleHRlcm5hbFwiPT1zP3NldFRpbWVvdXQoKGZ1bmN0aW9uKCl7RC5hcHBseShlLFtpLG5dKX0pLDIwMCk6RC5hcHBseSh0aGlzLFtpLG5dKX19LHtrZXk6XCJwcmV2U2xpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuZ29Ub1NsaWRlKHRoaXMuaW5kZXgtMSl9fSx7a2V5OlwibmV4dFNsaWRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmdvVG9TbGlkZSh0aGlzLmluZGV4KzEpfX0se2tleTpcImdvVG9TbGlkZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0mJmFyZ3VtZW50c1swXTt0aGlzLnByZXZBY3RpdmVTbGlkZT10aGlzLmFjdGl2ZVNsaWRlLHRoaXMucHJldkFjdGl2ZVNsaWRlSW5kZXg9dGhpcy5pbmRleDt2YXIgZT10aGlzLmxvb3AoKTtpZighZSYmKHQ8MHx8dD50aGlzLmVsZW1lbnRzLmxlbmd0aCkpcmV0dXJuITE7dDwwP3Q9dGhpcy5lbGVtZW50cy5sZW5ndGgtMTp0Pj10aGlzLmVsZW1lbnRzLmxlbmd0aCYmKHQ9MCksdGhpcy5zaG93U2xpZGUodCl9fSx7a2V5Olwic2xpZGVBbmltYXRlSW5cIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBpPXRoaXMsbj10LnF1ZXJ5U2VsZWN0b3IoXCIuZ3NsaWRlLW1lZGlhXCIpLHM9dC5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS1kZXNjcmlwdGlvblwiKSxvPXtpbmRleDp0aGlzLnByZXZBY3RpdmVTbGlkZUluZGV4LHNsaWRlOnRoaXMucHJldkFjdGl2ZVNsaWRlfSxsPXtpbmRleDp0aGlzLmluZGV4LHNsaWRlOnRoaXMuYWN0aXZlU2xpZGV9O2lmKG4ub2Zmc2V0V2lkdGg+MCYmcyYmKHoocykscy5zdHlsZS5kaXNwbGF5PVwiXCIpLEUodCx0aGlzLmVmZmVjdHNDbGFzc2VzKSxlKUModCx0aGlzLnNldHRpbmdzLm9wZW5FZmZlY3QsKGZ1bmN0aW9uKCl7IXUmJmkuc2V0dGluZ3MuYXV0b3BsYXlWaWRlb3MmJmkucGxheVNsaWRlVmlkZW8odCkseC5pc0Z1bmN0aW9uKGkuc2V0dGluZ3MuYWZ0ZXJTbGlkZUNoYW5nZSkmJmkuc2V0dGluZ3MuYWZ0ZXJTbGlkZUNoYW5nZS5hcHBseShpLFtvLGxdKX0pKTtlbHNle3ZhciByPXRoaXMuc2V0dGluZ3Muc2xpZGVFZmZlY3QsYT1cIm5vbmVcIiE9PXI/dGhpcy5zZXR0aW5ncy5jc3NFZmVjdHNbcl0uaW46cjt0aGlzLnByZXZBY3RpdmVTbGlkZUluZGV4PnRoaXMuaW5kZXgmJlwic2xpZGVcIj09dGhpcy5zZXR0aW5ncy5zbGlkZUVmZmVjdCYmKGE9dGhpcy5zZXR0aW5ncy5jc3NFZmVjdHMuc2xpZGVfYmFjay5pbiksQyh0LGEsKGZ1bmN0aW9uKCl7IXUmJmkuc2V0dGluZ3MuYXV0b3BsYXlWaWRlb3MmJmkucGxheVNsaWRlVmlkZW8odCkseC5pc0Z1bmN0aW9uKGkuc2V0dGluZ3MuYWZ0ZXJTbGlkZUNoYW5nZSkmJmkuc2V0dGluZ3MuYWZ0ZXJTbGlkZUNoYW5nZS5hcHBseShpLFtvLGxdKX0pKX1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2kucmVzaXplKHQpfSksMTAwKSxrKHQsXCJjdXJyZW50XCIpfX0se2tleTpcInNsaWRlQW5pbWF0ZU91dFwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoIXRoaXMucHJldkFjdGl2ZVNsaWRlKXJldHVybiExO3ZhciB0PXRoaXMucHJldkFjdGl2ZVNsaWRlO0UodCx0aGlzLmVmZmVjdHNDbGFzc2VzKSxrKHQsXCJwcmV2XCIpO3ZhciBlPXRoaXMuc2V0dGluZ3Muc2xpZGVFZmZlY3QsaT1cIm5vbmVcIiE9PWU/dGhpcy5zZXR0aW5ncy5jc3NFZmVjdHNbZV0ub3V0OmU7dGhpcy5zdG9wU2xpZGVWaWRlbyh0KSx4LmlzRnVuY3Rpb24odGhpcy5zZXR0aW5ncy5iZWZvcmVTbGlkZUNoYW5nZSkmJnRoaXMuc2V0dGluZ3MuYmVmb3JlU2xpZGVDaGFuZ2UuYXBwbHkodGhpcyxbe2luZGV4OnRoaXMucHJldkFjdGl2ZVNsaWRlSW5kZXgsc2xpZGU6dGhpcy5wcmV2QWN0aXZlU2xpZGV9LHtpbmRleDp0aGlzLmluZGV4LHNsaWRlOnRoaXMuYWN0aXZlU2xpZGV9XSksdGhpcy5wcmV2QWN0aXZlU2xpZGVJbmRleD50aGlzLmluZGV4JiZcInNsaWRlXCI9PXRoaXMuc2V0dGluZ3Muc2xpZGVFZmZlY3QmJihpPXRoaXMuc2V0dGluZ3MuY3NzRWZlY3RzLnNsaWRlX2JhY2sub3V0KSxDKHQsaSwoZnVuY3Rpb24oKXt2YXIgZT10LnF1ZXJ5U2VsZWN0b3IoXCIuZ3NsaWRlLW1lZGlhXCIpLGk9dC5xdWVyeVNlbGVjdG9yKFwiLmdzbGlkZS1kZXNjcmlwdGlvblwiKTtlLnN0eWxlLnRyYW5zZm9ybT1cIlwiLEUoZSxcImdyZXNldFwiKSxlLnN0eWxlLm9wYWNpdHk9XCJcIixpJiYoaS5zdHlsZS5vcGFjaXR5PVwiXCIpLEUodCxcInByZXZcIil9KSl9fSx7a2V5Olwic3RvcFNsaWRlVmlkZW9cIix2YWx1ZTpmdW5jdGlvbih0KXt4LmlzTnVtYmVyKHQpJiYodD10aGlzLnNsaWRlc0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKFwiLmdzbGlkZVwiKVt0XSk7dmFyIGU9dD90LnF1ZXJ5U2VsZWN0b3IoXCIuZ3ZpZGVvXCIpOm51bGw7aWYoIWUpcmV0dXJuITE7dmFyIGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIpO2lmKG0mJnguaGFzKG0saSkpe3ZhciBuPW1baV07biYmbi5wbGF5JiZuLnBhdXNlKCl9fX0se2tleTpcInBsYXlTbGlkZVZpZGVvXCIsdmFsdWU6ZnVuY3Rpb24odCl7eC5pc051bWJlcih0KSYmKHQ9dGhpcy5zbGlkZXNDb250YWluZXIucXVlcnlTZWxlY3RvckFsbChcIi5nc2xpZGVcIilbdF0pO3ZhciBlPXQucXVlcnlTZWxlY3RvcihcIi5ndmlkZW9cIik7aWYoIWUpcmV0dXJuITE7dmFyIGk9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWlkXCIpO2lmKG0mJnguaGFzKG0saSkpe3ZhciBuPW1baV07biYmbi5wbGF5JiZuLnBsYXkoKX19fSx7a2V5Olwic2V0RWxlbWVudHNcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLnNldHRpbmdzLmVsZW1lbnRzPXR9fSx7a2V5OlwiZ2V0RWxlbWVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTpudWxsO2lmKHRoaXMuZWxlbWVudHM9W10sIXguaXNOaWwodGhpcy5zZXR0aW5ncy5lbGVtZW50cykmJnguaXNBcnJheSh0aGlzLnNldHRpbmdzLmVsZW1lbnRzKSlyZXR1cm4gdGhpcy5zZXR0aW5ncy5lbGVtZW50czt2YXIgZT0hMTtpZihudWxsIT09dCl7dmFyIGk9dC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWdhbGxlcnlcIik7aSYmXCJcIiE9PWkmJihlPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLWdhbGxlcnk9XCInLmNvbmNhdChpLCdcIl0nKSkpfXJldHVybiAwPT1lJiYoZT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLlwiLmNvbmNhdCh0aGlzLnNldHRpbmdzLnNlbGVjdG9yKSkpLGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSl9fSx7a2V5OlwiZ2V0QWN0aXZlU2xpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNsaWRlc0NvbnRhaW5lci5xdWVyeVNlbGVjdG9yQWxsKFwiLmdzbGlkZVwiKVt0aGlzLmluZGV4XX19LHtrZXk6XCJnZXRBY3RpdmVTbGlkZUluZGV4XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbmRleH19LHtrZXk6XCJnZXRBbmltYXRpb25DbGFzc2VzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1bXTtmb3IodmFyIGUgaW4gdGhpcy5zZXR0aW5ncy5jc3NFZmVjdHMpaWYodGhpcy5zZXR0aW5ncy5jc3NFZmVjdHMuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBpPXRoaXMuc2V0dGluZ3MuY3NzRWZlY3RzW2VdO3QucHVzaChcImdcIi5jb25jYXQoaS5pbikpLHQucHVzaChcImdcIi5jb25jYXQoaS5vdXQpKX1yZXR1cm4gdC5qb2luKFwiIFwiKX19LHtrZXk6XCJidWlsZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztpZih0aGlzLmJ1aWx0KXJldHVybiExO3ZhciBlPXguaGFzKHRoaXMuc2V0dGluZ3Muc3ZnLFwibmV4dFwiKT90aGlzLnNldHRpbmdzLnN2Zy5uZXh0OlwiXCIsaT14Lmhhcyh0aGlzLnNldHRpbmdzLnN2ZyxcInByZXZcIik/dGhpcy5zZXR0aW5ncy5zdmcucHJldjpcIlwiLG49eC5oYXModGhpcy5zZXR0aW5ncy5zdmcsXCJjbG9zZVwiKT90aGlzLnNldHRpbmdzLnN2Zy5jbG9zZTpcIlwiLHM9dGhpcy5zZXR0aW5ncy5saWdodGJveEh0bWw7cz1MKHM9KHM9KHM9cy5yZXBsYWNlKC97bmV4dFNWR30vZyxlKSkucmVwbGFjZSgve3ByZXZTVkd9L2csaSkpLnJlcGxhY2UoL3tjbG9zZVNWR30vZyxuKSksZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzKTt2YXIgbz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdsaWdodGJveC1ib2R5XCIpO3RoaXMubW9kYWw9bzt2YXIgbD1vLnF1ZXJ5U2VsZWN0b3IoXCIuZ2Nsb3NlXCIpO3RoaXMucHJldkJ1dHRvbj1vLnF1ZXJ5U2VsZWN0b3IoXCIuZ3ByZXZcIiksdGhpcy5uZXh0QnV0dG9uPW8ucXVlcnlTZWxlY3RvcihcIi5nbmV4dFwiKSx0aGlzLm92ZXJsYXk9by5xdWVyeVNlbGVjdG9yKFwiLmdvdmVybGF5XCIpLHRoaXMubG9hZGVyPW8ucXVlcnlTZWxlY3RvcihcIi5nbG9hZGVyXCIpLHRoaXMuc2xpZGVzQ29udGFpbmVyPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2xpZ2h0Ym94LXNsaWRlclwiKSx0aGlzLmV2ZW50cz17fSxrKHRoaXMubW9kYWwsXCJnbGlnaHRib3gtXCIrdGhpcy5zZXR0aW5ncy5za2luKSx0aGlzLnNldHRpbmdzLmNsb3NlQnV0dG9uJiZsJiYodGhpcy5ldmVudHMuY2xvc2U9VChcImNsaWNrXCIse29uRWxlbWVudDpsLHdpdGhDYWxsYmFjazpmdW5jdGlvbihlLGkpe2UucHJldmVudERlZmF1bHQoKSx0LmNsb3NlKCl9fSkpLGwmJiF0aGlzLnNldHRpbmdzLmNsb3NlQnV0dG9uJiZsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobCksdGhpcy5uZXh0QnV0dG9uJiYodGhpcy5ldmVudHMubmV4dD1UKFwiY2xpY2tcIix7b25FbGVtZW50OnRoaXMubmV4dEJ1dHRvbix3aXRoQ2FsbGJhY2s6ZnVuY3Rpb24oZSxpKXtlLnByZXZlbnREZWZhdWx0KCksdC5uZXh0U2xpZGUoKX19KSksdGhpcy5wcmV2QnV0dG9uJiYodGhpcy5ldmVudHMucHJldj1UKFwiY2xpY2tcIix7b25FbGVtZW50OnRoaXMucHJldkJ1dHRvbix3aXRoQ2FsbGJhY2s6ZnVuY3Rpb24oZSxpKXtlLnByZXZlbnREZWZhdWx0KCksdC5wcmV2U2xpZGUoKX19KSksdGhpcy5zZXR0aW5ncy5jbG9zZU9uT3V0c2lkZUNsaWNrJiYodGhpcy5ldmVudHMub3V0Q2xvc2U9VChcImNsaWNrXCIse29uRWxlbWVudDpvLHdpdGhDYWxsYmFjazpmdW5jdGlvbihlLGkpe0EoZG9jdW1lbnQuYm9keSxcImdsaWdodGJveC1tb2JpbGVcIil8fE0oZS50YXJnZXQsXCIuZ2lubmVyLWNvbnRhaW5lclwiKXx8TShlLnRhcmdldCxcIi5nYnRuXCIpfHxBKGUudGFyZ2V0LFwiZ25leHRcIil8fEEoZS50YXJnZXQsXCJncHJldlwiKXx8dC5jbG9zZSgpfX0pKSx3KHRoaXMuZWxlbWVudHMsKGZ1bmN0aW9uKCl7dmFyIGU9TCh0LnNldHRpbmdzLnNsaWRlSHRtbCk7dC5zbGlkZXNDb250YWluZXIuYXBwZW5kQ2hpbGQoZSl9KSksZCYmayhkb2N1bWVudC5ib2R5LFwiZ2xpZ2h0Ym94LXRvdWNoXCIpLHRoaXMuZXZlbnRzLnJlc2l6ZT1UKFwicmVzaXplXCIse29uRWxlbWVudDp3aW5kb3csd2l0aENhbGxiYWNrOmZ1bmN0aW9uKCl7dC5yZXNpemUoKX19KSx0aGlzLmJ1aWx0PSEwfX0se2tleTpcInJlc2l6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOm51bGw7aWYodD10fHx0aGlzLmFjdGl2ZVNsaWRlLGRvY3VtZW50LmJvZHkuc3R5bGUud2lkdGg9XCJcIixkb2N1bWVudC5ib2R5LnN0eWxlLndpZHRoPVwiXCIuY29uY2F0KGRvY3VtZW50LmJvZHkub2Zmc2V0V2lkdGgsXCJweFwiKSx0JiYhQSh0LFwiem9vbWVkXCIpKXt2YXIgZT1xKCksaT10LnF1ZXJ5U2VsZWN0b3IoXCIuZ3ZpZGVvLXdyYXBwZXJcIiksbj10LnF1ZXJ5U2VsZWN0b3IoXCIuZ3NsaWRlLWltYWdlXCIpLHM9dGhpcy5zbGlkZURlc2NyaXB0aW9uLG89ZS53aWR0aCxsPWUuaGVpZ2h0O2lmKG88PTc2OD9rKGRvY3VtZW50LmJvZHksXCJnbGlnaHRib3gtbW9iaWxlXCIpOkUoZG9jdW1lbnQuYm9keSxcImdsaWdodGJveC1tb2JpbGVcIiksaXx8bil7dmFyIHI9ITE7aWYocyYmKEEocyxcImRlc2NyaXB0aW9uLWJvdHRvbVwiKXx8QShzLFwiZGVzY3JpcHRpb24tdG9wXCIpKSYmIUEocyxcImdhYnNvbHV0ZVwiKSYmKHI9ITApLG4paWYobzw9NzY4KXt2YXIgYT1uLnF1ZXJ5U2VsZWN0b3IoXCJpbWdcIik7YS5zZXRBdHRyaWJ1dGUoXCJzdHlsZVwiLFwiXCIpfWVsc2UgaWYocil7dmFyIGg9cy5vZmZzZXRIZWlnaHQsYz10aGlzLnNsaWRlc0RhdGFbdGhpcy5pbmRleF0ud2lkdGg7Yz1jPD1vP2MrXCJweFwiOlwiMTAwJVwiO3ZhciB1PW4ucXVlcnlTZWxlY3RvcihcImltZ1wiKTt1LnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gXCIuY29uY2F0KGgsXCJweClcIikpLHMuc2V0QXR0cmlidXRlKFwic3R5bGVcIixcIm1heC13aWR0aDogXCIuY29uY2F0KHUub2Zmc2V0V2lkdGgsXCJweDtcIikpfWlmKGkpe3ZhciBkPXRoaXMuc2V0dGluZ3MucGx5ci5yYXRpby5zcGxpdChcIjpcIiksZz10aGlzLnNsaWRlc0RhdGFbdGhpcy5pbmRleF0ud2lkdGgscD1nLyhwYXJzZUludChkWzBdKS9wYXJzZUludChkWzFdKSk7aWYocD1NYXRoLmZsb29yKHApLHImJihsLT1zLm9mZnNldEhlaWdodCksbDxwJiZvPmcpe3ZhciB2PWkub2Zmc2V0V2lkdGgsZj1pLm9mZnNldEhlaWdodCxtPWwvZix5PXt3aWR0aDp2Km0saGVpZ2h0OmYqbX07aS5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJtYXgtd2lkdGg6IFwiLmNvbmNhdCh5LndpZHRoLFwicHhcIikpLHImJnMuc2V0QXR0cmlidXRlKFwic3R5bGVcIixcIm1heC13aWR0aDogXCIuY29uY2F0KHkud2lkdGgsXCJweDtcIikpfWVsc2UgaS5wYXJlbnROb2RlLnN0eWxlLm1heFdpZHRoPVwiXCIuY29uY2F0KGcsXCJweFwiKSxyJiZzLnNldEF0dHJpYnV0ZShcInN0eWxlXCIsXCJtYXgtd2lkdGg6IFwiLmNvbmNhdChnLFwicHg7XCIpKX19fX19LHtrZXk6XCJyZWxvYWRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaW5pdCgpfX0se2tleTpcImxvb3BcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXguaGFzKHRoaXMuc2V0dGluZ3MsXCJsb29wQXRFbmRcIik/dGhpcy5zZXR0aW5ncy5sb29wQXRFbmQ6bnVsbDtyZXR1cm4gdD14Lmhhcyh0aGlzLnNldHRpbmdzLFwibG9vcFwiKT90aGlzLnNldHRpbmdzLmxvb3A6dCx0fX0se2tleTpcImNsb3NlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO2lmKHRoaXMuY2xvc2luZylyZXR1cm4hMTt0aGlzLmNsb3Npbmc9ITAsdGhpcy5zdG9wU2xpZGVWaWRlbyh0aGlzLmFjdGl2ZVNsaWRlKSxrKHRoaXMubW9kYWwsXCJnbGlnaHRib3gtY2xvc2luZ1wiKSxDKHRoaXMub3ZlcmxheSxcIm5vbmVcIj09dGhpcy5zZXR0aW5ncy5vcGVuRWZmZWN0P1wibm9uZVwiOnRoaXMuc2V0dGluZ3MuY3NzRWZlY3RzLmZhZGUub3V0KSxDKHRoaXMuYWN0aXZlU2xpZGUsdGhpcy5zZXR0aW5ncy5jbG9zZUVmZmVjdCwoZnVuY3Rpb24oKXtpZih0LmFjdGl2ZVNsaWRlPW51bGwsdC5wcmV2QWN0aXZlU2xpZGVJbmRleD1udWxsLHQucHJldkFjdGl2ZVNsaWRlPW51bGwsdC5idWlsdD0hMSx0LmV2ZW50cyl7Zm9yKHZhciBlIGluIHQuZXZlbnRzKXQuZXZlbnRzLmhhc093blByb3BlcnR5KGUpJiZ0LmV2ZW50c1tlXS5kZXN0cm95KCk7dC5ldmVudHM9bnVsbH12YXIgaT1kb2N1bWVudC5ib2R5O0UoZyxcImdsaWdodGJveC1vcGVuXCIpLEUoaSxcImdsaWdodGJveC1vcGVuIHRvdWNoaW5nIGdkZXNjLW9wZW4gZ2xpZ2h0Ym94LXRvdWNoIGdsaWdodGJveC1tb2JpbGVcIiksaS5zdHlsZS53aWR0aD1cIlwiLHQubW9kYWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0Lm1vZGFsKSx4LmlzRnVuY3Rpb24odC5zZXR0aW5ncy5vbkNsb3NlKSYmdC5zZXR0aW5ncy5vbkNsb3NlKCksdC5jbG9zaW5nPW51bGx9KSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5jbG9zZSgpLHRoaXMuYmFzZUV2ZW50cy5kZXN0cm95KCl9fV0pLHR9KCk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LGU9bmV3IFIodCk7cmV0dXJuIGUuaW5pdCgpLGV9fSkpOyJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n')},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(56);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanM/Y2I3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {!function(e,t){ true?module.exports=t():undefined}(this,function(){"use strict";var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},t="Expected a function",n=NaN,o="[object Symbol]",i=/^\\s+|\\s+$/g,a=/^[-+]0x[0-9a-f]+$/i,r=/^0b[01]+$/i,c=/^0o[0-7]+$/i,s=parseInt,u="object"==typeof e&&e&&e.Object===Object&&e,d="object"==typeof self&&self&&self.Object===Object&&self,l=u||d||Function("return this")(),f=Object.prototype.toString,m=Math.max,p=Math.min,b=function(){return l.Date.now()};function v(e,n,o){var i,a,r,c,s,u,d=0,l=!1,f=!1,v=!0;if("function"!=typeof e)throw new TypeError(t);function y(t){var n=i,o=a;return i=a=void 0,d=t,c=e.apply(o,n)}function h(e){var t=e-u;return void 0===u||t>=n||t<0||f&&e-d>=r}function k(){var e=b();if(h(e))return x(e);s=setTimeout(k,function(e){var t=n-(e-u);return f?p(t,r-(e-d)):t}(e))}function x(e){return s=void 0,v&&i?y(e):(i=a=void 0,c)}function O(){var e=b(),t=h(e);if(i=arguments,a=this,u=e,t){if(void 0===s)return function(e){return d=e,s=setTimeout(k,n),l?y(e):c}(u);if(f)return s=setTimeout(k,n),y(u)}return void 0===s&&(s=setTimeout(k,n)),c}return n=w(n)||0,g(o)&&(l=!!o.leading,r=(f="maxWait"in o)?m(w(o.maxWait)||0,n):r,v="trailing"in o?!!o.trailing:v),O.cancel=function(){void 0!==s&&clearTimeout(s),d=0,i=u=a=s=void 0},O.flush=function(){return void 0===s?c:x(b())},O}function g(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function w(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&f.call(e)==o}(e))return n;if(g(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=g(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(i,"");var u=r.test(e);return u||c.test(e)?s(e.slice(2),u?2:8):a.test(e)?n:+e}var y=function(e,n,o){var i=!0,a=!0;if("function"!=typeof e)throw new TypeError(t);return g(o)&&(i="leading"in o?!!o.leading:i,a="trailing"in o?!!o.trailing:a),v(e,n,{leading:i,maxWait:n,trailing:a})},h="Expected a function",k=NaN,x="[object Symbol]",O=/^\\s+|\\s+$/g,j=/^[-+]0x[0-9a-f]+$/i,E=/^0b[01]+$/i,N=/^0o[0-7]+$/i,z=parseInt,C="object"==typeof e&&e&&e.Object===Object&&e,A="object"==typeof self&&self&&self.Object===Object&&self,q=C||A||Function("return this")(),L=Object.prototype.toString,T=Math.max,M=Math.min,S=function(){return q.Date.now()};function D(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function H(e){if("number"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&L.call(e)==x}(e))return k;if(D(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=D(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(O,"");var n=E.test(e);return n||N.test(e)?z(e.slice(2),n?2:8):j.test(e)?k:+e}var $=function(e,t,n){var o,i,a,r,c,s,u=0,d=!1,l=!1,f=!0;if("function"!=typeof e)throw new TypeError(h);function m(t){var n=o,a=i;return o=i=void 0,u=t,r=e.apply(a,n)}function p(e){var n=e-s;return void 0===s||n>=t||n<0||l&&e-u>=a}function b(){var e=S();if(p(e))return v(e);c=setTimeout(b,function(e){var n=t-(e-s);return l?M(n,a-(e-u)):n}(e))}function v(e){return c=void 0,f&&o?m(e):(o=i=void 0,r)}function g(){var e=S(),n=p(e);if(o=arguments,i=this,s=e,n){if(void 0===c)return function(e){return u=e,c=setTimeout(b,t),d?m(e):r}(s);if(l)return c=setTimeout(b,t),m(s)}return void 0===c&&(c=setTimeout(b,t)),r}return t=H(t)||0,D(n)&&(d=!!n.leading,a=(l="maxWait"in n)?T(H(n.maxWait)||0,t):a,f="trailing"in n?!!n.trailing:f),g.cancel=function(){void 0!==c&&clearTimeout(c),u=0,o=s=i=c=void 0},g.flush=function(){return void 0===c?r:v(S())},g},W=function(){};function P(e){e&&e.forEach(function(e){var t=Array.prototype.slice.call(e.addedNodes),n=Array.prototype.slice.call(e.removedNodes);if(function e(t){var n=void 0,o=void 0;for(n=0;n<t.length;n+=1){if((o=t[n]).dataset&&o.dataset.aos)return!0;if(o.children&&e(o.children))return!0}return!1}(t.concat(n)))return W()})}function Y(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver}var _={isSupported:function(){return!!Y()},ready:function(e,t){var n=window.document,o=new(Y())(P);W=t,o.observe(n.documentElement,{childList:!0,subtree:!0,removedNodes:!0})}},B=function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")},F=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),I=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},K=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,G=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,J=/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,Q=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;function R(){return navigator.userAgent||navigator.vendor||window.opera||""}var U=new(function(){function e(){B(this,e)}return F(e,[{key:"phone",value:function(){var e=R();return!(!K.test(e)&&!G.test(e.substr(0,4)))}},{key:"mobile",value:function(){var e=R();return!(!J.test(e)&&!Q.test(e.substr(0,4)))}},{key:"tablet",value:function(){return this.mobile()&&!this.phone()}},{key:"ie11",value:function(){return"-ms-scroll-limit"in document.documentElement.style&&"-ms-ime-align"in document.documentElement.style}}]),e}()),V=function(e,t){var n=void 0;return U.ie11()?(n=document.createEvent("CustomEvent")).initCustomEvent(e,!0,!0,{detail:t}):n=new CustomEvent(e,{detail:t}),document.dispatchEvent(n)},X=function(e){return e.forEach(function(e,t){return function(e,t){var n=e.options,o=e.position,i=e.node,a=(e.data,function(){e.animated&&(function(e,t){t&&t.forEach(function(t){return e.classList.remove(t)})}(i,n.animatedClassNames),V("aos:out",i),e.options.id&&V("aos:in:"+e.options.id,i),e.animated=!1)});n.mirror&&t>=o.out&&!n.once?a():t>=o.in?e.animated||(function(e,t){t&&t.forEach(function(t){return e.classList.add(t)})}(i,n.animatedClassNames),V("aos:in",i),e.options.id&&V("aos:in:"+e.options.id,i),e.animated=!0):e.animated&&!n.once&&a()}(e,window.pageYOffset)})},Z=function(e){for(var t=0,n=0;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft-("BODY"!=e.tagName?e.scrollLeft:0),n+=e.offsetTop-("BODY"!=e.tagName?e.scrollTop:0),e=e.offsetParent;return{top:n,left:t}},ee=function(e,t,n){var o=e.getAttribute("data-aos-"+t);if(void 0!==o){if("true"===o)return!0;if("false"===o)return!1}return o||n},te=function(e,t){return e.forEach(function(e,n){var o=ee(e.node,"mirror",t.mirror),i=ee(e.node,"once",t.once),a=ee(e.node,"id"),r=t.useClassNames&&e.node.getAttribute("data-aos"),c=[t.animatedClassName].concat(r?r.split(" "):[]).filter(function(e){return"string"==typeof e});t.initClassName&&e.node.classList.add(t.initClassName),e.position={in:function(e,t,n){var o=window.innerHeight,i=ee(e,"anchor"),a=ee(e,"anchor-placement"),r=Number(ee(e,"offset",a?0:t)),c=a||n,s=e;i&&document.querySelectorAll(i)&&(s=document.querySelectorAll(i)[0]);var u=Z(s).top-o;switch(c){case"top-bottom":break;case"center-bottom":u+=s.offsetHeight/2;break;case"bottom-bottom":u+=s.offsetHeight;break;case"top-center":u+=o/2;break;case"center-center":u+=o/2+s.offsetHeight/2;break;case"bottom-center":u+=o/2+s.offsetHeight;break;case"top-top":u+=o;break;case"bottom-top":u+=o+s.offsetHeight;break;case"center-top":u+=o+s.offsetHeight/2}return u+r}(e.node,t.offset,t.anchorPlacement),out:o&&function(e,t){window.innerHeight;var n=ee(e,"anchor"),o=ee(e,"offset",t),i=e;return n&&document.querySelectorAll(n)&&(i=document.querySelectorAll(n)[0]),Z(i).top+i.offsetHeight-o}(e.node,t.offset)},e.options={once:i,mirror:o,animatedClassNames:c,id:a}}),e},ne=function(){var e=document.querySelectorAll("[data-aos]");return Array.prototype.map.call(e,function(e){return{node:e}})},oe=[],ie=!1,ae={offset:120,delay:0,easing:"ease",duration:400,disable:!1,once:!1,mirror:!1,anchorPlacement:"top-bottom",startEvent:"DOMContentLoaded",animatedClassName:"aos-animate",initClassName:"aos-init",useClassNames:!1,disableMutationObserver:!1,throttleDelay:99,debounceDelay:50},re=function(){return document.all&&!window.atob},ce=function(){arguments.length>0&&void 0!==arguments[0]&&arguments[0]&&(ie=!0),ie&&(oe=te(oe,ae),X(oe),window.addEventListener("scroll",y(function(){X(oe,ae.once)},ae.throttleDelay)))},se=function(){if(oe=ne(),de(ae.disable)||re())return ue();ce()},ue=function(){oe.forEach(function(e,t){e.node.removeAttribute("data-aos"),e.node.removeAttribute("data-aos-easing"),e.node.removeAttribute("data-aos-duration"),e.node.removeAttribute("data-aos-delay"),ae.initClassName&&e.node.classList.remove(ae.initClassName),ae.animatedClassName&&e.node.classList.remove(ae.animatedClassName)})},de=function(e){return!0===e||"mobile"===e&&U.mobile()||"phone"===e&&U.phone()||"tablet"===e&&U.tablet()||"function"==typeof e&&!0===e()};return{init:function(e){return ae=I(ae,e),oe=ne(),ae.disableMutationObserver||_.isSupported()||(console.info(\'\\n      aos: MutationObserver is not supported on this browser,\\n      code mutations observing has been disabled.\\n      You may have to call "refreshHard()" by yourself.\\n    \'),ae.disableMutationObserver=!0),ae.disableMutationObserver||_.ready("[data-aos]",se),de(ae.disable)||re()?ue():(document.querySelector("body").setAttribute("data-aos-easing",ae.easing),document.querySelector("body").setAttribute("data-aos-duration",ae.duration),document.querySelector("body").setAttribute("data-aos-delay",ae.delay),-1===["DOMContentLoaded","load"].indexOf(ae.startEvent)?document.addEventListener(ae.startEvent,function(){ce(!0)}):window.addEventListener("load",function(){ce(!0)}),"DOMContentLoaded"===ae.startEvent&&["complete","interactive"].indexOf(document.readyState)>-1&&ce(!0),window.addEventListener("resize",$(ce,ae.debounceDelay,!0)),window.addEventListener("orientationchange",$(ce,ae.debounceDelay,!0)),oe)},refresh:ce,refreshHard:se}});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(110)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar isRegExp = __webpack_require__(125);\nvar anObject = __webpack_require__(11);\nvar speciesConstructor = __webpack_require__(154);\nvar advanceStringIndex = __webpack_require__(104);\nvar toLength = __webpack_require__(65);\nvar callRegExpExec = __webpack_require__(84);\nvar regexpExec = __webpack_require__(105);\nvar fails = __webpack_require__(26);\nvar $min = Math.min;\nvar $push = [].push;\nvar $SPLIT = 'split';\nvar LENGTH = 'length';\nvar LAST_INDEX = 'lastIndex';\nvar MAX_UINT32 = 0xffffffff;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\n__webpack_require__(85)('split', 2, function (defined, SPLIT, $split, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||\n    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||\n    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||\n    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||\n    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||\n    ''[$SPLIT](/.?/)[LENGTH]\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(this);\n      if (separator === undefined && limit === 0) return [];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) return $split.call(string, separator, limit);\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy[LAST_INDEX];\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));\n          lastLength = match[0][LENGTH];\n          lastLastIndex = lastIndex;\n          if (output[LENGTH] >= splitLimit) break;\n        }\n        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string[LENGTH]) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;\n    };\n  // Chakra, V8\n  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);\n    };\n  } else {\n    internalSplit = $split;\n  }\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = defined(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")},,function(module,exports,__webpack_require__){eval("var anObject = __webpack_require__(11);\nvar IE8_DOM_DEFINE = __webpack_require__(111);\nvar toPrimitive = __webpack_require__(97);\nvar dP = Object.defineProperty;\n\nexports.f = __webpack_require__(16) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanM/ODZjYyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///15\n")},function(module,exports,__webpack_require__){eval("// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(26)(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZXNjcmlwdG9ycy5qcz85ZTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoYW5rJ3MgSUU4IGZvciBoaXMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n")},function(module,exports){eval("// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19nbG9iYWwuanM/NzcyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17\n")},,,,,,,,,function(module,exports){eval("module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy5qcz83OWU1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///26\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(15);\nvar createDesc = __webpack_require__(61);\nmodule.exports = __webpack_require__(16) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oaWRlLmpzPzMyZTkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRQLmYob2JqZWN0LCBrZXksIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbn0gOiBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIG9iamVjdFtrZXldID0gdmFsdWU7XG4gIHJldHVybiBvYmplY3Q7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZ2xpZ2h0Ym94L2Rpc3QvY3NzL2dsaWdodGJveC5jc3M/YWZhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///28\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(150);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ResponsiveAutoHeight = function () {\n  function ResponsiveAutoHeight(selector, options) {\n    var _this = this;\n\n    _classCallCheck(this, ResponsiveAutoHeight);\n\n    this.selector = selector;\n    this.elements = typeof selector === 'string' ? document.querySelectorAll(selector) : selector;\n    this.options = options;\n    window.addEventListener('resize', function () {\n      _this.run();\n    });\n    this.run();\n  }\n\n  _createClass(ResponsiveAutoHeight, [{\n    key: 'recalc',\n    value: function recalc() {\n      this.elements = document.querySelectorAll(this.selector);\n      this.run();\n    }\n  }, {\n    key: 'makeGroups',\n    value: function makeGroups(elements) {\n      var group = [];\n      [].forEach.call(elements, function (element) {\n        element.style.height = '1px';\n        element.style.overflow = 'hidden';\n      });\n      var idx = 0;\n      var height = (0, _util.getOffset)(elements[0]).top;\n      group[0] = [];\n      [].forEach.call(elements, function (element) {\n        if ((0, _util.getOffset)(element).top !== height) {\n          height = (0, _util.getOffset)(element).top;\n          idx += 1;\n          group[idx] = [];\n        }\n        group[idx].push(element);\n      });\n      [].forEach.call(elements, function (element) {\n        element.style.height = '';\n        element.style.overflow = '';\n      });\n      return group;\n    }\n  }, {\n    key: 'autoHeight',\n    value: function autoHeight(group) {\n      var heights = group.map(function (element) {\n        var computedStyle = getComputedStyle(element);\n        var boxSizing = computedStyle.boxSizing;\n        if (boxSizing === 'border-box') {\n          return element.offsetHeight;\n        }\n        return element.offsetHeight - parseFloat(computedStyle.paddingTop) - parseFloat(computedStyle.paddingBottom);\n      });\n      var maxHeight = Math.max.apply(Math, _toConsumableArray(heights));\n      group.forEach(function (element) {\n        element.style.height = maxHeight + 'px';\n      });\n    }\n  }, {\n    key: 'run',\n    value: function run() {\n      var _this2 = this;\n\n      var elements = this.elements;\n\n      var groups = this.makeGroups(elements);\n      groups.forEach(function (group) {\n        _this2.autoHeight(group);\n      });\n    }\n  }]);\n\n  return ResponsiveAutoHeight;\n}();\n\nexports.default = ResponsiveAutoHeight;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVzcG9uc2l2ZS1hdXRvLWhlaWdodC9saWIvaW5kZXguanM/Y2FiMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfY3JlYXRlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfSByZXR1cm4gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBwcm90b1Byb3BzLCBzdGF0aWNQcm9wcykgeyBpZiAocHJvdG9Qcm9wcykgZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTsgcmV0dXJuIENvbnN0cnVjdG9yOyB9OyB9KCk7XG5cbnZhciBfdXRpbCA9IHJlcXVpcmUoJy4vdXRpbCcpO1xuXG5mdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9IGVsc2UgeyByZXR1cm4gQXJyYXkuZnJvbShhcnIpOyB9IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxudmFyIFJlc3BvbnNpdmVBdXRvSGVpZ2h0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBSZXNwb25zaXZlQXV0b0hlaWdodChzZWxlY3Rvciwgb3B0aW9ucykge1xuICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVzcG9uc2l2ZUF1dG9IZWlnaHQpO1xuXG4gICAgdGhpcy5zZWxlY3RvciA9IHNlbGVjdG9yO1xuICAgIHRoaXMuZWxlbWVudHMgPSB0eXBlb2Ygc2VsZWN0b3IgPT09ICdzdHJpbmcnID8gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikgOiBzZWxlY3RvcjtcbiAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbiAoKSB7XG4gICAgICBfdGhpcy5ydW4oKTtcbiAgICB9KTtcbiAgICB0aGlzLnJ1bigpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFJlc3BvbnNpdmVBdXRvSGVpZ2h0LCBbe1xuICAgIGtleTogJ3JlY2FsYycsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlY2FsYygpIHtcbiAgICAgIHRoaXMuZWxlbWVudHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuc2VsZWN0b3IpO1xuICAgICAgdGhpcy5ydW4oKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6ICdtYWtlR3JvdXBzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gbWFrZUdyb3VwcyhlbGVtZW50cykge1xuICAgICAgdmFyIGdyb3VwID0gW107XG4gICAgICBbXS5mb3JFYWNoLmNhbGwoZWxlbWVudHMsIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gJzFweCc7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgICAgIH0pO1xuICAgICAgdmFyIGlkeCA9IDA7XG4gICAgICB2YXIgaGVpZ2h0ID0gKDAsIF91dGlsLmdldE9mZnNldCkoZWxlbWVudHNbMF0pLnRvcDtcbiAgICAgIGdyb3VwWzBdID0gW107XG4gICAgICBbXS5mb3JFYWNoLmNhbGwoZWxlbWVudHMsIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIGlmICgoMCwgX3V0aWwuZ2V0T2Zmc2V0KShlbGVtZW50KS50b3AgIT09IGhlaWdodCkge1xuICAgICAgICAgIGhlaWdodCA9ICgwLCBfdXRpbC5nZXRPZmZzZXQpKGVsZW1lbnQpLnRvcDtcbiAgICAgICAgICBpZHggKz0gMTtcbiAgICAgICAgICBncm91cFtpZHhdID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBbaWR4XS5wdXNoKGVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgICBbXS5mb3JFYWNoLmNhbGwoZWxlbWVudHMsIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gJyc7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUub3ZlcmZsb3cgPSAnJztcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGdyb3VwO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ2F1dG9IZWlnaHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBhdXRvSGVpZ2h0KGdyb3VwKSB7XG4gICAgICB2YXIgaGVpZ2h0cyA9IGdyb3VwLm1hcChmdW5jdGlvbiAoZWxlbWVudCkge1xuICAgICAgICB2YXIgY29tcHV0ZWRTdHlsZSA9IGdldENvbXB1dGVkU3R5bGUoZWxlbWVudCk7XG4gICAgICAgIHZhciBib3hTaXppbmcgPSBjb21wdXRlZFN0eWxlLmJveFNpemluZztcbiAgICAgICAgaWYgKGJveFNpemluZyA9PT0gJ2JvcmRlci1ib3gnKSB7XG4gICAgICAgICAgcmV0dXJuIGVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbGVtZW50Lm9mZnNldEhlaWdodCAtIHBhcnNlRmxvYXQoY29tcHV0ZWRTdHlsZS5wYWRkaW5nVG9wKSAtIHBhcnNlRmxvYXQoY29tcHV0ZWRTdHlsZS5wYWRkaW5nQm90dG9tKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIG1heEhlaWdodCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheShoZWlnaHRzKSk7XG4gICAgICBncm91cC5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgICAgIGVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gbWF4SGVpZ2h0ICsgJ3B4JztcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3J1bicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJ1bigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgZWxlbWVudHMgPSB0aGlzLmVsZW1lbnRzO1xuXG4gICAgICB2YXIgZ3JvdXBzID0gdGhpcy5tYWtlR3JvdXBzKGVsZW1lbnRzKTtcbiAgICAgIGdyb3Vwcy5mb3JFYWNoKGZ1bmN0aW9uIChncm91cCkge1xuICAgICAgICBfdGhpczIuYXV0b0hlaWdodChncm91cCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVzcG9uc2l2ZUF1dG9IZWlnaHQ7XG59KCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IFJlc3BvbnNpdmVBdXRvSGVpZ2h0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///29\n")},function(module,exports,__webpack_require__){"use strict";eval("/*! npm.im/object-fit-images 3.2.4 */\n\n\nvar OFI = 'bfred-it:object-fit-images';\nvar propRegex = /(object-fit|object-position)\\s*:\\s*([-.\\w\\s%]+)/g;\nvar testImg = typeof Image === 'undefined' ? {style: {'object-position': 1}} : new Image();\nvar supportsObjectFit = 'object-fit' in testImg.style;\nvar supportsObjectPosition = 'object-position' in testImg.style;\nvar supportsOFI = 'background-size' in testImg.style;\nvar supportsCurrentSrc = typeof testImg.currentSrc === 'string';\nvar nativeGetAttribute = testImg.getAttribute;\nvar nativeSetAttribute = testImg.setAttribute;\nvar autoModeEnabled = false;\n\nfunction createPlaceholder(w, h) {\n\treturn (\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='\" + w + \"' height='\" + h + \"'%3E%3C/svg%3E\");\n}\n\nfunction polyfillCurrentSrc(el) {\n\tif (el.srcset && !supportsCurrentSrc && window.picturefill) {\n\t\tvar pf = window.picturefill._;\n\t\t// parse srcset with picturefill where currentSrc isn't available\n\t\tif (!el[pf.ns] || !el[pf.ns].evaled) {\n\t\t\t// force synchronous srcset parsing\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\tif (!el[pf.ns].curSrc) {\n\t\t\t// force picturefill to parse srcset\n\t\t\tel[pf.ns].supported = false;\n\t\t\tpf.fillImg(el, {reselect: true});\n\t\t}\n\n\t\t// retrieve parsed currentSrc, if any\n\t\tel.currentSrc = el[pf.ns].curSrc || el.src;\n\t}\n}\n\nfunction getStyle(el) {\n\tvar style = getComputedStyle(el).fontFamily;\n\tvar parsed;\n\tvar props = {};\n\twhile ((parsed = propRegex.exec(style)) !== null) {\n\t\tprops[parsed[1]] = parsed[2];\n\t}\n\treturn props;\n}\n\nfunction setPlaceholder(img, width, height) {\n\t// Default: fill width, no height\n\tvar placeholder = createPlaceholder(width || 1, height || 0);\n\n\t// Only set placeholder if it's different\n\tif (nativeGetAttribute.call(img, 'src') !== placeholder) {\n\t\tnativeSetAttribute.call(img, 'src', placeholder);\n\t}\n}\n\nfunction onImageReady(img, callback) {\n\t// naturalWidth is only available when the image headers are loaded,\n\t// this loop will poll it every 100ms.\n\tif (img.naturalWidth) {\n\t\tcallback(img);\n\t} else {\n\t\tsetTimeout(onImageReady, 100, img, callback);\n\t}\n}\n\nfunction fixOne(el) {\n\tvar style = getStyle(el);\n\tvar ofi = el[OFI];\n\tstyle['object-fit'] = style['object-fit'] || 'fill'; // default value\n\n\t// Avoid running where unnecessary, unless OFI had already done its deed\n\tif (!ofi.img) {\n\t\t// fill is the default behavior so no action is necessary\n\t\tif (style['object-fit'] === 'fill') {\n\t\t\treturn;\n\t\t}\n\n\t\t// Where object-fit is supported and object-position isn't (Safari < 10)\n\t\tif (\n\t\t\t!ofi.skipTest && // unless user wants to apply regardless of browser support\n\t\t\tsupportsObjectFit && // if browser already supports object-fit\n\t\t\t!style['object-position'] // unless object-position is used\n\t\t) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// keep a clone in memory while resetting the original to a blank\n\tif (!ofi.img) {\n\t\tofi.img = new Image(el.width, el.height);\n\t\tofi.img.srcset = nativeGetAttribute.call(el, \"data-ofi-srcset\") || el.srcset;\n\t\tofi.img.src = nativeGetAttribute.call(el, \"data-ofi-src\") || el.src;\n\n\t\t// preserve for any future cloneNode calls\n\t\t// https://github.com/bfred-it/object-fit-images/issues/53\n\t\tnativeSetAttribute.call(el, \"data-ofi-src\", el.src);\n\t\tif (el.srcset) {\n\t\t\tnativeSetAttribute.call(el, \"data-ofi-srcset\", el.srcset);\n\t\t}\n\n\t\tsetPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height);\n\n\t\t// remove srcset because it overrides src\n\t\tif (el.srcset) {\n\t\t\tel.srcset = '';\n\t\t}\n\t\ttry {\n\t\t\tkeepSrcUsable(el);\n\t\t} catch (err) {\n\t\t\tif (window.console) {\n\t\t\t\tconsole.warn('https://bit.ly/ofi-old-browser');\n\t\t\t}\n\t\t}\n\t}\n\n\tpolyfillCurrentSrc(ofi.img);\n\n\tel.style.backgroundImage = \"url(\\\"\" + ((ofi.img.currentSrc || ofi.img.src).replace(/\"/g, '\\\\\"')) + \"\\\")\";\n\tel.style.backgroundPosition = style['object-position'] || 'center';\n\tel.style.backgroundRepeat = 'no-repeat';\n\tel.style.backgroundOrigin = 'content-box';\n\n\tif (/scale-down/.test(style['object-fit'])) {\n\t\tonImageReady(ofi.img, function () {\n\t\t\tif (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {\n\t\t\t\tel.style.backgroundSize = 'contain';\n\t\t\t} else {\n\t\t\t\tel.style.backgroundSize = 'auto';\n\t\t\t}\n\t\t});\n\t} else {\n\t\tel.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');\n\t}\n\n\tonImageReady(ofi.img, function (img) {\n\t\tsetPlaceholder(el, img.naturalWidth, img.naturalHeight);\n\t});\n}\n\nfunction keepSrcUsable(el) {\n\tvar descriptors = {\n\t\tget: function get(prop) {\n\t\t\treturn el[OFI].img[prop ? prop : 'src'];\n\t\t},\n\t\tset: function set(value, prop) {\n\t\t\tel[OFI].img[prop ? prop : 'src'] = value;\n\t\t\tnativeSetAttribute.call(el, (\"data-ofi-\" + prop), value); // preserve for any future cloneNode\n\t\t\tfixOne(el);\n\t\t\treturn value;\n\t\t}\n\t};\n\tObject.defineProperty(el, 'src', descriptors);\n\tObject.defineProperty(el, 'currentSrc', {\n\t\tget: function () { return descriptors.get('currentSrc'); }\n\t});\n\tObject.defineProperty(el, 'srcset', {\n\t\tget: function () { return descriptors.get('srcset'); },\n\t\tset: function (ss) { return descriptors.set(ss, 'srcset'); }\n\t});\n}\n\nfunction hijackAttributes() {\n\tfunction getOfiImageMaybe(el, name) {\n\t\treturn el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;\n\t}\n\tif (!supportsObjectPosition) {\n\t\tHTMLImageElement.prototype.getAttribute = function (name) {\n\t\t\treturn nativeGetAttribute.call(getOfiImageMaybe(this, name), name);\n\t\t};\n\n\t\tHTMLImageElement.prototype.setAttribute = function (name, value) {\n\t\t\treturn nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));\n\t\t};\n\t}\n}\n\nfunction fix(imgs, opts) {\n\tvar startAutoMode = !autoModeEnabled && !imgs;\n\topts = opts || {};\n\timgs = imgs || 'img';\n\n\tif ((supportsObjectPosition && !opts.skipTest) || !supportsOFI) {\n\t\treturn false;\n\t}\n\n\t// use imgs as a selector or just select all images\n\tif (imgs === 'img') {\n\t\timgs = document.getElementsByTagName('img');\n\t} else if (typeof imgs === 'string') {\n\t\timgs = document.querySelectorAll(imgs);\n\t} else if (!('length' in imgs)) {\n\t\timgs = [imgs];\n\t}\n\n\t// apply fix to all\n\tfor (var i = 0; i < imgs.length; i++) {\n\t\timgs[i][OFI] = imgs[i][OFI] || {\n\t\t\tskipTest: opts.skipTest\n\t\t};\n\t\tfixOne(imgs[i]);\n\t}\n\n\tif (startAutoMode) {\n\t\tdocument.body.addEventListener('load', function (e) {\n\t\t\tif (e.target.tagName === 'IMG') {\n\t\t\t\tfix(e.target, {\n\t\t\t\t\tskipTest: opts.skipTest\n\t\t\t\t});\n\t\t\t}\n\t\t}, true);\n\t\tautoModeEnabled = true;\n\t\timgs = 'img'; // reset to a generic selector for watchMQ\n\t}\n\n\t// if requested, watch media queries for object-fit change\n\tif (opts.watchMQ) {\n\t\twindow.addEventListener('resize', fix.bind(null, imgs, {\n\t\t\tskipTest: opts.skipTest\n\t\t}));\n\t}\n}\n\nfix.supportsObjectFit = supportsObjectFit;\nfix.supportsObjectPosition = supportsObjectPosition;\n\nhijackAttributes();\n\nmodule.exports = fix;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n")},function(module,exports,__webpack_require__){eval("/* smoothscroll v0.4.4 - 2019 - Dustan Kasten, Jeremias Menichelli - MIT License */\n(function () {\n  'use strict';\n\n  // polyfill\n  function polyfill() {\n    // aliases\n    var w = window;\n    var d = document;\n\n    // return if scroll behavior is supported and polyfill is not forced\n    if (\n      'scrollBehavior' in d.documentElement.style &&\n      w.__forceSmoothScrollPolyfill__ !== true\n    ) {\n      return;\n    }\n\n    // globals\n    var Element = w.HTMLElement || w.Element;\n    var SCROLL_TIME = 468;\n\n    // object gathering original scroll methods\n    var original = {\n      scroll: w.scroll || w.scrollTo,\n      scrollBy: w.scrollBy,\n      elementScroll: Element.prototype.scroll || scrollElement,\n      scrollIntoView: Element.prototype.scrollIntoView\n    };\n\n    // define timing method\n    var now =\n      w.performance && w.performance.now\n        ? w.performance.now.bind(w.performance)\n        : Date.now;\n\n    /**\n     * indicates if a the current browser is made by Microsoft\n     * @method isMicrosoftBrowser\n     * @param {String} userAgent\n     * @returns {Boolean}\n     */\n    function isMicrosoftBrowser(userAgent) {\n      var userAgentPatterns = ['MSIE ', 'Trident/', 'Edge/'];\n\n      return new RegExp(userAgentPatterns.join('|')).test(userAgent);\n    }\n\n    /*\n     * IE has rounding bug rounding down clientHeight and clientWidth and\n     * rounding up scrollHeight and scrollWidth causing false positives\n     * on hasScrollableSpace\n     */\n    var ROUNDING_TOLERANCE = isMicrosoftBrowser(w.navigator.userAgent) ? 1 : 0;\n\n    /**\n     * changes scroll position inside an element\n     * @method scrollElement\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function scrollElement(x, y) {\n      this.scrollLeft = x;\n      this.scrollTop = y;\n    }\n\n    /**\n     * returns result of applying ease math function to a number\n     * @method ease\n     * @param {Number} k\n     * @returns {Number}\n     */\n    function ease(k) {\n      return 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n\n    /**\n     * indicates if a smooth behavior should be applied\n     * @method shouldBailOut\n     * @param {Number|Object} firstArg\n     * @returns {Boolean}\n     */\n    function shouldBailOut(firstArg) {\n      if (\n        firstArg === null ||\n        typeof firstArg !== 'object' ||\n        firstArg.behavior === undefined ||\n        firstArg.behavior === 'auto' ||\n        firstArg.behavior === 'instant'\n      ) {\n        // first argument is not an object/null\n        // or behavior is auto, instant or undefined\n        return true;\n      }\n\n      if (typeof firstArg === 'object' && firstArg.behavior === 'smooth') {\n        // first argument is an object and behavior is smooth\n        return false;\n      }\n\n      // throw error when behavior is not supported\n      throw new TypeError(\n        'behavior member of ScrollOptions ' +\n          firstArg.behavior +\n          ' is not a valid value for enumeration ScrollBehavior.'\n      );\n    }\n\n    /**\n     * indicates if an element has scrollable space in the provided axis\n     * @method hasScrollableSpace\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function hasScrollableSpace(el, axis) {\n      if (axis === 'Y') {\n        return el.clientHeight + ROUNDING_TOLERANCE < el.scrollHeight;\n      }\n\n      if (axis === 'X') {\n        return el.clientWidth + ROUNDING_TOLERANCE < el.scrollWidth;\n      }\n    }\n\n    /**\n     * indicates if an element has a scrollable overflow property in the axis\n     * @method canOverflow\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function canOverflow(el, axis) {\n      var overflowValue = w.getComputedStyle(el, null)['overflow' + axis];\n\n      return overflowValue === 'auto' || overflowValue === 'scroll';\n    }\n\n    /**\n     * indicates if an element can be scrolled in either axis\n     * @method isScrollable\n     * @param {Node} el\n     * @param {String} axis\n     * @returns {Boolean}\n     */\n    function isScrollable(el) {\n      var isScrollableY = hasScrollableSpace(el, 'Y') && canOverflow(el, 'Y');\n      var isScrollableX = hasScrollableSpace(el, 'X') && canOverflow(el, 'X');\n\n      return isScrollableY || isScrollableX;\n    }\n\n    /**\n     * finds scrollable parent of an element\n     * @method findScrollableParent\n     * @param {Node} el\n     * @returns {Node} el\n     */\n    function findScrollableParent(el) {\n      while (el !== d.body && isScrollable(el) === false) {\n        el = el.parentNode || el.host;\n      }\n\n      return el;\n    }\n\n    /**\n     * self invoked function that, given a context, steps through scrolling\n     * @method step\n     * @param {Object} context\n     * @returns {undefined}\n     */\n    function step(context) {\n      var time = now();\n      var value;\n      var currentX;\n      var currentY;\n      var elapsed = (time - context.startTime) / SCROLL_TIME;\n\n      // avoid elapsed times higher than one\n      elapsed = elapsed > 1 ? 1 : elapsed;\n\n      // apply easing to elapsed time\n      value = ease(elapsed);\n\n      currentX = context.startX + (context.x - context.startX) * value;\n      currentY = context.startY + (context.y - context.startY) * value;\n\n      context.method.call(context.scrollable, currentX, currentY);\n\n      // scroll more if we have not reached our destination\n      if (currentX !== context.x || currentY !== context.y) {\n        w.requestAnimationFrame(step.bind(w, context));\n      }\n    }\n\n    /**\n     * scrolls window or element with a smooth behavior\n     * @method smoothScroll\n     * @param {Object|Node} el\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {undefined}\n     */\n    function smoothScroll(el, x, y) {\n      var scrollable;\n      var startX;\n      var startY;\n      var method;\n      var startTime = now();\n\n      // define scroll context\n      if (el === d.body) {\n        scrollable = w;\n        startX = w.scrollX || w.pageXOffset;\n        startY = w.scrollY || w.pageYOffset;\n        method = original.scroll;\n      } else {\n        scrollable = el;\n        startX = el.scrollLeft;\n        startY = el.scrollTop;\n        method = scrollElement;\n      }\n\n      // scroll looping over a frame\n      step({\n        scrollable: scrollable,\n        method: method,\n        startTime: startTime,\n        startX: startX,\n        startY: startY,\n        x: x,\n        y: y\n      });\n    }\n\n    // ORIGINAL METHODS OVERRIDES\n    // w.scroll and w.scrollTo\n    w.scroll = w.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scroll.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object'\n              ? arguments[0]\n              : w.scrollX || w.pageXOffset,\n          // use top prop, second argument if present or fallback to scrollY\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined\n              ? arguments[1]\n              : w.scrollY || w.pageYOffset\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        arguments[0].left !== undefined\n          ? ~~arguments[0].left\n          : w.scrollX || w.pageXOffset,\n        arguments[0].top !== undefined\n          ? ~~arguments[0].top\n          : w.scrollY || w.pageYOffset\n      );\n    };\n\n    // w.scrollBy\n    w.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0])) {\n        original.scrollBy.call(\n          w,\n          arguments[0].left !== undefined\n            ? arguments[0].left\n            : typeof arguments[0] !== 'object' ? arguments[0] : 0,\n          arguments[0].top !== undefined\n            ? arguments[0].top\n            : arguments[1] !== undefined ? arguments[1] : 0\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        w,\n        d.body,\n        ~~arguments[0].left + (w.scrollX || w.pageXOffset),\n        ~~arguments[0].top + (w.scrollY || w.pageYOffset)\n      );\n    };\n\n    // Element.prototype.scroll and Element.prototype.scrollTo\n    Element.prototype.scroll = Element.prototype.scrollTo = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        // if one number is passed, throw error to match Firefox implementation\n        if (typeof arguments[0] === 'number' && arguments[1] === undefined) {\n          throw new SyntaxError('Value could not be converted');\n        }\n\n        original.elementScroll.call(\n          this,\n          // use left prop, first number argument or fallback to scrollLeft\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left\n            : typeof arguments[0] !== 'object' ? ~~arguments[0] : this.scrollLeft,\n          // use top prop, second argument or fallback to scrollTop\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top\n            : arguments[1] !== undefined ? ~~arguments[1] : this.scrollTop\n        );\n\n        return;\n      }\n\n      var left = arguments[0].left;\n      var top = arguments[0].top;\n\n      // LET THE SMOOTHNESS BEGIN!\n      smoothScroll.call(\n        this,\n        this,\n        typeof left === 'undefined' ? this.scrollLeft : ~~left,\n        typeof top === 'undefined' ? this.scrollTop : ~~top\n      );\n    };\n\n    // Element.prototype.scrollBy\n    Element.prototype.scrollBy = function() {\n      // avoid action when no arguments are passed\n      if (arguments[0] === undefined) {\n        return;\n      }\n\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.elementScroll.call(\n          this,\n          arguments[0].left !== undefined\n            ? ~~arguments[0].left + this.scrollLeft\n            : ~~arguments[0] + this.scrollLeft,\n          arguments[0].top !== undefined\n            ? ~~arguments[0].top + this.scrollTop\n            : ~~arguments[1] + this.scrollTop\n        );\n\n        return;\n      }\n\n      this.scroll({\n        left: ~~arguments[0].left + this.scrollLeft,\n        top: ~~arguments[0].top + this.scrollTop,\n        behavior: arguments[0].behavior\n      });\n    };\n\n    // Element.prototype.scrollIntoView\n    Element.prototype.scrollIntoView = function() {\n      // avoid smooth behavior if not required\n      if (shouldBailOut(arguments[0]) === true) {\n        original.scrollIntoView.call(\n          this,\n          arguments[0] === undefined ? true : arguments[0]\n        );\n\n        return;\n      }\n\n      // LET THE SMOOTHNESS BEGIN!\n      var scrollableParent = findScrollableParent(this);\n      var parentRects = scrollableParent.getBoundingClientRect();\n      var clientRects = this.getBoundingClientRect();\n\n      if (scrollableParent !== d.body) {\n        // reveal element inside parent\n        smoothScroll.call(\n          this,\n          scrollableParent,\n          scrollableParent.scrollLeft + clientRects.left - parentRects.left,\n          scrollableParent.scrollTop + clientRects.top - parentRects.top\n        );\n\n        // reveal parent in viewport unless is fixed\n        if (w.getComputedStyle(scrollableParent).position !== 'fixed') {\n          w.scrollBy({\n            left: parentRects.left,\n            top: parentRects.top,\n            behavior: 'smooth'\n          });\n        }\n      } else {\n        // reveal element in viewport\n        w.scrollBy({\n          left: clientRects.left,\n          top: clientRects.top,\n          behavior: 'smooth'\n        });\n      }\n    };\n  }\n\n  if (true) {\n    // commonjs\n    module.exports = { polyfill: polyfill };\n  } else {}\n\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///31\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/*\n * anime.js v3.2.0\n * (c) 2020 Julian Garnier\n * Released under the MIT license\n * animejs.com\n */\n\n// Defaults\n\nvar defaultInstanceSettings = {\n  update: null,\n  begin: null,\n  loopBegin: null,\n  changeBegin: null,\n  change: null,\n  changeComplete: null,\n  loopComplete: null,\n  complete: null,\n  loop: 1,\n  direction: 'normal',\n  autoplay: true,\n  timelineOffset: 0\n};\n\nvar defaultTweenSettings = {\n  duration: 1000,\n  delay: 0,\n  endDelay: 0,\n  easing: 'easeOutElastic(1, .5)',\n  round: 0\n};\n\nvar validTransforms = ['translateX', 'translateY', 'translateZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'perspective', 'matrix', 'matrix3d'];\n\n// Caching\n\nvar cache = {\n  CSS: {},\n  springs: {}\n};\n\n// Utils\n\nfunction minMax(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n\nfunction stringContains(str, text) {\n  return str.indexOf(text) > -1;\n}\n\nfunction applyArguments(func, args) {\n  return func.apply(null, args);\n}\n\nvar is = {\n  arr: function (a) { return Array.isArray(a); },\n  obj: function (a) { return stringContains(Object.prototype.toString.call(a), 'Object'); },\n  pth: function (a) { return is.obj(a) && a.hasOwnProperty('totalLength'); },\n  svg: function (a) { return a instanceof SVGElement; },\n  inp: function (a) { return a instanceof HTMLInputElement; },\n  dom: function (a) { return a.nodeType || is.svg(a); },\n  str: function (a) { return typeof a === 'string'; },\n  fnc: function (a) { return typeof a === 'function'; },\n  und: function (a) { return typeof a === 'undefined'; },\n  hex: function (a) { return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a); },\n  rgb: function (a) { return /^rgb/.test(a); },\n  hsl: function (a) { return /^hsl/.test(a); },\n  col: function (a) { return (is.hex(a) || is.rgb(a) || is.hsl(a)); },\n  key: function (a) { return !defaultInstanceSettings.hasOwnProperty(a) && !defaultTweenSettings.hasOwnProperty(a) && a !== 'targets' && a !== 'keyframes'; }\n};\n\n// Easings\n\nfunction parseEasingParameters(string) {\n  var match = /\\(([^)]+)\\)/.exec(string);\n  return match ? match[1].split(',').map(function (p) { return parseFloat(p); }) : [];\n}\n\n// Spring solver inspired by Webkit Copyright © 2016 Apple Inc. All rights reserved. https://webkit.org/demos/spring/spring.js\n\nfunction spring(string, duration) {\n\n  var params = parseEasingParameters(string);\n  var mass = minMax(is.und(params[0]) ? 1 : params[0], .1, 100);\n  var stiffness = minMax(is.und(params[1]) ? 100 : params[1], .1, 100);\n  var damping = minMax(is.und(params[2]) ? 10 : params[2], .1, 100);\n  var velocity =  minMax(is.und(params[3]) ? 0 : params[3], .1, 100);\n  var w0 = Math.sqrt(stiffness / mass);\n  var zeta = damping / (2 * Math.sqrt(stiffness * mass));\n  var wd = zeta < 1 ? w0 * Math.sqrt(1 - zeta * zeta) : 0;\n  var a = 1;\n  var b = zeta < 1 ? (zeta * w0 + -velocity) / wd : -velocity + w0;\n\n  function solver(t) {\n    var progress = duration ? (duration * t) / 1000 : t;\n    if (zeta < 1) {\n      progress = Math.exp(-progress * zeta * w0) * (a * Math.cos(wd * progress) + b * Math.sin(wd * progress));\n    } else {\n      progress = (a + b * progress) * Math.exp(-progress * w0);\n    }\n    if (t === 0 || t === 1) { return t; }\n    return 1 - progress;\n  }\n\n  function getDuration() {\n    var cached = cache.springs[string];\n    if (cached) { return cached; }\n    var frame = 1/6;\n    var elapsed = 0;\n    var rest = 0;\n    while(true) {\n      elapsed += frame;\n      if (solver(elapsed) === 1) {\n        rest++;\n        if (rest >= 16) { break; }\n      } else {\n        rest = 0;\n      }\n    }\n    var duration = elapsed * frame * 1000;\n    cache.springs[string] = duration;\n    return duration;\n  }\n\n  return duration ? solver : getDuration;\n\n}\n\n// Basic steps easing implementation https://developer.mozilla.org/fr/docs/Web/CSS/transition-timing-function\n\nfunction steps(steps) {\n  if ( steps === void 0 ) steps = 10;\n\n  return function (t) { return Math.ceil((minMax(t, 0.000001, 1)) * steps) * (1 / steps); };\n}\n\n// BezierEasing https://github.com/gre/bezier-easing\n\nvar bezier = (function () {\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1 }\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1 }\n  function C(aA1)      { return 3.0 * aA1 }\n\n  function calcBezier(aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT }\n  function getSlope(aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1) }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX, currentT, i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) { aB = currentT; } else { aA = currentT; }\n    } while (Math.abs(currentX) > 0.0000001 && ++i < 10);\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < 4; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) { return aGuessT; }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function bezier(mX1, mY1, mX2, mY2) {\n\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) { return; }\n    var sampleValues = new Float32Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n\n      var intervalStart = 0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample;\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= 0.001) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n\n    }\n\n    return function (x) {\n      if (mX1 === mY1 && mX2 === mY2) { return x; }\n      if (x === 0 || x === 1) { return x; }\n      return calcBezier(getTForX(x), mY1, mY2);\n    }\n\n  }\n\n  return bezier;\n\n})();\n\nvar penner = (function () {\n\n  // Based on jQuery UI's implemenation of easing equations from Robert Penner (http://www.robertpenner.com/easing)\n\n  var eases = { linear: function () { return function (t) { return t; }; } };\n\n  var functionEasings = {\n    Sine: function () { return function (t) { return 1 - Math.cos(t * Math.PI / 2); }; },\n    Circ: function () { return function (t) { return 1 - Math.sqrt(1 - t * t); }; },\n    Back: function () { return function (t) { return t * t * (3 * t - 2); }; },\n    Bounce: function () { return function (t) {\n      var pow2, b = 4;\n      while (t < (( pow2 = Math.pow(2, --b)) - 1) / 11) {}\n      return 1 / Math.pow(4, 3 - b) - 7.5625 * Math.pow(( pow2 * 3 - 2 ) / 22 - t, 2)\n    }; },\n    Elastic: function (amplitude, period) {\n      if ( amplitude === void 0 ) amplitude = 1;\n      if ( period === void 0 ) period = .5;\n\n      var a = minMax(amplitude, 1, 10);\n      var p = minMax(period, .1, 2);\n      return function (t) {\n        return (t === 0 || t === 1) ? t : \n          -a * Math.pow(2, 10 * (t - 1)) * Math.sin((((t - 1) - (p / (Math.PI * 2) * Math.asin(1 / a))) * (Math.PI * 2)) / p);\n      }\n    }\n  };\n\n  var baseEasings = ['Quad', 'Cubic', 'Quart', 'Quint', 'Expo'];\n\n  baseEasings.forEach(function (name, i) {\n    functionEasings[name] = function () { return function (t) { return Math.pow(t, i + 2); }; };\n  });\n\n  Object.keys(functionEasings).forEach(function (name) {\n    var easeIn = functionEasings[name];\n    eases['easeIn' + name] = easeIn;\n    eases['easeOut' + name] = function (a, b) { return function (t) { return 1 - easeIn(a, b)(1 - t); }; };\n    eases['easeInOut' + name] = function (a, b) { return function (t) { return t < 0.5 ? easeIn(a, b)(t * 2) / 2 : \n      1 - easeIn(a, b)(t * -2 + 2) / 2; }; };\n  });\n\n  return eases;\n\n})();\n\nfunction parseEasings(easing, duration) {\n  if (is.fnc(easing)) { return easing; }\n  var name = easing.split('(')[0];\n  var ease = penner[name];\n  var args = parseEasingParameters(easing);\n  switch (name) {\n    case 'spring' : return spring(easing, duration);\n    case 'cubicBezier' : return applyArguments(bezier, args);\n    case 'steps' : return applyArguments(steps, args);\n    default : return applyArguments(ease, args);\n  }\n}\n\n// Strings\n\nfunction selectString(str) {\n  try {\n    var nodes = document.querySelectorAll(str);\n    return nodes;\n  } catch(e) {\n    return;\n  }\n}\n\n// Arrays\n\nfunction filterArray(arr, callback) {\n  var len = arr.length;\n  var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n  var result = [];\n  for (var i = 0; i < len; i++) {\n    if (i in arr) {\n      var val = arr[i];\n      if (callback.call(thisArg, val, i, arr)) {\n        result.push(val);\n      }\n    }\n  }\n  return result;\n}\n\nfunction flattenArray(arr) {\n  return arr.reduce(function (a, b) { return a.concat(is.arr(b) ? flattenArray(b) : b); }, []);\n}\n\nfunction toArray(o) {\n  if (is.arr(o)) { return o; }\n  if (is.str(o)) { o = selectString(o) || o; }\n  if (o instanceof NodeList || o instanceof HTMLCollection) { return [].slice.call(o); }\n  return [o];\n}\n\nfunction arrayContains(arr, val) {\n  return arr.some(function (a) { return a === val; });\n}\n\n// Objects\n\nfunction cloneObject(o) {\n  var clone = {};\n  for (var p in o) { clone[p] = o[p]; }\n  return clone;\n}\n\nfunction replaceObjectProps(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o1) { o[p] = o2.hasOwnProperty(p) ? o2[p] : o1[p]; }\n  return o;\n}\n\nfunction mergeObjects(o1, o2) {\n  var o = cloneObject(o1);\n  for (var p in o2) { o[p] = is.und(o1[p]) ? o2[p] : o1[p]; }\n  return o;\n}\n\n// Colors\n\nfunction rgbToRgba(rgbValue) {\n  var rgb = /rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(rgbValue);\n  return rgb ? (\"rgba(\" + (rgb[1]) + \",1)\") : rgbValue;\n}\n\nfunction hexToRgba(hexValue) {\n  var rgx = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  var hex = hexValue.replace(rgx, function (m, r, g, b) { return r + r + g + g + b + b; } );\n  var rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  var r = parseInt(rgb[1], 16);\n  var g = parseInt(rgb[2], 16);\n  var b = parseInt(rgb[3], 16);\n  return (\"rgba(\" + r + \",\" + g + \",\" + b + \",1)\");\n}\n\nfunction hslToRgba(hslValue) {\n  var hsl = /hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(hslValue) || /hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(hslValue);\n  var h = parseInt(hsl[1], 10) / 360;\n  var s = parseInt(hsl[2], 10) / 100;\n  var l = parseInt(hsl[3], 10) / 100;\n  var a = hsl[4] || 1;\n  function hue2rgb(p, q, t) {\n    if (t < 0) { t += 1; }\n    if (t > 1) { t -= 1; }\n    if (t < 1/6) { return p + (q - p) * 6 * t; }\n    if (t < 1/2) { return q; }\n    if (t < 2/3) { return p + (q - p) * (2/3 - t) * 6; }\n    return p;\n  }\n  var r, g, b;\n  if (s == 0) {\n    r = g = b = l;\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1/3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1/3);\n  }\n  return (\"rgba(\" + (r * 255) + \",\" + (g * 255) + \",\" + (b * 255) + \",\" + a + \")\");\n}\n\nfunction colorToRgb(val) {\n  if (is.rgb(val)) { return rgbToRgba(val); }\n  if (is.hex(val)) { return hexToRgba(val); }\n  if (is.hsl(val)) { return hslToRgba(val); }\n}\n\n// Units\n\nfunction getUnit(val) {\n  var split = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(val);\n  if (split) { return split[1]; }\n}\n\nfunction getTransformUnit(propName) {\n  if (stringContains(propName, 'translate') || propName === 'perspective') { return 'px'; }\n  if (stringContains(propName, 'rotate') || stringContains(propName, 'skew')) { return 'deg'; }\n}\n\n// Values\n\nfunction getFunctionValue(val, animatable) {\n  if (!is.fnc(val)) { return val; }\n  return val(animatable.target, animatable.id, animatable.total);\n}\n\nfunction getAttribute(el, prop) {\n  return el.getAttribute(prop);\n}\n\nfunction convertPxToUnit(el, value, unit) {\n  var valueUnit = getUnit(value);\n  if (arrayContains([unit, 'deg', 'rad', 'turn'], valueUnit)) { return value; }\n  var cached = cache.CSS[value + unit];\n  if (!is.und(cached)) { return cached; }\n  var baseline = 100;\n  var tempEl = document.createElement(el.tagName);\n  var parentEl = (el.parentNode && (el.parentNode !== document)) ? el.parentNode : document.body;\n  parentEl.appendChild(tempEl);\n  tempEl.style.position = 'absolute';\n  tempEl.style.width = baseline + unit;\n  var factor = baseline / tempEl.offsetWidth;\n  parentEl.removeChild(tempEl);\n  var convertedUnit = factor * parseFloat(value);\n  cache.CSS[value + unit] = convertedUnit;\n  return convertedUnit;\n}\n\nfunction getCSSValue(el, prop, unit) {\n  if (prop in el.style) {\n    var uppercasePropName = prop.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    var value = el.style[prop] || getComputedStyle(el).getPropertyValue(uppercasePropName) || '0';\n    return unit ? convertPxToUnit(el, value, unit) : value;\n  }\n}\n\nfunction getAnimationType(el, prop) {\n  if (is.dom(el) && !is.inp(el) && (getAttribute(el, prop) || (is.svg(el) && el[prop]))) { return 'attribute'; }\n  if (is.dom(el) && arrayContains(validTransforms, prop)) { return 'transform'; }\n  if (is.dom(el) && (prop !== 'transform' && getCSSValue(el, prop))) { return 'css'; }\n  if (el[prop] != null) { return 'object'; }\n}\n\nfunction getElementTransforms(el) {\n  if (!is.dom(el)) { return; }\n  var str = el.style.transform || '';\n  var reg  = /(\\w+)\\(([^)]*)\\)/g;\n  var transforms = new Map();\n  var m; while (m = reg.exec(str)) { transforms.set(m[1], m[2]); }\n  return transforms;\n}\n\nfunction getTransformValue(el, propName, animatable, unit) {\n  var defaultVal = stringContains(propName, 'scale') ? 1 : 0 + getTransformUnit(propName);\n  var value = getElementTransforms(el).get(propName) || defaultVal;\n  if (animatable) {\n    animatable.transforms.list.set(propName, value);\n    animatable.transforms['last'] = propName;\n  }\n  return unit ? convertPxToUnit(el, value, unit) : value;\n}\n\nfunction getOriginalTargetValue(target, propName, unit, animatable) {\n  switch (getAnimationType(target, propName)) {\n    case 'transform': return getTransformValue(target, propName, animatable, unit);\n    case 'css': return getCSSValue(target, propName, unit);\n    case 'attribute': return getAttribute(target, propName);\n    default: return target[propName] || 0;\n  }\n}\n\nfunction getRelativeValue(to, from) {\n  var operator = /^(\\*=|\\+=|-=)/.exec(to);\n  if (!operator) { return to; }\n  var u = getUnit(to) || 0;\n  var x = parseFloat(from);\n  var y = parseFloat(to.replace(operator[0], ''));\n  switch (operator[0][0]) {\n    case '+': return x + y + u;\n    case '-': return x - y + u;\n    case '*': return x * y + u;\n  }\n}\n\nfunction validateValue(val, unit) {\n  if (is.col(val)) { return colorToRgb(val); }\n  if (/\\s/g.test(val)) { return val; }\n  var originalUnit = getUnit(val);\n  var unitLess = originalUnit ? val.substr(0, val.length - originalUnit.length) : val;\n  if (unit) { return unitLess + unit; }\n  return unitLess;\n}\n\n// getTotalLength() equivalent for circle, rect, polyline, polygon and line shapes\n// adapted from https://gist.github.com/SebLambla/3e0550c496c236709744\n\nfunction getDistance(p1, p2) {\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n\nfunction getCircleLength(el) {\n  return Math.PI * 2 * getAttribute(el, 'r');\n}\n\nfunction getRectLength(el) {\n  return (getAttribute(el, 'width') * 2) + (getAttribute(el, 'height') * 2);\n}\n\nfunction getLineLength(el) {\n  return getDistance(\n    {x: getAttribute(el, 'x1'), y: getAttribute(el, 'y1')}, \n    {x: getAttribute(el, 'x2'), y: getAttribute(el, 'y2')}\n  );\n}\n\nfunction getPolylineLength(el) {\n  var points = el.points;\n  var totalLength = 0;\n  var previousPos;\n  for (var i = 0 ; i < points.numberOfItems; i++) {\n    var currentPos = points.getItem(i);\n    if (i > 0) { totalLength += getDistance(previousPos, currentPos); }\n    previousPos = currentPos;\n  }\n  return totalLength;\n}\n\nfunction getPolygonLength(el) {\n  var points = el.points;\n  return getPolylineLength(el) + getDistance(points.getItem(points.numberOfItems - 1), points.getItem(0));\n}\n\n// Path animation\n\nfunction getTotalLength(el) {\n  if (el.getTotalLength) { return el.getTotalLength(); }\n  switch(el.tagName.toLowerCase()) {\n    case 'circle': return getCircleLength(el);\n    case 'rect': return getRectLength(el);\n    case 'line': return getLineLength(el);\n    case 'polyline': return getPolylineLength(el);\n    case 'polygon': return getPolygonLength(el);\n  }\n}\n\nfunction setDashoffset(el) {\n  var pathLength = getTotalLength(el);\n  el.setAttribute('stroke-dasharray', pathLength);\n  return pathLength;\n}\n\n// Motion path\n\nfunction getParentSvgEl(el) {\n  var parentEl = el.parentNode;\n  while (is.svg(parentEl)) {\n    if (!is.svg(parentEl.parentNode)) { break; }\n    parentEl = parentEl.parentNode;\n  }\n  return parentEl;\n}\n\nfunction getParentSvg(pathEl, svgData) {\n  var svg = svgData || {};\n  var parentSvgEl = svg.el || getParentSvgEl(pathEl);\n  var rect = parentSvgEl.getBoundingClientRect();\n  var viewBoxAttr = getAttribute(parentSvgEl, 'viewBox');\n  var width = rect.width;\n  var height = rect.height;\n  var viewBox = svg.viewBox || (viewBoxAttr ? viewBoxAttr.split(' ') : [0, 0, width, height]);\n  return {\n    el: parentSvgEl,\n    viewBox: viewBox,\n    x: viewBox[0] / 1,\n    y: viewBox[1] / 1,\n    w: width / viewBox[2],\n    h: height / viewBox[3]\n  }\n}\n\nfunction getPath(path, percent) {\n  var pathEl = is.str(path) ? selectString(path)[0] : path;\n  var p = percent || 100;\n  return function(property) {\n    return {\n      property: property,\n      el: pathEl,\n      svg: getParentSvg(pathEl),\n      totalLength: getTotalLength(pathEl) * (p / 100)\n    }\n  }\n}\n\nfunction getPathProgress(path, progress) {\n  function point(offset) {\n    if ( offset === void 0 ) offset = 0;\n\n    var l = progress + offset >= 1 ? progress + offset : 0;\n    return path.el.getPointAtLength(l);\n  }\n  var svg = getParentSvg(path.el, path.svg);\n  var p = point();\n  var p0 = point(-1);\n  var p1 = point(+1);\n  switch (path.property) {\n    case 'x': return (p.x - svg.x) * svg.w;\n    case 'y': return (p.y - svg.y) * svg.h;\n    case 'angle': return Math.atan2(p1.y - p0.y, p1.x - p0.x) * 180 / Math.PI;\n  }\n}\n\n// Decompose value\n\nfunction decomposeValue(val, unit) {\n  // const rgx = /-?\\d*\\.?\\d+/g; // handles basic numbers\n  // const rgx = /[+-]?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var rgx = /[+-]?\\d*\\.?\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?/g; // handles exponents notation\n  var value = validateValue((is.pth(val) ? val.totalLength : val), unit) + '';\n  return {\n    original: value,\n    numbers: value.match(rgx) ? value.match(rgx).map(Number) : [0],\n    strings: (is.str(val) || unit) ? value.split(rgx) : []\n  }\n}\n\n// Animatables\n\nfunction parseTargets(targets) {\n  var targetsArray = targets ? (flattenArray(is.arr(targets) ? targets.map(toArray) : toArray(targets))) : [];\n  return filterArray(targetsArray, function (item, pos, self) { return self.indexOf(item) === pos; });\n}\n\nfunction getAnimatables(targets) {\n  var parsed = parseTargets(targets);\n  return parsed.map(function (t, i) {\n    return {target: t, id: i, total: parsed.length, transforms: { list: getElementTransforms(t) } };\n  });\n}\n\n// Properties\n\nfunction normalizePropertyTweens(prop, tweenSettings) {\n  var settings = cloneObject(tweenSettings);\n  // Override duration if easing is a spring\n  if (/^spring/.test(settings.easing)) { settings.duration = spring(settings.easing); }\n  if (is.arr(prop)) {\n    var l = prop.length;\n    var isFromTo = (l === 2 && !is.obj(prop[0]));\n    if (!isFromTo) {\n      // Duration divided by the number of tweens\n      if (!is.fnc(tweenSettings.duration)) { settings.duration = tweenSettings.duration / l; }\n    } else {\n      // Transform [from, to] values shorthand to a valid tween value\n      prop = {value: prop};\n    }\n  }\n  var propArray = is.arr(prop) ? prop : [prop];\n  return propArray.map(function (v, i) {\n    var obj = (is.obj(v) && !is.pth(v)) ? v : {value: v};\n    // Default delay value should only be applied to the first tween\n    if (is.und(obj.delay)) { obj.delay = !i ? tweenSettings.delay : 0; }\n    // Default endDelay value should only be applied to the last tween\n    if (is.und(obj.endDelay)) { obj.endDelay = i === propArray.length - 1 ? tweenSettings.endDelay : 0; }\n    return obj;\n  }).map(function (k) { return mergeObjects(k, settings); });\n}\n\n\nfunction flattenKeyframes(keyframes) {\n  var propertyNames = filterArray(flattenArray(keyframes.map(function (key) { return Object.keys(key); })), function (p) { return is.key(p); })\n  .reduce(function (a,b) { if (a.indexOf(b) < 0) { a.push(b); } return a; }, []);\n  var properties = {};\n  var loop = function ( i ) {\n    var propName = propertyNames[i];\n    properties[propName] = keyframes.map(function (key) {\n      var newKey = {};\n      for (var p in key) {\n        if (is.key(p)) {\n          if (p == propName) { newKey.value = key[p]; }\n        } else {\n          newKey[p] = key[p];\n        }\n      }\n      return newKey;\n    });\n  };\n\n  for (var i = 0; i < propertyNames.length; i++) loop( i );\n  return properties;\n}\n\nfunction getProperties(tweenSettings, params) {\n  var properties = [];\n  var keyframes = params.keyframes;\n  if (keyframes) { params = mergeObjects(flattenKeyframes(keyframes), params); }\n  for (var p in params) {\n    if (is.key(p)) {\n      properties.push({\n        name: p,\n        tweens: normalizePropertyTweens(params[p], tweenSettings)\n      });\n    }\n  }\n  return properties;\n}\n\n// Tweens\n\nfunction normalizeTweenValues(tween, animatable) {\n  var t = {};\n  for (var p in tween) {\n    var value = getFunctionValue(tween[p], animatable);\n    if (is.arr(value)) {\n      value = value.map(function (v) { return getFunctionValue(v, animatable); });\n      if (value.length === 1) { value = value[0]; }\n    }\n    t[p] = value;\n  }\n  t.duration = parseFloat(t.duration);\n  t.delay = parseFloat(t.delay);\n  return t;\n}\n\nfunction normalizeTweens(prop, animatable) {\n  var previousTween;\n  return prop.tweens.map(function (t) {\n    var tween = normalizeTweenValues(t, animatable);\n    var tweenValue = tween.value;\n    var to = is.arr(tweenValue) ? tweenValue[1] : tweenValue;\n    var toUnit = getUnit(to);\n    var originalValue = getOriginalTargetValue(animatable.target, prop.name, toUnit, animatable);\n    var previousValue = previousTween ? previousTween.to.original : originalValue;\n    var from = is.arr(tweenValue) ? tweenValue[0] : previousValue;\n    var fromUnit = getUnit(from) || getUnit(originalValue);\n    var unit = toUnit || fromUnit;\n    if (is.und(to)) { to = previousValue; }\n    tween.from = decomposeValue(from, unit);\n    tween.to = decomposeValue(getRelativeValue(to, from), unit);\n    tween.start = previousTween ? previousTween.end : 0;\n    tween.end = tween.start + tween.delay + tween.duration + tween.endDelay;\n    tween.easing = parseEasings(tween.easing, tween.duration);\n    tween.isPath = is.pth(tweenValue);\n    tween.isColor = is.col(tween.from.original);\n    if (tween.isColor) { tween.round = 1; }\n    previousTween = tween;\n    return tween;\n  });\n}\n\n// Tween progress\n\nvar setProgressValue = {\n  css: function (t, p, v) { return t.style[p] = v; },\n  attribute: function (t, p, v) { return t.setAttribute(p, v); },\n  object: function (t, p, v) { return t[p] = v; },\n  transform: function (t, p, v, transforms, manual) {\n    transforms.list.set(p, v);\n    if (p === transforms.last || manual) {\n      var str = '';\n      transforms.list.forEach(function (value, prop) { str += prop + \"(\" + value + \") \"; });\n      t.style.transform = str;\n    }\n  }\n};\n\n// Set Value helper\n\nfunction setTargetsValue(targets, properties) {\n  var animatables = getAnimatables(targets);\n  animatables.forEach(function (animatable) {\n    for (var property in properties) {\n      var value = getFunctionValue(properties[property], animatable);\n      var target = animatable.target;\n      var valueUnit = getUnit(value);\n      var originalValue = getOriginalTargetValue(target, property, valueUnit, animatable);\n      var unit = valueUnit || getUnit(originalValue);\n      var to = getRelativeValue(validateValue(value, unit), originalValue);\n      var animType = getAnimationType(target, property);\n      setProgressValue[animType](target, property, to, animatable.transforms, true);\n    }\n  });\n}\n\n// Animations\n\nfunction createAnimation(animatable, prop) {\n  var animType = getAnimationType(animatable.target, prop.name);\n  if (animType) {\n    var tweens = normalizeTweens(prop, animatable);\n    var lastTween = tweens[tweens.length - 1];\n    return {\n      type: animType,\n      property: prop.name,\n      animatable: animatable,\n      tweens: tweens,\n      duration: lastTween.end,\n      delay: tweens[0].delay,\n      endDelay: lastTween.endDelay\n    }\n  }\n}\n\nfunction getAnimations(animatables, properties) {\n  return filterArray(flattenArray(animatables.map(function (animatable) {\n    return properties.map(function (prop) {\n      return createAnimation(animatable, prop);\n    });\n  })), function (a) { return !is.und(a); });\n}\n\n// Create Instance\n\nfunction getInstanceTimings(animations, tweenSettings) {\n  var animLength = animations.length;\n  var getTlOffset = function (anim) { return anim.timelineOffset ? anim.timelineOffset : 0; };\n  var timings = {};\n  timings.duration = animLength ? Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration; })) : tweenSettings.duration;\n  timings.delay = animLength ? Math.min.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.delay; })) : tweenSettings.delay;\n  timings.endDelay = animLength ? timings.duration - Math.max.apply(Math, animations.map(function (anim) { return getTlOffset(anim) + anim.duration - anim.endDelay; })) : tweenSettings.endDelay;\n  return timings;\n}\n\nvar instanceID = 0;\n\nfunction createNewInstance(params) {\n  var instanceSettings = replaceObjectProps(defaultInstanceSettings, params);\n  var tweenSettings = replaceObjectProps(defaultTweenSettings, params);\n  var properties = getProperties(tweenSettings, params);\n  var animatables = getAnimatables(params.targets);\n  var animations = getAnimations(animatables, properties);\n  var timings = getInstanceTimings(animations, tweenSettings);\n  var id = instanceID;\n  instanceID++;\n  return mergeObjects(instanceSettings, {\n    id: id,\n    children: [],\n    animatables: animatables,\n    animations: animations,\n    duration: timings.duration,\n    delay: timings.delay,\n    endDelay: timings.endDelay\n  });\n}\n\n// Core\n\nvar activeInstances = [];\nvar pausedInstances = [];\nvar raf;\n\nvar engine = (function () {\n  function play() { \n    raf = requestAnimationFrame(step);\n  }\n  function step(t) {\n    var activeInstancesLength = activeInstances.length;\n    if (activeInstancesLength) {\n      var i = 0;\n      while (i < activeInstancesLength) {\n        var activeInstance = activeInstances[i];\n        if (!activeInstance.paused) {\n          activeInstance.tick(t);\n        } else {\n          var instanceIndex = activeInstances.indexOf(activeInstance);\n          if (instanceIndex > -1) {\n            activeInstances.splice(instanceIndex, 1);\n            activeInstancesLength = activeInstances.length;\n          }\n        }\n        i++;\n      }\n      play();\n    } else {\n      raf = cancelAnimationFrame(raf);\n    }\n  }\n  return play;\n})();\n\nfunction handleVisibilityChange() {\n  if (document.hidden) {\n    activeInstances.forEach(function (ins) { return ins.pause(); });\n    pausedInstances = activeInstances.slice(0);\n    anime.running = activeInstances = [];\n  } else {\n    pausedInstances.forEach(function (ins) { return ins.play(); });\n  }\n}\n\nif (typeof document !== 'undefined') {\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n}\n\n// Public Instance\n\nfunction anime(params) {\n  if ( params === void 0 ) params = {};\n\n\n  var startTime = 0, lastTime = 0, now = 0;\n  var children, childrenLength = 0;\n  var resolve = null;\n\n  function makePromise(instance) {\n    var promise = window.Promise && new Promise(function (_resolve) { return resolve = _resolve; });\n    instance.finished = promise;\n    return promise;\n  }\n\n  var instance = createNewInstance(params);\n  var promise = makePromise(instance);\n\n  function toggleInstanceDirection() {\n    var direction = instance.direction;\n    if (direction !== 'alternate') {\n      instance.direction = direction !== 'normal' ? 'normal' : 'reverse';\n    }\n    instance.reversed = !instance.reversed;\n    children.forEach(function (child) { return child.reversed = instance.reversed; });\n  }\n\n  function adjustTime(time) {\n    return instance.reversed ? instance.duration - time : time;\n  }\n\n  function resetTime() {\n    startTime = 0;\n    lastTime = adjustTime(instance.currentTime) * (1 / anime.speed);\n  }\n\n  function seekChild(time, child) {\n    if (child) { child.seek(time - child.timelineOffset); }\n  }\n\n  function syncInstanceChildren(time) {\n    if (!instance.reversePlayback) {\n      for (var i = 0; i < childrenLength; i++) { seekChild(time, children[i]); }\n    } else {\n      for (var i$1 = childrenLength; i$1--;) { seekChild(time, children[i$1]); }\n    }\n  }\n\n  function setAnimationsProgress(insTime) {\n    var i = 0;\n    var animations = instance.animations;\n    var animationsLength = animations.length;\n    while (i < animationsLength) {\n      var anim = animations[i];\n      var animatable = anim.animatable;\n      var tweens = anim.tweens;\n      var tweenLength = tweens.length - 1;\n      var tween = tweens[tweenLength];\n      // Only check for keyframes if there is more than one tween\n      if (tweenLength) { tween = filterArray(tweens, function (t) { return (insTime < t.end); })[0] || tween; }\n      var elapsed = minMax(insTime - tween.start - tween.delay, 0, tween.duration) / tween.duration;\n      var eased = isNaN(elapsed) ? 1 : tween.easing(elapsed);\n      var strings = tween.to.strings;\n      var round = tween.round;\n      var numbers = [];\n      var toNumbersLength = tween.to.numbers.length;\n      var progress = (void 0);\n      for (var n = 0; n < toNumbersLength; n++) {\n        var value = (void 0);\n        var toNumber = tween.to.numbers[n];\n        var fromNumber = tween.from.numbers[n] || 0;\n        if (!tween.isPath) {\n          value = fromNumber + (eased * (toNumber - fromNumber));\n        } else {\n          value = getPathProgress(tween.value, eased * toNumber);\n        }\n        if (round) {\n          if (!(tween.isColor && n > 2)) {\n            value = Math.round(value * round) / round;\n          }\n        }\n        numbers.push(value);\n      }\n      // Manual Array.reduce for better performances\n      var stringsLength = strings.length;\n      if (!stringsLength) {\n        progress = numbers[0];\n      } else {\n        progress = strings[0];\n        for (var s = 0; s < stringsLength; s++) {\n          var a = strings[s];\n          var b = strings[s + 1];\n          var n$1 = numbers[s];\n          if (!isNaN(n$1)) {\n            if (!b) {\n              progress += n$1 + ' ';\n            } else {\n              progress += n$1 + b;\n            }\n          }\n        }\n      }\n      setProgressValue[anim.type](animatable.target, anim.property, progress, animatable.transforms);\n      anim.currentValue = progress;\n      i++;\n    }\n  }\n\n  function setCallback(cb) {\n    if (instance[cb] && !instance.passThrough) { instance[cb](instance); }\n  }\n\n  function countIteration() {\n    if (instance.remaining && instance.remaining !== true) {\n      instance.remaining--;\n    }\n  }\n\n  function setInstanceProgress(engineTime) {\n    var insDuration = instance.duration;\n    var insDelay = instance.delay;\n    var insEndDelay = insDuration - instance.endDelay;\n    var insTime = adjustTime(engineTime);\n    instance.progress = minMax((insTime / insDuration) * 100, 0, 100);\n    instance.reversePlayback = insTime < instance.currentTime;\n    if (children) { syncInstanceChildren(insTime); }\n    if (!instance.began && instance.currentTime > 0) {\n      instance.began = true;\n      setCallback('begin');\n    }\n    if (!instance.loopBegan && instance.currentTime > 0) {\n      instance.loopBegan = true;\n      setCallback('loopBegin');\n    }\n    if (insTime <= insDelay && instance.currentTime !== 0) {\n      setAnimationsProgress(0);\n    }\n    if ((insTime >= insEndDelay && instance.currentTime !== insDuration) || !insDuration) {\n      setAnimationsProgress(insDuration);\n    }\n    if (insTime > insDelay && insTime < insEndDelay) {\n      if (!instance.changeBegan) {\n        instance.changeBegan = true;\n        instance.changeCompleted = false;\n        setCallback('changeBegin');\n      }\n      setCallback('change');\n      setAnimationsProgress(insTime);\n    } else {\n      if (instance.changeBegan) {\n        instance.changeCompleted = true;\n        instance.changeBegan = false;\n        setCallback('changeComplete');\n      }\n    }\n    instance.currentTime = minMax(insTime, 0, insDuration);\n    if (instance.began) { setCallback('update'); }\n    if (engineTime >= insDuration) {\n      lastTime = 0;\n      countIteration();\n      if (!instance.remaining) {\n        instance.paused = true;\n        if (!instance.completed) {\n          instance.completed = true;\n          setCallback('loopComplete');\n          setCallback('complete');\n          if (!instance.passThrough && 'Promise' in window) {\n            resolve();\n            promise = makePromise(instance);\n          }\n        }\n      } else {\n        startTime = now;\n        setCallback('loopComplete');\n        instance.loopBegan = false;\n        if (instance.direction === 'alternate') {\n          toggleInstanceDirection();\n        }\n      }\n    }\n  }\n\n  instance.reset = function() {\n    var direction = instance.direction;\n    instance.passThrough = false;\n    instance.currentTime = 0;\n    instance.progress = 0;\n    instance.paused = true;\n    instance.began = false;\n    instance.loopBegan = false;\n    instance.changeBegan = false;\n    instance.completed = false;\n    instance.changeCompleted = false;\n    instance.reversePlayback = false;\n    instance.reversed = direction === 'reverse';\n    instance.remaining = instance.loop;\n    children = instance.children;\n    childrenLength = children.length;\n    for (var i = childrenLength; i--;) { instance.children[i].reset(); }\n    if (instance.reversed && instance.loop !== true || (direction === 'alternate' && instance.loop === 1)) { instance.remaining++; }\n    setAnimationsProgress(instance.reversed ? instance.duration : 0);\n  };\n\n  // Set Value helper\n\n  instance.set = function(targets, properties) {\n    setTargetsValue(targets, properties);\n    return instance;\n  };\n\n  instance.tick = function(t) {\n    now = t;\n    if (!startTime) { startTime = now; }\n    setInstanceProgress((now + (lastTime - startTime)) * anime.speed);\n  };\n\n  instance.seek = function(time) {\n    setInstanceProgress(adjustTime(time));\n  };\n\n  instance.pause = function() {\n    instance.paused = true;\n    resetTime();\n  };\n\n  instance.play = function() {\n    if (!instance.paused) { return; }\n    if (instance.completed) { instance.reset(); }\n    instance.paused = false;\n    activeInstances.push(instance);\n    resetTime();\n    if (!raf) { engine(); }\n  };\n\n  instance.reverse = function() {\n    toggleInstanceDirection();\n    instance.completed = instance.reversed ? false : true;\n    resetTime();\n  };\n\n  instance.restart = function() {\n    instance.reset();\n    instance.play();\n  };\n\n  instance.reset();\n\n  if (instance.autoplay) { instance.play(); }\n\n  return instance;\n\n}\n\n// Remove targets from animation\n\nfunction removeTargetsFromAnimations(targetsArray, animations) {\n  for (var a = animations.length; a--;) {\n    if (arrayContains(targetsArray, animations[a].animatable.target)) {\n      animations.splice(a, 1);\n    }\n  }\n}\n\nfunction removeTargets(targets) {\n  var targetsArray = parseTargets(targets);\n  for (var i = activeInstances.length; i--;) {\n    var instance = activeInstances[i];\n    var animations = instance.animations;\n    var children = instance.children;\n    removeTargetsFromAnimations(targetsArray, animations);\n    for (var c = children.length; c--;) {\n      var child = children[c];\n      var childAnimations = child.animations;\n      removeTargetsFromAnimations(targetsArray, childAnimations);\n      if (!childAnimations.length && !child.children.length) { children.splice(c, 1); }\n    }\n    if (!animations.length && !children.length) { instance.pause(); }\n  }\n}\n\n// Stagger helpers\n\nfunction stagger(val, params) {\n  if ( params === void 0 ) params = {};\n\n  var direction = params.direction || 'normal';\n  var easing = params.easing ? parseEasings(params.easing) : null;\n  var grid = params.grid;\n  var axis = params.axis;\n  var fromIndex = params.from || 0;\n  var fromFirst = fromIndex === 'first';\n  var fromCenter = fromIndex === 'center';\n  var fromLast = fromIndex === 'last';\n  var isRange = is.arr(val);\n  var val1 = isRange ? parseFloat(val[0]) : parseFloat(val);\n  var val2 = isRange ? parseFloat(val[1]) : 0;\n  var unit = getUnit(isRange ? val[1] : val) || 0;\n  var start = params.start || 0 + (isRange ? val1 : 0);\n  var values = [];\n  var maxValue = 0;\n  return function (el, i, t) {\n    if (fromFirst) { fromIndex = 0; }\n    if (fromCenter) { fromIndex = (t - 1) / 2; }\n    if (fromLast) { fromIndex = t - 1; }\n    if (!values.length) {\n      for (var index = 0; index < t; index++) {\n        if (!grid) {\n          values.push(Math.abs(fromIndex - index));\n        } else {\n          var fromX = !fromCenter ? fromIndex%grid[0] : (grid[0]-1)/2;\n          var fromY = !fromCenter ? Math.floor(fromIndex/grid[0]) : (grid[1]-1)/2;\n          var toX = index%grid[0];\n          var toY = Math.floor(index/grid[0]);\n          var distanceX = fromX - toX;\n          var distanceY = fromY - toY;\n          var value = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n          if (axis === 'x') { value = -distanceX; }\n          if (axis === 'y') { value = -distanceY; }\n          values.push(value);\n        }\n        maxValue = Math.max.apply(Math, values);\n      }\n      if (easing) { values = values.map(function (val) { return easing(val / maxValue) * maxValue; }); }\n      if (direction === 'reverse') { values = values.map(function (val) { return axis ? (val < 0) ? val * -1 : -val : Math.abs(maxValue - val); }); }\n    }\n    var spacing = isRange ? (val2 - val1) / maxValue : val1;\n    return start + (spacing * (Math.round(values[i] * 100) / 100)) + unit;\n  }\n}\n\n// Timeline\n\nfunction timeline(params) {\n  if ( params === void 0 ) params = {};\n\n  var tl = anime(params);\n  tl.duration = 0;\n  tl.add = function(instanceParams, timelineOffset) {\n    var tlIndex = activeInstances.indexOf(tl);\n    var children = tl.children;\n    if (tlIndex > -1) { activeInstances.splice(tlIndex, 1); }\n    function passThrough(ins) { ins.passThrough = true; }\n    for (var i = 0; i < children.length; i++) { passThrough(children[i]); }\n    var insParams = mergeObjects(instanceParams, replaceObjectProps(defaultTweenSettings, params));\n    insParams.targets = insParams.targets || params.targets;\n    var tlDuration = tl.duration;\n    insParams.autoplay = false;\n    insParams.direction = tl.direction;\n    insParams.timelineOffset = is.und(timelineOffset) ? tlDuration : getRelativeValue(timelineOffset, tlDuration);\n    passThrough(tl);\n    tl.seek(insParams.timelineOffset);\n    var ins = anime(insParams);\n    passThrough(ins);\n    children.push(ins);\n    var timings = getInstanceTimings(children, params);\n    tl.delay = timings.delay;\n    tl.endDelay = timings.endDelay;\n    tl.duration = timings.duration;\n    tl.seek(0);\n    tl.reset();\n    if (tl.autoplay) { tl.play(); }\n    return tl;\n  };\n  return tl;\n}\n\nanime.version = '3.2.0';\nanime.speed = 1;\nanime.running = activeInstances;\nanime.remove = removeTargets;\nanime.get = getOriginalTargetValue;\nanime.set = setTargetsValue;\nanime.convertPx = convertPxToUnit;\nanime.path = getPath;\nanime.setDashoffset = setDashoffset;\nanime.stagger = stagger;\nanime.timeline = timeline;\nanime.easing = parseEasings;\nanime.penner = penner;\nanime.random = function (min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; };\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (anime);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n")},,function(module,exports,__webpack_require__){eval("var global = __webpack_require__(17);\nvar hide = __webpack_require__(27);\nvar has = __webpack_require__(35);\nvar SRC = __webpack_require__(62)('src');\nvar $toString = __webpack_require__(131);\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\n__webpack_require__(63).inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS5qcz8yYWJhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFNSQyA9IHJlcXVpcmUoJy4vX3VpZCcpKCdzcmMnKTtcbnZhciAkdG9TdHJpbmcgPSByZXF1aXJlKCcuL19mdW5jdGlvbi10by1zdHJpbmcnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyIFRQTCA9ICgnJyArICR0b1N0cmluZykuc3BsaXQoVE9fU1RSSU5HKTtcblxucmVxdWlyZSgnLi9fY29yZScpLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuICR0b1N0cmluZy5jYWxsKGl0KTtcbn07XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBrZXksIHZhbCwgc2FmZSkge1xuICB2YXIgaXNGdW5jdGlvbiA9IHR5cGVvZiB2YWwgPT0gJ2Z1bmN0aW9uJztcbiAgaWYgKGlzRnVuY3Rpb24pIGhhcyh2YWwsICduYW1lJykgfHwgaGlkZSh2YWwsICduYW1lJywga2V5KTtcbiAgaWYgKE9ba2V5XSA9PT0gdmFsKSByZXR1cm47XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCBTUkMpIHx8IGhpZGUodmFsLCBTUkMsIE9ba2V5XSA/ICcnICsgT1trZXldIDogVFBMLmpvaW4oU3RyaW5nKGtleSkpKTtcbiAgaWYgKE8gPT09IGdsb2JhbCkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIGlmICghc2FmZSkge1xuICAgIGRlbGV0ZSBPW2tleV07XG4gICAgaGlkZShPLCBrZXksIHZhbCk7XG4gIH0gZWxzZSBpZiAoT1trZXldKSB7XG4gICAgT1trZXldID0gdmFsO1xuICB9IGVsc2Uge1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9XG4vLyBhZGQgZmFrZSBGdW5jdGlvbiN0b1N0cmluZyBmb3IgY29ycmVjdCB3b3JrIHdyYXBwZWQgbWV0aG9kcyAvIGNvbnN0cnVjdG9ycyB3aXRoIG1ldGhvZHMgbGlrZSBMb0Rhc2ggaXNOYXRpdmVcbn0pKEZ1bmN0aW9uLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgcmV0dXJuIHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgJiYgdGhpc1tTUkNdIHx8ICR0b1N0cmluZy5jYWxsKHRoaXMpO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///34\n")},function(module,exports){eval("var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanM/NjlhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzT3duUHJvcGVydHkgPSB7fS5oYXNPd25Qcm9wZXJ0eTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBrZXkpIHtcbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoaXQsIGtleSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///35\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(17);\nvar core = __webpack_require__(63);\nvar hide = __webpack_require__(27);\nvar redefine = __webpack_require__(34);\nvar ctx = __webpack_require__(115);\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19leHBvcnQuanM/NWNhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbiAodHlwZSwgbmFtZSwgc291cmNlKSB7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GO1xuICB2YXIgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRztcbiAgdmFyIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlM7XG4gIHZhciBJU19QUk9UTyA9IHR5cGUgJiAkZXhwb3J0LlA7XG4gIHZhciBJU19CSU5EID0gdHlwZSAmICRleHBvcnQuQjtcbiAgdmFyIHRhcmdldCA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSB8fCAoZ2xvYmFsW25hbWVdID0ge30pIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdIHx8IChleHBvcnRzW1BST1RPVFlQRV0gPSB7fSk7XG4gIHZhciBrZXksIG93biwgb3V0LCBleHA7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSAob3duID8gdGFyZ2V0IDogc291cmNlKVtrZXldO1xuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgZXhwID0gSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpIDogSVNfUFJPVE8gJiYgdHlwZW9mIG91dCA9PSAnZnVuY3Rpb24nID8gY3R4KEZ1bmN0aW9uLmNhbGwsIG91dCkgOiBvdXQ7XG4gICAgLy8gZXh0ZW5kIGdsb2JhbFxuICAgIGlmICh0YXJnZXQpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBvdXQsIHR5cGUgJiAkZXhwb3J0LlUpO1xuICAgIC8vIGV4cG9ydFxuICAgIGlmIChleHBvcnRzW2tleV0gIT0gb3V0KSBoaWRlKGV4cG9ydHMsIGtleSwgZXhwKTtcbiAgICBpZiAoSVNfUFJPVE8gJiYgZXhwUHJvdG9ba2V5XSAhPSBvdXQpIGV4cFByb3RvW2tleV0gPSBvdXQ7XG4gIH1cbn07XG5nbG9iYWwuY29yZSA9IGNvcmU7XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgXG5tb2R1bGUuZXhwb3J0cyA9ICRleHBvcnQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///36\n")},,,,,,,,,,,,,,,,,,,,function(module,exports){eval("module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanM/ZDNmNCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///56\n")},function(module,exports){eval('// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError("Can\'t call method on  " + it);\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzP2JlMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///57\n')},function(module,exports,__webpack_require__){eval("// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = __webpack_require__(134);\nvar defined = __webpack_require__(57);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzPzY4MjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdG8gaW5kZXhlZCBvYmplY3QsIHRvT2JqZWN0IHdpdGggZmFsbGJhY2sgZm9yIG5vbi1hcnJheS1saWtlIEVTMyBzdHJpbmdzXG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIElPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///58\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// https://github.com/tc39/Array.prototype.includes\nvar $export = __webpack_require__(36);\nvar $includes = __webpack_require__(119)(true);\n\n$export($export.P, 'Array', {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n__webpack_require__(120)('includes');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcy5qcz82NzYyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L0FycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoZWwgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2luY2x1ZGVzJyk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///59\n")},function(module,exports,__webpack_require__){"use strict";eval("// 21.1.3.7 String.prototype.includes(searchString, position = 0)\n\nvar $export = __webpack_require__(36);\nvar context = __webpack_require__(158);\nvar INCLUDES = 'includes';\n\n$export($export.P + $export.F * __webpack_require__(159)(INCLUDES), 'String', {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~context(this, searchString, INCLUDES)\n      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMuanM/MmZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAyMS4xLjMuNyBTdHJpbmcucHJvdG90eXBlLmluY2x1ZGVzKHNlYXJjaFN0cmluZywgcG9zaXRpb24gPSAwKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBJTkNMVURFUyA9ICdpbmNsdWRlcyc7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoSU5DTFVERVMpLCAnU3RyaW5nJywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgcmV0dXJuICEhfmNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBJTkNMVURFUylcbiAgICAgIC5pbmRleE9mKHNlYXJjaFN0cmluZywgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///60\n")},function(module,exports){eval("module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzPzQ2MzAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///61\n")},function(module,exports){eval("var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191aWQuanM/Y2E1YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///62\n")},function(module,exports){eval("var core = module.exports = { version: '2.6.11' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzPzgzNzgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNvcmUgPSBtb2R1bGUuZXhwb3J0cyA9IHsgdmVyc2lvbjogJzIuNi4xMScgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n")},function(module,exports){eval("module.exports = {};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyYXRvcnMuanM/ODRmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///64\n")},function(module,exports,__webpack_require__){eval("// 7.1.15 ToLength\nvar toInteger = __webpack_require__(77);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1sZW5ndGguanM/OWRlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///65\n")},function(module,exports,__webpack_require__){eval("(function(window, factory) {\n\tvar lazySizes = factory(window, window.document);\n\twindow.lazySizes = lazySizes;\n\tif( true && module.exports){\n\t\tmodule.exports = lazySizes;\n\t}\n}(typeof window != 'undefined' ?\n      window : {}, function l(window, document) {\n\t'use strict';\n\t/*jshint eqnull:true */\n\n\tvar lazysizes, lazySizesCfg;\n\n\t(function(){\n\t\tvar prop;\n\n\t\tvar lazySizesDefaults = {\n\t\t\tlazyClass: 'lazyload',\n\t\t\tloadedClass: 'lazyloaded',\n\t\t\tloadingClass: 'lazyloading',\n\t\t\tpreloadClass: 'lazypreload',\n\t\t\terrorClass: 'lazyerror',\n\t\t\t//strictClass: 'lazystrict',\n\t\t\tautosizesClass: 'lazyautosizes',\n\t\t\tsrcAttr: 'data-src',\n\t\t\tsrcsetAttr: 'data-srcset',\n\t\t\tsizesAttr: 'data-sizes',\n\t\t\t//preloadAfterLoad: false,\n\t\t\tminSize: 40,\n\t\t\tcustomMedia: {},\n\t\t\tinit: true,\n\t\t\texpFactor: 1.5,\n\t\t\thFac: 0.8,\n\t\t\tloadMode: 2,\n\t\t\tloadHidden: true,\n\t\t\tricTimeout: 0,\n\t\t\tthrottleDelay: 125,\n\t\t};\n\n\t\tlazySizesCfg = window.lazySizesConfig || window.lazysizesConfig || {};\n\n\t\tfor(prop in lazySizesDefaults){\n\t\t\tif(!(prop in lazySizesCfg)){\n\t\t\t\tlazySizesCfg[prop] = lazySizesDefaults[prop];\n\t\t\t}\n\t\t}\n\t})();\n\n\tif (!document || !document.getElementsByClassName) {\n\t\treturn {\n\t\t\tinit: function () {},\n\t\t\tcfg: lazySizesCfg,\n\t\t\tnoSupport: true,\n\t\t};\n\t}\n\n\tvar docElem = document.documentElement;\n\n\tvar Date = window.Date;\n\n\tvar supportPicture = window.HTMLPictureElement;\n\n\tvar _addEventListener = 'addEventListener';\n\n\tvar _getAttribute = 'getAttribute';\n\n\tvar addEventListener = window[_addEventListener];\n\n\tvar setTimeout = window.setTimeout;\n\n\tvar requestAnimationFrame = window.requestAnimationFrame || setTimeout;\n\n\tvar requestIdleCallback = window.requestIdleCallback;\n\n\tvar regPicture = /^picture$/i;\n\n\tvar loadEvents = ['load', 'error', 'lazyincluded', '_lazyloaded'];\n\n\tvar regClassCache = {};\n\n\tvar forEach = Array.prototype.forEach;\n\n\tvar hasClass = function(ele, cls) {\n\t\tif(!regClassCache[cls]){\n\t\t\tregClassCache[cls] = new RegExp('(\\\\s|^)'+cls+'(\\\\s|$)');\n\t\t}\n\t\treturn regClassCache[cls].test(ele[_getAttribute]('class') || '') && regClassCache[cls];\n\t};\n\n\tvar addClass = function(ele, cls) {\n\t\tif (!hasClass(ele, cls)){\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').trim() + ' ' + cls);\n\t\t}\n\t};\n\n\tvar removeClass = function(ele, cls) {\n\t\tvar reg;\n\t\tif ((reg = hasClass(ele,cls))) {\n\t\t\tele.setAttribute('class', (ele[_getAttribute]('class') || '').replace(reg, ' '));\n\t\t}\n\t};\n\n\tvar addRemoveLoadEvents = function(dom, fn, add){\n\t\tvar action = add ? _addEventListener : 'removeEventListener';\n\t\tif(add){\n\t\t\taddRemoveLoadEvents(dom, fn);\n\t\t}\n\t\tloadEvents.forEach(function(evt){\n\t\t\tdom[action](evt, fn);\n\t\t});\n\t};\n\n\tvar triggerEvent = function(elem, name, detail, noBubbles, noCancelable){\n\t\tvar event = document.createEvent('Event');\n\n\t\tif(!detail){\n\t\t\tdetail = {};\n\t\t}\n\n\t\tdetail.instance = lazysizes;\n\n\t\tevent.initEvent(name, !noBubbles, !noCancelable);\n\n\t\tevent.detail = detail;\n\n\t\telem.dispatchEvent(event);\n\t\treturn event;\n\t};\n\n\tvar updatePolyfill = function (el, full){\n\t\tvar polyfill;\n\t\tif( !supportPicture && ( polyfill = (window.picturefill || lazySizesCfg.pf) ) ){\n\t\t\tif(full && full.src && !el[_getAttribute]('srcset')){\n\t\t\t\tel.setAttribute('srcset', full.src);\n\t\t\t}\n\t\t\tpolyfill({reevaluate: true, elements: [el]});\n\t\t} else if(full && full.src){\n\t\t\tel.src = full.src;\n\t\t}\n\t};\n\n\tvar getCSS = function (elem, style){\n\t\treturn (getComputedStyle(elem, null) || {})[style];\n\t};\n\n\tvar getWidth = function(elem, parent, width){\n\t\twidth = width || elem.offsetWidth;\n\n\t\twhile(width < lazySizesCfg.minSize && parent && !elem._lazysizesWidth){\n\t\t\twidth =  parent.offsetWidth;\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\treturn width;\n\t};\n\n\tvar rAF = (function(){\n\t\tvar running, waiting;\n\t\tvar firstFns = [];\n\t\tvar secondFns = [];\n\t\tvar fns = firstFns;\n\n\t\tvar run = function(){\n\t\t\tvar runFns = fns;\n\n\t\t\tfns = firstFns.length ? secondFns : firstFns;\n\n\t\t\trunning = true;\n\t\t\twaiting = false;\n\n\t\t\twhile(runFns.length){\n\t\t\t\trunFns.shift()();\n\t\t\t}\n\n\t\t\trunning = false;\n\t\t};\n\n\t\tvar rafBatch = function(fn, queue){\n\t\t\tif(running && !queue){\n\t\t\t\tfn.apply(this, arguments);\n\t\t\t} else {\n\t\t\t\tfns.push(fn);\n\n\t\t\t\tif(!waiting){\n\t\t\t\t\twaiting = true;\n\t\t\t\t\t(document.hidden ? setTimeout : requestAnimationFrame)(run);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trafBatch._lsFlush = run;\n\n\t\treturn rafBatch;\n\t})();\n\n\tvar rAFIt = function(fn, simple){\n\t\treturn simple ?\n\t\t\tfunction() {\n\t\t\t\trAF(fn);\n\t\t\t} :\n\t\t\tfunction(){\n\t\t\t\tvar that = this;\n\t\t\t\tvar args = arguments;\n\t\t\t\trAF(function(){\n\t\t\t\t\tfn.apply(that, args);\n\t\t\t\t});\n\t\t\t}\n\t\t;\n\t};\n\n\tvar throttle = function(fn){\n\t\tvar running;\n\t\tvar lastTime = 0;\n\t\tvar gDelay = lazySizesCfg.throttleDelay;\n\t\tvar rICTimeout = lazySizesCfg.ricTimeout;\n\t\tvar run = function(){\n\t\t\trunning = false;\n\t\t\tlastTime = Date.now();\n\t\t\tfn();\n\t\t};\n\t\tvar idleCallback = requestIdleCallback && rICTimeout > 49 ?\n\t\t\tfunction(){\n\t\t\t\trequestIdleCallback(run, {timeout: rICTimeout});\n\n\t\t\t\tif(rICTimeout !== lazySizesCfg.ricTimeout){\n\t\t\t\t\trICTimeout = lazySizesCfg.ricTimeout;\n\t\t\t\t}\n\t\t\t} :\n\t\t\trAFIt(function(){\n\t\t\t\tsetTimeout(run);\n\t\t\t}, true)\n\t\t;\n\n\t\treturn function(isPriority){\n\t\t\tvar delay;\n\n\t\t\tif((isPriority = isPriority === true)){\n\t\t\t\trICTimeout = 33;\n\t\t\t}\n\n\t\t\tif(running){\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trunning =  true;\n\n\t\t\tdelay = gDelay - (Date.now() - lastTime);\n\n\t\t\tif(delay < 0){\n\t\t\t\tdelay = 0;\n\t\t\t}\n\n\t\t\tif(isPriority || delay < 9){\n\t\t\t\tidleCallback();\n\t\t\t} else {\n\t\t\t\tsetTimeout(idleCallback, delay);\n\t\t\t}\n\t\t};\n\t};\n\n\t//based on http://modernjavascript.blogspot.de/2013/08/building-better-debounce.html\n\tvar debounce = function(func) {\n\t\tvar timeout, timestamp;\n\t\tvar wait = 99;\n\t\tvar run = function(){\n\t\t\ttimeout = null;\n\t\t\tfunc();\n\t\t};\n\t\tvar later = function() {\n\t\t\tvar last = Date.now() - timestamp;\n\n\t\t\tif (last < wait) {\n\t\t\t\tsetTimeout(later, wait - last);\n\t\t\t} else {\n\t\t\t\t(requestIdleCallback || run)(run);\n\t\t\t}\n\t\t};\n\n\t\treturn function() {\n\t\t\ttimestamp = Date.now();\n\n\t\t\tif (!timeout) {\n\t\t\t\ttimeout = setTimeout(later, wait);\n\t\t\t}\n\t\t};\n\t};\n\n\tvar loader = (function(){\n\t\tvar preloadElems, isCompleted, resetPreloadingTimer, loadMode, started;\n\n\t\tvar eLvW, elvH, eLtop, eLleft, eLright, eLbottom, isBodyHidden;\n\n\t\tvar regImg = /^img$/i;\n\t\tvar regIframe = /^iframe$/i;\n\n\t\tvar supportScroll = ('onscroll' in window) && !(/(gle|ing)bot/.test(navigator.userAgent));\n\n\t\tvar shrinkExpand = 0;\n\t\tvar currentExpand = 0;\n\n\t\tvar isLoading = 0;\n\t\tvar lowRuns = -1;\n\n\t\tvar resetPreloading = function(e){\n\t\t\tisLoading--;\n\t\t\tif(!e || isLoading < 0 || !e.target){\n\t\t\t\tisLoading = 0;\n\t\t\t}\n\t\t};\n\n\t\tvar isVisible = function (elem) {\n\t\t\tif (isBodyHidden == null) {\n\t\t\t\tisBodyHidden = getCSS(document.body, 'visibility') == 'hidden';\n\t\t\t}\n\n\t\t\treturn isBodyHidden || (getCSS(elem.parentNode, 'visibility') != 'hidden' && getCSS(elem, 'visibility') != 'hidden');\n\t\t};\n\n\t\tvar isNestedVisible = function(elem, elemExpand){\n\t\t\tvar outerRect;\n\t\t\tvar parent = elem;\n\t\t\tvar visible = isVisible(elem);\n\n\t\t\teLtop -= elemExpand;\n\t\t\teLbottom += elemExpand;\n\t\t\teLleft -= elemExpand;\n\t\t\teLright += elemExpand;\n\n\t\t\twhile(visible && (parent = parent.offsetParent) && parent != document.body && parent != docElem){\n\t\t\t\tvisible = ((getCSS(parent, 'opacity') || 1) > 0);\n\n\t\t\t\tif(visible && getCSS(parent, 'overflow') != 'visible'){\n\t\t\t\t\touterRect = parent.getBoundingClientRect();\n\t\t\t\t\tvisible = eLright > outerRect.left &&\n\t\t\t\t\t\teLleft < outerRect.right &&\n\t\t\t\t\t\teLbottom > outerRect.top - 1 &&\n\t\t\t\t\t\teLtop < outerRect.bottom + 1\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn visible;\n\t\t};\n\n\t\tvar checkElements = function() {\n\t\t\tvar eLlen, i, rect, autoLoadElem, loadedSomething, elemExpand, elemNegativeExpand, elemExpandVal,\n\t\t\t\tbeforeExpandVal, defaultExpand, preloadExpand, hFac;\n\t\t\tvar lazyloadElems = lazysizes.elements;\n\n\t\t\tif((loadMode = lazySizesCfg.loadMode) && isLoading < 8 && (eLlen = lazyloadElems.length)){\n\n\t\t\t\ti = 0;\n\n\t\t\t\tlowRuns++;\n\n\t\t\t\tfor(; i < eLlen; i++){\n\n\t\t\t\t\tif(!lazyloadElems[i] || lazyloadElems[i]._lazyRace){continue;}\n\n\t\t\t\t\tif(!supportScroll || (lazysizes.prematureUnveil && lazysizes.prematureUnveil(lazyloadElems[i]))){unveilElement(lazyloadElems[i]);continue;}\n\n\t\t\t\t\tif(!(elemExpandVal = lazyloadElems[i][_getAttribute]('data-expand')) || !(elemExpand = elemExpandVal * 1)){\n\t\t\t\t\t\telemExpand = currentExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!defaultExpand) {\n\t\t\t\t\t\tdefaultExpand = (!lazySizesCfg.expand || lazySizesCfg.expand < 1) ?\n\t\t\t\t\t\t\tdocElem.clientHeight > 500 && docElem.clientWidth > 500 ? 500 : 370 :\n\t\t\t\t\t\t\tlazySizesCfg.expand;\n\n\t\t\t\t\t\tlazysizes._defEx = defaultExpand;\n\n\t\t\t\t\t\tpreloadExpand = defaultExpand * lazySizesCfg.expFactor;\n\t\t\t\t\t\thFac = lazySizesCfg.hFac;\n\t\t\t\t\t\tisBodyHidden = null;\n\n\t\t\t\t\t\tif(currentExpand < preloadExpand && isLoading < 1 && lowRuns > 2 && loadMode > 2 && !document.hidden){\n\t\t\t\t\t\t\tcurrentExpand = preloadExpand;\n\t\t\t\t\t\t\tlowRuns = 0;\n\t\t\t\t\t\t} else if(loadMode > 1 && lowRuns > 1 && isLoading < 6){\n\t\t\t\t\t\t\tcurrentExpand = defaultExpand;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrentExpand = shrinkExpand;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif(beforeExpandVal !== elemExpand){\n\t\t\t\t\t\teLvW = innerWidth + (elemExpand * hFac);\n\t\t\t\t\t\telvH = innerHeight + elemExpand;\n\t\t\t\t\t\telemNegativeExpand = elemExpand * -1;\n\t\t\t\t\t\tbeforeExpandVal = elemExpand;\n\t\t\t\t\t}\n\n\t\t\t\t\trect = lazyloadElems[i].getBoundingClientRect();\n\n\t\t\t\t\tif ((eLbottom = rect.bottom) >= elemNegativeExpand &&\n\t\t\t\t\t\t(eLtop = rect.top) <= elvH &&\n\t\t\t\t\t\t(eLright = rect.right) >= elemNegativeExpand * hFac &&\n\t\t\t\t\t\t(eLleft = rect.left) <= eLvW &&\n\t\t\t\t\t\t(eLbottom || eLright || eLleft || eLtop) &&\n\t\t\t\t\t\t(lazySizesCfg.loadHidden || isVisible(lazyloadElems[i])) &&\n\t\t\t\t\t\t((isCompleted && isLoading < 3 && !elemExpandVal && (loadMode < 3 || lowRuns < 4)) || isNestedVisible(lazyloadElems[i], elemExpand))){\n\t\t\t\t\t\tunveilElement(lazyloadElems[i]);\n\t\t\t\t\t\tloadedSomething = true;\n\t\t\t\t\t\tif(isLoading > 9){break;}\n\t\t\t\t\t} else if(!loadedSomething && isCompleted && !autoLoadElem &&\n\t\t\t\t\t\tisLoading < 4 && lowRuns < 4 && loadMode > 2 &&\n\t\t\t\t\t\t(preloadElems[0] || lazySizesCfg.preloadAfterLoad) &&\n\t\t\t\t\t\t(preloadElems[0] || (!elemExpandVal && ((eLbottom || eLright || eLleft || eLtop) || lazyloadElems[i][_getAttribute](lazySizesCfg.sizesAttr) != 'auto')))){\n\t\t\t\t\t\tautoLoadElem = preloadElems[0] || lazyloadElems[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(autoLoadElem && !loadedSomething){\n\t\t\t\t\tunveilElement(autoLoadElem);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar throttledCheckElements = throttle(checkElements);\n\n\t\tvar switchLoadingClass = function(e){\n\t\t\tvar elem = e.target;\n\n\t\t\tif (elem._lazyCache) {\n\t\t\t\tdelete elem._lazyCache;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresetPreloading(e);\n\t\t\taddClass(elem, lazySizesCfg.loadedClass);\n\t\t\tremoveClass(elem, lazySizesCfg.loadingClass);\n\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass);\n\t\t\ttriggerEvent(elem, 'lazyloaded');\n\t\t};\n\t\tvar rafedSwitchLoadingClass = rAFIt(switchLoadingClass);\n\t\tvar rafSwitchLoadingClass = function(e){\n\t\t\trafedSwitchLoadingClass({target: e.target});\n\t\t};\n\n\t\tvar changeIframeSrc = function(elem, src){\n\t\t\ttry {\n\t\t\t\telem.contentWindow.location.replace(src);\n\t\t\t} catch(e){\n\t\t\t\telem.src = src;\n\t\t\t}\n\t\t};\n\n\t\tvar handleSources = function(source){\n\t\t\tvar customMedia;\n\n\t\t\tvar sourceSrcset = source[_getAttribute](lazySizesCfg.srcsetAttr);\n\n\t\t\tif( (customMedia = lazySizesCfg.customMedia[source[_getAttribute]('data-media') || source[_getAttribute]('media')]) ){\n\t\t\t\tsource.setAttribute('media', customMedia);\n\t\t\t}\n\n\t\t\tif(sourceSrcset){\n\t\t\t\tsource.setAttribute('srcset', sourceSrcset);\n\t\t\t}\n\t\t};\n\n\t\tvar lazyUnveil = rAFIt(function (elem, detail, isAuto, sizes, isImg){\n\t\t\tvar src, srcset, parent, isPicture, event, firesLoad;\n\n\t\t\tif(!(event = triggerEvent(elem, 'lazybeforeunveil', detail)).defaultPrevented){\n\n\t\t\t\tif(sizes){\n\t\t\t\t\tif(isAuto){\n\t\t\t\t\t\taddClass(elem, lazySizesCfg.autosizesClass);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.setAttribute('sizes', sizes);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsrcset = elem[_getAttribute](lazySizesCfg.srcsetAttr);\n\t\t\t\tsrc = elem[_getAttribute](lazySizesCfg.srcAttr);\n\n\t\t\t\tif(isImg) {\n\t\t\t\t\tparent = elem.parentNode;\n\t\t\t\t\tisPicture = parent && regPicture.test(parent.nodeName || '');\n\t\t\t\t}\n\n\t\t\t\tfiresLoad = detail.firesLoad || (('src' in elem) && (srcset || src || isPicture));\n\n\t\t\t\tevent = {target: elem};\n\n\t\t\t\taddClass(elem, lazySizesCfg.loadingClass);\n\n\t\t\t\tif(firesLoad){\n\t\t\t\t\tclearTimeout(resetPreloadingTimer);\n\t\t\t\t\tresetPreloadingTimer = setTimeout(resetPreloading, 2500);\n\t\t\t\t\taddRemoveLoadEvents(elem, rafSwitchLoadingClass, true);\n\t\t\t\t}\n\n\t\t\t\tif(isPicture){\n\t\t\t\t\tforEach.call(parent.getElementsByTagName('source'), handleSources);\n\t\t\t\t}\n\n\t\t\t\tif(srcset){\n\t\t\t\t\telem.setAttribute('srcset', srcset);\n\t\t\t\t} else if(src && !isPicture){\n\t\t\t\t\tif(regIframe.test(elem.nodeName)){\n\t\t\t\t\t\tchangeIframeSrc(elem, src);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telem.src = src;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(isImg && (srcset || isPicture)){\n\t\t\t\t\tupdatePolyfill(elem, {src: src});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(elem._lazyRace){\n\t\t\t\tdelete elem._lazyRace;\n\t\t\t}\n\t\t\tremoveClass(elem, lazySizesCfg.lazyClass);\n\n\t\t\trAF(function(){\n\t\t\t\t// Part of this can be removed as soon as this fix is older: https://bugs.chromium.org/p/chromium/issues/detail?id=7731 (2015)\n\t\t\t\tvar isLoaded = elem.complete && elem.naturalWidth > 1;\n\n\t\t\t\tif( !firesLoad || isLoaded){\n\t\t\t\t\tif (isLoaded) {\n\t\t\t\t\t\taddClass(elem, 'ls-is-cached');\n\t\t\t\t\t}\n\t\t\t\t\tswitchLoadingClass(event);\n\t\t\t\t\telem._lazyCache = true;\n\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\tif ('_lazyCache' in elem) {\n\t\t\t\t\t\t\tdelete elem._lazyCache;\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 9);\n\t\t\t\t}\n\t\t\t\tif (elem.loading == 'lazy') {\n\t\t\t\t\tisLoading--;\n\t\t\t\t}\n\t\t\t}, true);\n\t\t});\n\n\t\tvar unveilElement = function (elem){\n\t\t\tif (elem._lazyRace) {return;}\n\t\t\tvar detail;\n\n\t\t\tvar isImg = regImg.test(elem.nodeName);\n\n\t\t\t//allow using sizes=\"auto\", but don't use. it's invalid. Use data-sizes=\"auto\" or a valid value for sizes instead (i.e.: sizes=\"80vw\")\n\t\t\tvar sizes = isImg && (elem[_getAttribute](lazySizesCfg.sizesAttr) || elem[_getAttribute]('sizes'));\n\t\t\tvar isAuto = sizes == 'auto';\n\n\t\t\tif( (isAuto || !isCompleted) && isImg && (elem[_getAttribute]('src') || elem.srcset) && !elem.complete && !hasClass(elem, lazySizesCfg.errorClass) && hasClass(elem, lazySizesCfg.lazyClass)){return;}\n\n\t\t\tdetail = triggerEvent(elem, 'lazyunveilread').detail;\n\n\t\t\tif(isAuto){\n\t\t\t\t autoSizer.updateElem(elem, true, elem.offsetWidth);\n\t\t\t}\n\n\t\t\telem._lazyRace = true;\n\t\t\tisLoading++;\n\n\t\t\tlazyUnveil(elem, detail, isAuto, sizes, isImg);\n\t\t};\n\n\t\tvar afterScroll = debounce(function(){\n\t\t\tlazySizesCfg.loadMode = 3;\n\t\t\tthrottledCheckElements();\n\t\t});\n\n\t\tvar altLoadmodeScrollListner = function(){\n\t\t\tif(lazySizesCfg.loadMode == 3){\n\t\t\t\tlazySizesCfg.loadMode = 2;\n\t\t\t}\n\t\t\tafterScroll();\n\t\t};\n\n\t\tvar onload = function(){\n\t\t\tif(isCompleted){return;}\n\t\t\tif(Date.now() - started < 999){\n\t\t\t\tsetTimeout(onload, 999);\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tisCompleted = true;\n\n\t\t\tlazySizesCfg.loadMode = 3;\n\n\t\t\tthrottledCheckElements();\n\n\t\t\taddEventListener('scroll', altLoadmodeScrollListner, true);\n\t\t};\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tstarted = Date.now();\n\n\t\t\t\tlazysizes.elements = document.getElementsByClassName(lazySizesCfg.lazyClass);\n\t\t\t\tpreloadElems = document.getElementsByClassName(lazySizesCfg.lazyClass + ' ' + lazySizesCfg.preloadClass);\n\n\t\t\t\taddEventListener('scroll', throttledCheckElements, true);\n\n\t\t\t\taddEventListener('resize', throttledCheckElements, true);\n\n\t\t\t\tif(window.MutationObserver){\n\t\t\t\t\tnew MutationObserver( throttledCheckElements ).observe( docElem, {childList: true, subtree: true, attributes: true} );\n\t\t\t\t} else {\n\t\t\t\t\tdocElem[_addEventListener]('DOMNodeInserted', throttledCheckElements, true);\n\t\t\t\t\tdocElem[_addEventListener]('DOMAttrModified', throttledCheckElements, true);\n\t\t\t\t\tsetInterval(throttledCheckElements, 999);\n\t\t\t\t}\n\n\t\t\t\taddEventListener('hashchange', throttledCheckElements, true);\n\n\t\t\t\t//, 'fullscreenchange'\n\t\t\t\t['focus', 'mouseover', 'click', 'load', 'transitionend', 'animationend'].forEach(function(name){\n\t\t\t\t\tdocument[_addEventListener](name, throttledCheckElements, true);\n\t\t\t\t});\n\n\t\t\t\tif((/d$|^c/.test(document.readyState))){\n\t\t\t\t\tonload();\n\t\t\t\t} else {\n\t\t\t\t\taddEventListener('load', onload);\n\t\t\t\t\tdocument[_addEventListener]('DOMContentLoaded', throttledCheckElements);\n\t\t\t\t\tsetTimeout(onload, 20000);\n\t\t\t\t}\n\n\t\t\t\tif(lazysizes.elements.length){\n\t\t\t\t\tcheckElements();\n\t\t\t\t\trAF._lsFlush();\n\t\t\t\t} else {\n\t\t\t\t\tthrottledCheckElements();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckElems: throttledCheckElements,\n\t\t\tunveil: unveilElement,\n\t\t\t_aLSL: altLoadmodeScrollListner,\n\t\t};\n\t})();\n\n\n\tvar autoSizer = (function(){\n\t\tvar autosizesElems;\n\n\t\tvar sizeElement = rAFIt(function(elem, parent, event, width){\n\t\t\tvar sources, i, len;\n\t\t\telem._lazysizesWidth = width;\n\t\t\twidth += 'px';\n\n\t\t\telem.setAttribute('sizes', width);\n\n\t\t\tif(regPicture.test(parent.nodeName || '')){\n\t\t\t\tsources = parent.getElementsByTagName('source');\n\t\t\t\tfor(i = 0, len = sources.length; i < len; i++){\n\t\t\t\t\tsources[i].setAttribute('sizes', width);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!event.detail.dataAttr){\n\t\t\t\tupdatePolyfill(elem, event.detail);\n\t\t\t}\n\t\t});\n\t\tvar getSizeElement = function (elem, dataAttr, width){\n\t\t\tvar event;\n\t\t\tvar parent = elem.parentNode;\n\n\t\t\tif(parent){\n\t\t\t\twidth = getWidth(elem, parent, width);\n\t\t\t\tevent = triggerEvent(elem, 'lazybeforesizes', {width: width, dataAttr: !!dataAttr});\n\n\t\t\t\tif(!event.defaultPrevented){\n\t\t\t\t\twidth = event.detail.width;\n\n\t\t\t\t\tif(width && width !== elem._lazysizesWidth){\n\t\t\t\t\t\tsizeElement(elem, parent, event, width);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar updateElementsSizes = function(){\n\t\t\tvar i;\n\t\t\tvar len = autosizesElems.length;\n\t\t\tif(len){\n\t\t\t\ti = 0;\n\n\t\t\t\tfor(; i < len; i++){\n\t\t\t\t\tgetSizeElement(autosizesElems[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tvar debouncedUpdateElementsSizes = debounce(updateElementsSizes);\n\n\t\treturn {\n\t\t\t_: function(){\n\t\t\t\tautosizesElems = document.getElementsByClassName(lazySizesCfg.autosizesClass);\n\t\t\t\taddEventListener('resize', debouncedUpdateElementsSizes);\n\t\t\t},\n\t\t\tcheckElems: debouncedUpdateElementsSizes,\n\t\t\tupdateElem: getSizeElement\n\t\t};\n\t})();\n\n\tvar init = function(){\n\t\tif(!init.i && document.getElementsByClassName){\n\t\t\tinit.i = true;\n\t\t\tautoSizer._();\n\t\t\tloader._();\n\t\t}\n\t};\n\n\tsetTimeout(function(){\n\t\tif(lazySizesCfg.init){\n\t\t\tinit();\n\t\t}\n\t});\n\n\tlazysizes = {\n\t\tcfg: lazySizesCfg,\n\t\tautoSizer: autoSizer,\n\t\tloader: loader,\n\t\tinit: init,\n\t\tuP: updatePolyfill,\n\t\taC: addClass,\n\t\trC: removeClass,\n\t\thC: hasClass,\n\t\tfire: triggerEvent,\n\t\tgW: getWidth,\n\t\trAF: rAF,\n\t};\n\n\treturn lazysizes;\n}\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///66\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(11);\nvar toObject = __webpack_require__(79);\nvar toLength = __webpack_require__(65);\nvar toInteger = __webpack_require__(77);\nvar advanceStringIndex = __webpack_require__(104);\nvar regExpExec = __webpack_require__(84);\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&`']|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&`']|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\n__webpack_require__(85)('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = defined(this);\n      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return fn !== undefined\n        ? fn.call(searchValue, O, replaceValue)\n        : $replace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      var res = maybeCallNative($replace, regexp, this, replaceValue);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n        results.push(result);\n        if (!global) break;\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n    // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return $replace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZS5qcz9hNDgxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBTVUJTVElUVVRJT05fU1lNQk9MUyA9IC9cXCQoWyQmYCddfFxcZFxcZD98PFtePl0qPikvZztcbnZhciBTVUJTVElUVVRJT05fU1lNQk9MU19OT19OQU1FRCA9IC9cXCQoWyQmYCddfFxcZFxcZD8pL2c7XG5cbnZhciBtYXliZVRvU3RyaW5nID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gaXQgOiBTdHJpbmcoaXQpO1xufTtcblxuLy8gQEByZXBsYWNlIGxvZ2ljXG5yZXF1aXJlKCcuL19maXgtcmUtd2tzJykoJ3JlcGxhY2UnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgUkVQTEFDRSwgJHJlcGxhY2UsIG1heWJlQ2FsbE5hdGl2ZSkge1xuICByZXR1cm4gW1xuICAgIC8vIGBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2VgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUucmVwbGFjZVxuICAgIGZ1bmN0aW9uIHJlcGxhY2Uoc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gc2VhcmNoVmFsdWUgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VhcmNoVmFsdWVbUkVQTEFDRV07XG4gICAgICByZXR1cm4gZm4gIT09IHVuZGVmaW5lZFxuICAgICAgICA/IGZuLmNhbGwoc2VhcmNoVmFsdWUsIE8sIHJlcGxhY2VWYWx1ZSlcbiAgICAgICAgOiAkcmVwbGFjZS5jYWxsKFN0cmluZyhPKSwgc2VhcmNoVmFsdWUsIHJlcGxhY2VWYWx1ZSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAcmVwbGFjZVxuICAgIGZ1bmN0aW9uIChyZWdleHAsIHJlcGxhY2VWYWx1ZSkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkcmVwbGFjZSwgcmVnZXhwLCB0aGlzLCByZXBsYWNlVmFsdWUpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICB2YXIgZnVuY3Rpb25hbFJlcGxhY2UgPSB0eXBlb2YgcmVwbGFjZVZhbHVlID09PSAnZnVuY3Rpb24nO1xuICAgICAgaWYgKCFmdW5jdGlvbmFsUmVwbGFjZSkgcmVwbGFjZVZhbHVlID0gU3RyaW5nKHJlcGxhY2VWYWx1ZSk7XG4gICAgICB2YXIgZ2xvYmFsID0gcnguZ2xvYmFsO1xuICAgICAgaWYgKGdsb2JhbCkge1xuICAgICAgICB2YXIgZnVsbFVuaWNvZGUgPSByeC51bmljb2RlO1xuICAgICAgICByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgfVxuICAgICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSByZWdFeHBFeGVjKHJ4LCBTKTtcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gbnVsbCkgYnJlYWs7XG4gICAgICAgIHJlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgICAgICBpZiAoIWdsb2JhbCkgYnJlYWs7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBpZiAobWF0Y2hTdHIgPT09ICcnKSByeC5sYXN0SW5kZXggPSBhZHZhbmNlU3RyaW5nSW5kZXgoUywgdG9MZW5ndGgocngubGFzdEluZGV4KSwgZnVsbFVuaWNvZGUpO1xuICAgICAgfVxuICAgICAgdmFyIGFjY3VtdWxhdGVkUmVzdWx0ID0gJyc7XG4gICAgICB2YXIgbmV4dFNvdXJjZVBvc2l0aW9uID0gMDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVzdWx0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHQgPSByZXN1bHRzW2ldO1xuICAgICAgICB2YXIgbWF0Y2hlZCA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICB2YXIgcG9zaXRpb24gPSBtYXgobWluKHRvSW50ZWdlcihyZXN1bHQuaW5kZXgpLCBTLmxlbmd0aCksIDApO1xuICAgICAgICB2YXIgY2FwdHVyZXMgPSBbXTtcbiAgICAgICAgLy8gTk9URTogVGhpcyBpcyBlcXVpdmFsZW50IHRvXG4gICAgICAgIC8vICAgY2FwdHVyZXMgPSByZXN1bHQuc2xpY2UoMSkubWFwKG1heWJlVG9TdHJpbmcpXG4gICAgICAgIC8vIGJ1dCBmb3Igc29tZSByZWFzb24gYG5hdGl2ZVNsaWNlLmNhbGwocmVzdWx0LCAxLCByZXN1bHQubGVuZ3RoKWAgKGNhbGxlZCBpblxuICAgICAgICAvLyB0aGUgc2xpY2UgcG9seWZpbGwgd2hlbiBzbGljaW5nIG5hdGl2ZSBhcnJheXMpIFwiZG9lc24ndCB3b3JrXCIgaW4gc2FmYXJpIDkgYW5kXG4gICAgICAgIC8vIGNhdXNlcyBhIGNyYXNoIChodHRwczovL3Bhc3RlYmluLmNvbS9OMjFRemVRQSkgd2hlbiB0cnlpbmcgdG8gZGVidWcgaXQuXG4gICAgICAgIGZvciAodmFyIGogPSAxOyBqIDwgcmVzdWx0Lmxlbmd0aDsgaisrKSBjYXB0dXJlcy5wdXNoKG1heWJlVG9TdHJpbmcocmVzdWx0W2pdKSk7XG4gICAgICAgIHZhciBuYW1lZENhcHR1cmVzID0gcmVzdWx0Lmdyb3VwcztcbiAgICAgICAgaWYgKGZ1bmN0aW9uYWxSZXBsYWNlKSB7XG4gICAgICAgICAgdmFyIHJlcGxhY2VyQXJncyA9IFttYXRjaGVkXS5jb25jYXQoY2FwdHVyZXMsIHBvc2l0aW9uLCBTKTtcbiAgICAgICAgICBpZiAobmFtZWRDYXB0dXJlcyAhPT0gdW5kZWZpbmVkKSByZXBsYWNlckFyZ3MucHVzaChuYW1lZENhcHR1cmVzKTtcbiAgICAgICAgICB2YXIgcmVwbGFjZW1lbnQgPSBTdHJpbmcocmVwbGFjZVZhbHVlLmFwcGx5KHVuZGVmaW5lZCwgcmVwbGFjZXJBcmdzKSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVwbGFjZW1lbnQgPSBnZXRTdWJzdGl0dXRpb24obWF0Y2hlZCwgUywgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlVmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwb3NpdGlvbiA+PSBuZXh0U291cmNlUG9zaXRpb24pIHtcbiAgICAgICAgICBhY2N1bXVsYXRlZFJlc3VsdCArPSBTLnNsaWNlKG5leHRTb3VyY2VQb3NpdGlvbiwgcG9zaXRpb24pICsgcmVwbGFjZW1lbnQ7XG4gICAgICAgICAgbmV4dFNvdXJjZVBvc2l0aW9uID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGFjY3VtdWxhdGVkUmVzdWx0ICsgUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24pO1xuICAgIH1cbiAgXTtcblxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLWdldHN1YnN0aXR1dGlvblxuICBmdW5jdGlvbiBnZXRTdWJzdGl0dXRpb24obWF0Y2hlZCwgc3RyLCBwb3NpdGlvbiwgY2FwdHVyZXMsIG5hbWVkQ2FwdHVyZXMsIHJlcGxhY2VtZW50KSB7XG4gICAgdmFyIHRhaWxQb3MgPSBwb3NpdGlvbiArIG1hdGNoZWQubGVuZ3RoO1xuICAgIHZhciBtID0gY2FwdHVyZXMubGVuZ3RoO1xuICAgIHZhciBzeW1ib2xzID0gU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQ7XG4gICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgbmFtZWRDYXB0dXJlcyA9IHRvT2JqZWN0KG5hbWVkQ2FwdHVyZXMpO1xuICAgICAgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTO1xuICAgIH1cbiAgICByZXR1cm4gJHJlcGxhY2UuY2FsbChyZXBsYWNlbWVudCwgc3ltYm9scywgZnVuY3Rpb24gKG1hdGNoLCBjaCkge1xuICAgICAgdmFyIGNhcHR1cmU7XG4gICAgICBzd2l0Y2ggKGNoLmNoYXJBdCgwKSkge1xuICAgICAgICBjYXNlICckJzogcmV0dXJuICckJztcbiAgICAgICAgY2FzZSAnJic6IHJldHVybiBtYXRjaGVkO1xuICAgICAgICBjYXNlICdgJzogcmV0dXJuIHN0ci5zbGljZSgwLCBwb3NpdGlvbik7XG4gICAgICAgIGNhc2UgXCInXCI6IHJldHVybiBzdHIuc2xpY2UodGFpbFBvcyk7XG4gICAgICAgIGNhc2UgJzwnOlxuICAgICAgICAgIGNhcHR1cmUgPSBuYW1lZENhcHR1cmVzW2NoLnNsaWNlKDEsIC0xKV07XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6IC8vIFxcZFxcZD9cbiAgICAgICAgICB2YXIgbiA9ICtjaDtcbiAgICAgICAgICBpZiAobiA9PT0gMCkgcmV0dXJuIG1hdGNoO1xuICAgICAgICAgIGlmIChuID4gbSkge1xuICAgICAgICAgICAgdmFyIGYgPSBmbG9vcihuIC8gMTApO1xuICAgICAgICAgICAgaWYgKGYgPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICAgIGlmIChmIDw9IG0pIHJldHVybiBjYXB0dXJlc1tmIC0gMV0gPT09IHVuZGVmaW5lZCA/IGNoLmNoYXJBdCgxKSA6IGNhcHR1cmVzW2YgLSAxXSArIGNoLmNoYXJBdCgxKTtcbiAgICAgICAgICAgIHJldHVybiBtYXRjaDtcbiAgICAgICAgICB9XG4gICAgICAgICAgY2FwdHVyZSA9IGNhcHR1cmVzW24gLSAxXTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjYXB0dXJlID09PSB1bmRlZmluZWQgPyAnJyA6IGNhcHR1cmU7XG4gICAgfSk7XG4gIH1cbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///67\n")},,,,,,function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Native Javascript for Bootstrap 4 v2.0.27 | © dnp_theme | MIT-License\n(function (root, factory) {\n  if (true) {\n    // AMD support:\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else { var bsn; }\n}(this, function () {\n  \n  /* Native Javascript for Bootstrap 4 | Internal Utility Functions\n  ----------------------------------------------------------------*/\n  \"use strict\";\n  \n  // globals\n  var globalObject = typeof global !== 'undefined' ? global : this||window,\n    DOC = document, HTML = DOC.documentElement, body = 'body', // allow the library to be used in <head>\n  \n    // Native Javascript for Bootstrap Global Object\n    BSN = globalObject.BSN = {},\n    supports = BSN.supports = [],\n  \n    // function toggle attributes\n    dataToggle    = 'data-toggle',\n    dataDismiss   = 'data-dismiss',\n    dataSpy       = 'data-spy',\n    dataRide      = 'data-ride',\n  \n    // components\n    stringAlert     = 'Alert',\n    stringButton    = 'Button',\n    stringCarousel  = 'Carousel',\n    stringCollapse  = 'Collapse',\n    stringDropdown  = 'Dropdown',\n    stringModal     = 'Modal',\n    stringPopover   = 'Popover',\n    stringScrollSpy = 'ScrollSpy',\n    stringTab       = 'Tab',\n    stringTooltip   = 'Tooltip',\n    stringToast     = 'Toast',\n  \n    // options DATA API\n    dataAutohide      = 'data-autohide',\n    databackdrop      = 'data-backdrop',\n    dataKeyboard      = 'data-keyboard',\n    dataTarget        = 'data-target',\n    dataInterval      = 'data-interval',\n    dataHeight        = 'data-height',\n    dataPause         = 'data-pause',\n    dataTitle         = 'data-title',\n    dataOriginalTitle = 'data-original-title',\n    dataDismissible   = 'data-dismissible',\n    dataTrigger       = 'data-trigger',\n    dataAnimation     = 'data-animation',\n    dataContainer     = 'data-container',\n    dataPlacement     = 'data-placement',\n    dataDelay         = 'data-delay',\n  \n    // option keys\n    backdrop = 'backdrop', keyboard = 'keyboard', delay = 'delay',\n    content = 'content', target = 'target', currentTarget = 'currentTarget',\n    interval = 'interval', pause = 'pause', animation = 'animation',\n    placement = 'placement', container = 'container',\n  \n    // box model\n    offsetTop    = 'offsetTop',      offsetBottom   = 'offsetBottom',\n    offsetLeft   = 'offsetLeft',\n    scrollTop    = 'scrollTop',      scrollLeft     = 'scrollLeft',\n    clientWidth  = 'clientWidth',    clientHeight   = 'clientHeight',\n    offsetWidth  = 'offsetWidth',    offsetHeight   = 'offsetHeight',\n    innerWidth   = 'innerWidth',     innerHeight    = 'innerHeight',\n    scrollHeight = 'scrollHeight',   scrollWidth    = 'scrollWidth',\n    height         = 'height',\n  \n    // aria\n    ariaExpanded = 'aria-expanded',\n    ariaHidden   = 'aria-hidden',\n    ariaSelected = 'aria-selected',\n  \n    // event names\n    clickEvent    = 'click',\n    focusEvent    = 'focus',\n    hoverEvent    = 'hover',\n    keydownEvent  = 'keydown',\n    keyupEvent    = 'keyup',\n    resizeEvent   = 'resize', // passive\n    scrollEvent   = 'scroll', // passive\n    mouseHover = ('onmouseleave' in DOC) ? [ 'mouseenter', 'mouseleave'] : [ 'mouseover', 'mouseout' ],\n    // touch since 2.0.26\n    touchEvents = { start: 'touchstart', end: 'touchend', move:'touchmove' }, // passive\n    // originalEvents\n    showEvent     = 'show',\n    shownEvent    = 'shown',\n    hideEvent     = 'hide',\n    hiddenEvent   = 'hidden',\n    closeEvent    = 'close',\n    closedEvent   = 'closed',\n    slidEvent     = 'slid',\n    slideEvent    = 'slide',\n    changeEvent   = 'change',\n  \n    // other\n    getAttribute           = 'getAttribute',\n    setAttribute           = 'setAttribute',\n    hasAttribute           = 'hasAttribute',\n    createElement          = 'createElement',\n    appendChild            = 'appendChild',\n    innerHTML              = 'innerHTML',\n    getElementsByTagName   = 'getElementsByTagName',\n    preventDefault         = 'preventDefault',\n    getBoundingClientRect  = 'getBoundingClientRect',\n    querySelectorAll       = 'querySelectorAll',\n    getElementsByCLASSNAME = 'getElementsByClassName',\n    getComputedStyle       = 'getComputedStyle',  \n  \n    indexOf      = 'indexOf',\n    parentNode   = 'parentNode',\n    length       = 'length',\n    toLowerCase  = 'toLowerCase',\n    Transition   = 'Transition',\n    Duration     = 'Duration',\n    Webkit       = 'Webkit',\n    style        = 'style',\n    push         = 'push',\n    tabindex     = 'tabindex',\n    contains     = 'contains',\n  \n    active     = 'active',\n    showClass  = 'show',\n    collapsing = 'collapsing',\n    disabled   = 'disabled',\n    loading    = 'loading',\n    left       = 'left',\n    right      = 'right',\n    top        = 'top',\n    bottom     = 'bottom',\n  \n    // tooltip / popover\n    tipPositions = /\\b(top|bottom|left|right)+/,\n  \n    // modal\n    modalOverlay = 0,\n    fixedTop = 'fixed-top',\n    fixedBottom = 'fixed-bottom',\n  \n    // transitionEnd since 2.0.4\n    supportTransitions = Webkit+Transition in HTML[style] || Transition[toLowerCase]() in HTML[style],\n    transitionEndEvent = Webkit+Transition in HTML[style] ? Webkit[toLowerCase]()+Transition+'End' : Transition[toLowerCase]()+'end',\n    transitionDuration = Webkit+Duration in HTML[style] ? Webkit[toLowerCase]()+Transition+Duration : Transition[toLowerCase]()+Duration,\n  \n    // set new focus element since 2.0.3\n    setFocus = function(element){\n      element.focus ? element.focus() : element.setActive();\n    },\n  \n    // class manipulation, since 2.0.0 requires polyfill.js\n    addClass = function(element,classNAME) {\n      element.classList.add(classNAME);\n    },\n    removeClass = function(element,classNAME) {\n      element.classList.remove(classNAME);\n    },\n    hasClass = function(element,classNAME){ // since 2.0.0\n      return element.classList[contains](classNAME);\n    },\n  \n    // selection methods\n    getElementsByClassName = function(element,classNAME) { // returns Array\n      return [].slice.call(element[getElementsByCLASSNAME]( classNAME ));\n    },\n    queryElement = function (selector, parent) {\n      var lookUp = parent ? parent : DOC;\n      return typeof selector === 'object' ? selector : lookUp.querySelector(selector);\n    },\n    getClosest = function (element, selector) { //element is the element and selector is for the closest parent element to find\n      // source http://gomakethings.com/climbing-up-and-down-the-dom-tree-with-vanilla-javascript/\n      var firstChar = selector.charAt(0), selectorSubstring = selector.substr(1);\n      if ( firstChar === '.' ) {// If selector is a class\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( queryElement(selector,element[parentNode]) !== null && hasClass(element,selectorSubstring) ) { return element; }\n        }\n      } else if ( firstChar === '#' ) { // If selector is an ID\n        for ( ; element && element !== DOC; element = element[parentNode] ) { // Get closest match\n          if ( element.id === selectorSubstring ) { return element; }\n        }\n      }\n      return false;\n    },\n  \n    // event attach jQuery style / trigger  since 1.2.0\n    on = function (element, event, handler, options) {\n      options = options || false;\n      element.addEventListener(event, handler, options);\n    },\n    off = function(element, event, handler, options) {\n      options = options || false;\n      element.removeEventListener(event, handler, options);\n    },\n    one = function (element, event, handler, options) { // one since 2.0.4\n      on(element, event, function handlerWrapper(e){\n        handler(e);\n        off(element, event, handlerWrapper, options);\n      }, options);\n    },\n    // determine support for passive events\n    supportPassive = (function(){\n      // Test via a getter in the options object to see if the passive property is accessed\n      var result = false;\n      try {\n        var opts = Object.defineProperty({}, 'passive', {\n          get: function() {\n            result = true;\n          }\n        });\n        one(globalObject, 'testPassive', null, opts);\n      } catch (e) {}\n  \n      return result;\n    }()),\n    // event options\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n    passiveHandler = supportPassive ? { passive: true } : false,\n    // transitions\n    getTransitionDurationFromElement = function(element) {\n      var duration = supportTransitions ? globalObject[getComputedStyle](element)[transitionDuration] : 0;\n      duration = parseFloat(duration);\n      duration = typeof duration === 'number' && !isNaN(duration) ? duration * 1000 : 0;\n      return duration; // we take a short offset to make sure we fire on the next frame after animation\n    },\n    emulateTransitionEnd = function(element,handler){ // emulateTransitionEnd since 2.0.4\n      var called = 0, duration = getTransitionDurationFromElement(element);\n      duration ? one(element, transitionEndEvent, function(e){ !called && handler(e), called = 1; })\n               : setTimeout(function() { !called && handler(), called = 1; }, 17);\n    },\n    bootstrapCustomEvent = function (eventName, componentName, related) {\n      var OriginalCustomEvent = new CustomEvent( eventName + '.bs.' + componentName);\n      OriginalCustomEvent.relatedTarget = related;\n      this.dispatchEvent(OriginalCustomEvent);\n    },\n  \n    // tooltip / popover stuff\n    getScroll = function() { // also Affix and ScrollSpy uses it\n      return {\n        y : globalObject.pageYOffset || HTML[scrollTop],\n        x : globalObject.pageXOffset || HTML[scrollLeft]\n      }\n    },\n    styleTip = function(link,element,position,parent) { // both popovers and tooltips (target,tooltip,placement,elementToAppendTo)\n      var elementDimensions = { w : element[offsetWidth], h: element[offsetHeight] },\n          windowWidth = (HTML[clientWidth] || DOC[body][clientWidth]),\n          windowHeight = (HTML[clientHeight] || DOC[body][clientHeight]),\n          rect = link[getBoundingClientRect](),\n          scroll = parent === DOC[body] ? getScroll() : { x: parent[offsetLeft] + parent[scrollLeft], y: parent[offsetTop] + parent[scrollTop] },\n          linkDimensions = { w: rect[right] - rect[left], h: rect[bottom] - rect[top] },\n          isPopover = hasClass(element,'popover'),\n          topPosition, leftPosition,\n  \n          arrow = queryElement('.arrow',element),\n          arrowTop, arrowLeft, arrowWidth, arrowHeight,\n  \n          halfTopExceed = rect[top] + linkDimensions.h/2 - elementDimensions.h/2 < 0,\n          halfLeftExceed = rect[left] + linkDimensions.w/2 - elementDimensions.w/2 < 0,\n          halfRightExceed = rect[left] + elementDimensions.w/2 + linkDimensions.w/2 >= windowWidth,\n          halfBottomExceed = rect[top] + elementDimensions.h/2 + linkDimensions.h/2 >= windowHeight,\n          topExceed = rect[top] - elementDimensions.h < 0,\n          leftExceed = rect[left] - elementDimensions.w < 0,\n          bottomExceed = rect[top] + elementDimensions.h + linkDimensions.h >= windowHeight,\n          rightExceed = rect[left] + elementDimensions.w + linkDimensions.w >= windowWidth;\n  \n      // recompute position\n      position = (position === left || position === right) && leftExceed && rightExceed ? top : position; // first, when both left and right limits are exceeded, we fall back to top|bottom\n      position = position === top && topExceed ? bottom : position;\n      position = position === bottom && bottomExceed ? top : position;\n      position = position === left && leftExceed ? right : position;\n      position = position === right && rightExceed ? left : position;\n  \n      // update tooltip/popover class\n      element.className[indexOf](position) === -1 && (element.className = element.className.replace(tipPositions,position));\n  \n      // we check the computed width & height and update here\n      arrowWidth = arrow[offsetWidth]; arrowHeight = arrow[offsetHeight];\n  \n      // apply styling to tooltip or popover\n      if ( position === left || position === right ) { // secondary|side positions\n        if ( position === left ) { // LEFT\n          leftPosition = rect[left] + scroll.x - elementDimensions.w - ( isPopover ? arrowWidth : 0 );\n        } else { // RIGHT\n          leftPosition = rect[left] + scroll.x + linkDimensions.w;\n        }\n  \n        // adjust top and arrow\n        if (halfTopExceed) {\n          topPosition = rect[top] + scroll.y;\n          arrowTop = linkDimensions.h/2 - arrowWidth;\n        } else if (halfBottomExceed) {\n          topPosition = rect[top] + scroll.y - elementDimensions.h + linkDimensions.h;\n          arrowTop = elementDimensions.h - linkDimensions.h/2 - arrowWidth;\n        } else {\n          topPosition = rect[top] + scroll.y - elementDimensions.h/2 + linkDimensions.h/2;\n          arrowTop = elementDimensions.h/2 - (isPopover ? arrowHeight*0.9 : arrowHeight/2);\n        }\n      } else if ( position === top || position === bottom ) { // primary|vertical positions\n        if ( position === top) { // TOP\n          topPosition =  rect[top] + scroll.y - elementDimensions.h - ( isPopover ? arrowHeight : 0 );\n        } else { // BOTTOM\n          topPosition = rect[top] + scroll.y + linkDimensions.h;\n        }\n        // adjust left | right and also the arrow\n        if (halfLeftExceed) {\n          leftPosition = 0;\n          arrowLeft = rect[left] + linkDimensions.w/2 - arrowWidth;\n        } else if (halfRightExceed) {\n          leftPosition = windowWidth - elementDimensions.w*1.01;\n          arrowLeft = elementDimensions.w - ( windowWidth - rect[left] ) + linkDimensions.w/2 - arrowWidth/2;\n        } else {\n          leftPosition = rect[left] + scroll.x - elementDimensions.w/2 + linkDimensions.w/2;\n          arrowLeft = elementDimensions.w/2 - ( isPopover ? arrowWidth : arrowWidth/2 );\n        }\n      }\n  \n      // apply style to tooltip/popover and its arrow\n      element[style][top] = topPosition + 'px';\n      element[style][left] = leftPosition + 'px';\n  \n      arrowTop && (arrow[style][top] = arrowTop + 'px');\n      arrowLeft && (arrow[style][left] = arrowLeft + 'px');\n    };\n  \n  BSN.version = '2.0.27';\n  \n  /* Native Javascript for Bootstrap 4 | Dropdown\n  ----------------------------------------------*/\n  \n  // DROPDOWN DEFINITION\n  // ===================\n  var Dropdown = function( element, option ) {\n      \n    // initialization element\n    element = queryElement(element);\n  \n    // set option\n    this.persist = option === true || element[getAttribute]('data-persist') === 'true' || false;\n  \n    // constants, event targets, strings\n    var self = this, children = 'children',\n      parent = element[parentNode],\n      component = 'dropdown', open = 'open',\n      relatedTarget = null,\n      menu = queryElement('.dropdown-menu', parent),\n      menuItems = (function(){\n        var set = menu[children], newSet = [];\n        for ( var i=0; i<set[length]; i++ ){\n          set[i][children][length] && (set[i][children][0].tagName === 'A' && newSet[push](set[i][children][0]));\n          set[i].tagName === 'A' && newSet[push](set[i]);\n        }\n        return newSet;\n      })(),\n  \n      // preventDefault on empty anchor links\n      preventEmptyAnchor = function(anchor){\n        (anchor.href && anchor.href.slice(-1) === '#' || anchor[parentNode] && anchor[parentNode].href \n          && anchor[parentNode].href.slice(-1) === '#') && this[preventDefault]();    \n      },\n  \n      // toggle dismissible events\n      toggleDismiss = function(){\n        var type = element[open] ? on : off;\n        type(DOC, clickEvent, dismissHandler); \n        type(DOC, keydownEvent, preventScroll);\n        type(DOC, keyupEvent, keyHandler);\n        type(DOC, focusEvent, dismissHandler, true);\n      },\n  \n      // handlers\n      dismissHandler = function(e) {\n        var eventTarget = e[target], hasData = eventTarget && (eventTarget[getAttribute](dataToggle) \n                              || eventTarget[parentNode] && getAttribute in eventTarget[parentNode] \n                              && eventTarget[parentNode][getAttribute](dataToggle));\n        if ( e.type === focusEvent && (eventTarget === element || eventTarget === menu || menu[contains](eventTarget) ) ) {\n          return;\n        }\n        if ( (eventTarget === menu || menu[contains](eventTarget)) && (self.persist || hasData) ) { return; }\n        else {\n          relatedTarget = eventTarget === element || element[contains](eventTarget) ? element : null;\n          hide();\n        }\n        preventEmptyAnchor.call(e,eventTarget);\n      },\n      clickHandler = function(e) {\n        relatedTarget = element;\n        show();\n        preventEmptyAnchor.call(e,e[target]);\n      },\n      preventScroll = function(e){\n        var key = e.which || e.keyCode;\n        if( key === 38 || key === 40 ) { e[preventDefault](); }\n      },\n      keyHandler = function(e){\n        var key = e.which || e.keyCode,\n          activeItem = DOC.activeElement,\n          idx = menuItems[indexOf](activeItem),\n          isSameElement = activeItem === element,\n          isInsideMenu = menu[contains](activeItem),\n          isMenuItem = activeItem[parentNode] === menu || activeItem[parentNode][parentNode] === menu;          \n  \n        if ( isMenuItem ) { // navigate up | down\n          idx = isSameElement ? 0 \n                              : key === 38 ? (idx>1?idx-1:0)\n                              : key === 40 ? (idx<menuItems[length]-1?idx+1:idx) : idx;\n          menuItems[idx] && setFocus(menuItems[idx]);\n        }\n        if ( (menuItems[length] && isMenuItem // menu has items\n              || !menuItems[length] && (isInsideMenu || isSameElement)  // menu might be a form\n              || !isInsideMenu ) // or the focused element is not in the menu at all\n              && element[open] && key === 27  // menu must be open\n        ) {\n          self.toggle();\n          relatedTarget = null;\n        }\n      },\n  \n      // private methods\n      show = function() {\n        bootstrapCustomEvent.call(parent, showEvent, component, relatedTarget);\n        addClass(menu,showClass);\n        addClass(parent,showClass);\n        element[setAttribute](ariaExpanded,true);\n        bootstrapCustomEvent.call(parent, shownEvent, component, relatedTarget);\n        element[open] = true;\n        off(element, clickEvent, clickHandler);\n        setTimeout(function(){\n          setFocus( menu[getElementsByTagName]('INPUT')[0] || element ); // focus the first input item | element\n          toggleDismiss();\n        },1);\n      },\n      hide = function() {\n        bootstrapCustomEvent.call(parent, hideEvent, component, relatedTarget);\n        removeClass(menu,showClass);\n        removeClass(parent,showClass);\n        element[setAttribute](ariaExpanded,false);\n        bootstrapCustomEvent.call(parent, hiddenEvent, component, relatedTarget);\n        element[open] = false;\n        toggleDismiss();\n        setFocus(element);\n        setTimeout(function(){ on(element, clickEvent, clickHandler); },1);\n      };\n  \n    // set initial state to closed\n    element[open] = false;\n  \n    // public methods\n    this.toggle = function() {\n      if (hasClass(parent,showClass) && element[open]) { hide(); } \n      else { show(); }\n    };\n  \n    // init\n    if ( !(stringDropdown in element) ) { // prevent adding event handlers twice\n      !tabindex in menu && menu[setAttribute](tabindex, '0'); // Fix onblur on Chrome | Safari\n      on(element, clickEvent, clickHandler);\n    }\n  \n    element[stringDropdown] = self;\n  };\n  \n  // DROPDOWN DATA API\n  // =================\n  supports[push]( [stringDropdown, Dropdown, '['+dataToggle+'=\"dropdown\"]'] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Collapse\n  -----------------------------------------------*/\n  \n  // COLLAPSE DEFINITION\n  // ===================\n  var Collapse = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // set options\n    options = options || {};\n  \n    // event targets and constants\n    var accordion = null, collapse = null, self = this, \n      accordionData = element[getAttribute]('data-parent'),\n      activeCollapse, activeElement,\n  \n      // component strings\n      component = 'collapse',\n      collapsed = 'collapsed',\n      isAnimating = 'isAnimating',\n  \n      // private methods\n      openAction = function(collapseElement,toggle) {\n        bootstrapCustomEvent.call(collapseElement, showEvent, component);\n        collapseElement[isAnimating] = true;\n        addClass(collapseElement,collapsing);\n        removeClass(collapseElement,component);\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          collapseElement[isAnimating] = false;\n          collapseElement[setAttribute](ariaExpanded,'true');\n          toggle[setAttribute](ariaExpanded,'true');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement, component);\n          addClass(collapseElement,showClass);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, shownEvent, component);\n        });\n      },\n      closeAction = function(collapseElement,toggle) {\n        bootstrapCustomEvent.call(collapseElement, hideEvent, component);\n        collapseElement[isAnimating] = true;\n        collapseElement[style][height] = collapseElement[scrollHeight] + 'px'; // set height first\n        removeClass(collapseElement,component);\n        removeClass(collapseElement,showClass);\n        addClass(collapseElement,collapsing);\n        collapseElement[offsetWidth]; // force reflow to enable transition\n        collapseElement[style][height] = '0px';\n        \n        emulateTransitionEnd(collapseElement, function() {\n          collapseElement[isAnimating] = false;\n          collapseElement[setAttribute](ariaExpanded,'false');\n          toggle[setAttribute](ariaExpanded,'false');\n          removeClass(collapseElement,collapsing);\n          addClass(collapseElement,component);\n          collapseElement[style][height] = '';\n          bootstrapCustomEvent.call(collapseElement, hiddenEvent, component);\n        });\n      },\n      getTarget = function() {\n        var href = element.href && element[getAttribute]('href'),\n          parent = element[getAttribute](dataTarget),\n          id = href || ( parent && parent.charAt(0) === '#' ) && parent;\n        return id && queryElement(id);\n      };\n    \n    // public methods\n    this.toggle = function(e) {\n      e[preventDefault]();\n      if (!hasClass(collapse,showClass)) { self.show(); } \n      else { self.hide(); }\n    };\n    this.hide = function() {\n      if ( collapse[isAnimating] ) return;    \n      closeAction(collapse,element);\n      addClass(element,collapsed);\n    };\n    this.show = function() {\n      if ( accordion ) {\n        activeCollapse = queryElement('.'+component+'.'+showClass,accordion);\n        activeElement = activeCollapse && (queryElement('['+dataTarget+'=\"#'+activeCollapse.id+'\"]',accordion)\n                      || queryElement('[href=\"#'+activeCollapse.id+'\"]',accordion) );\n      }\n  \n      if ( !collapse[isAnimating] || activeCollapse && !activeCollapse[isAnimating] ) {\n        if ( activeElement && activeCollapse !== collapse ) {\n          closeAction(activeCollapse,activeElement); \n          addClass(activeElement,collapsed);\n        }\n        openAction(collapse,element);\n        removeClass(element,collapsed);\n      }\n    };\n  \n    // init\n    if ( !(stringCollapse in element ) ) { // prevent adding event handlers twice\n      on(element, clickEvent, self.toggle);\n    }\n    collapse = getTarget();\n    collapse[isAnimating] = false;  // when true it will prevent click handlers  \n    accordion = queryElement(options.parent) || accordionData && getClosest(element, accordionData);\n    element[stringCollapse] = self;\n  };\n  \n  // COLLAPSE DATA API\n  // =================\n  supports[push]( [ stringCollapse, Collapse, '['+dataToggle+'=\"collapse\"]' ] );\n  \n  \n  /* Native Javascript for Bootstrap 4 | Tab\n  -----------------------------------------*/\n  \n  // TAB DEFINITION\n  // ==============\n  var Tab = function( element, options ) {\n  \n    // initialization element\n    element = queryElement(element);\n  \n    // DATA API\n    var heightData = element[getAttribute](dataHeight),\n      \n        // strings\n        component = 'tab', height = 'height', float = 'float', isAnimating = 'isAnimating';\n        \n    // set options\n    options = options || {};\n    this[height] = supportTransitions ? (options[height] || heightData === 'true') : false;\n  \n    // bind, event targets\n    var self = this, next,\n      tabs = getClosest(element,'.nav'),\n      tabsContentContainer = false,\n      dropdown = tabs && queryElement('.dropdown-toggle',tabs),\n      activeTab, activeContent, nextContent, containerHeight, equalContents, nextHeight,\n      \n      // trigger\n      triggerEnd = function(){\n        tabsContentContainer[style][height] = '';\n        removeClass(tabsContentContainer,collapsing);\n        tabs[isAnimating] = false;\n      },\n      triggerShow = function() {\n        if (tabsContentContainer) { // height animation\n          if ( equalContents ) {\n            triggerEnd();\n          } else {\n            setTimeout(function(){ // enables height animation\n              tabsContentContainer[style][height] = nextHeight + 'px'; // height animation\n              tabsContentContainer[offsetWidth];\n              emulateTransitionEnd(tabsContentContainer, triggerEnd);\n            },50);\n          }\n        } else {\n          tabs[isAnimating] = false; \n        }\n        bootstrapCustomEvent.call(next, shownEvent, component, activeTab);\n      },\n      triggerHide = function() {\n        if (tabsContentContainer) {\n          activeContent[style][float] = left;\n          nextContent[style][float] = left;        \n          containerHeight = activeContent[scrollHeight];\n        }\n          \n        addClass(nextContent,active);\n        bootstrapCustomEvent.call(next, showEvent, component, activeTab);\n  \n        removeClass(activeContent,active);\n        bootstrapCustomEvent.call(activeTab, hiddenEvent, component, next);\n        \n        if (tabsContentContainer) {\n          nextHeight = nextContent[scrollHeight];\n          equalContents = nextHeight === containerHeight;\n          addClass(tabsContentContainer,collapsing);\n          tabsContentContainer[style][height] = containerHeight + 'px'; // height animation\n          tabsContentContainer[offsetHeight];\n          activeContent[style][float] = '';\n          nextContent[style][float] = '';\n        }\n  \n        if ( hasClass(nextContent, 'fade') ) {\n          setTimeout(function(){\n            addClass(nextContent,showClass);\n            emulateTransitionEnd(nextContent,triggerShow);\n          },20);\n        } else { triggerShow(); }        \n      };\n  \n    if (!tabs) return; // invalidate\n  \n    // set default animation state\n    tabs[isAnimating] = false;    \n          \n    // private methods\n    var getActiveTab = function() {\n        var activeTabs = getElementsByClassName(tabs,active), activeTab;\n        if ( activeTabs[length] === 1 && !hasClass(activeTabs[0][parentNode],'dropdown') ) {\n          activeTab = activeTabs[0];\n        } else if ( activeTabs[length] > 1 ) {\n          activeTab = activeTabs[activeTabs[length]-1];\n        }\n        return activeTab;\n      },\n      getActiveContent = function() {\n        return queryElement(getActiveTab()[getAttribute]('href'));\n      },\n      // handler \n      clickHandler = function(e) {\n        e[preventDefault]();\n        next = e[currentTarget];\n        !tabs[isAnimating] && !hasClass(next,active) && self.show();\n      };\n  \n    // public method\n    this.show = function() { // the tab we clicked is now the next tab\n      next = next || element;\n      nextContent = queryElement(next[getAttribute]('href')); //this is the actual object, the next tab content to activate\n      activeTab = getActiveTab(); \n      activeContent = getActiveContent();\n      \n      tabs[isAnimating] = true;\n      removeClass(activeTab,active);\n      activeTab[setAttribute](ariaSelected,'false');\n      addClass(next,active);\n      next[setAttribute](ariaSelected,'true');    \n  \n      if ( dropdown ) {\n        if ( !hasClass(element[parentNode],'dropdown-menu') ) {\n          if (hasClass(dropdown,active)) removeClass(dropdown,active);\n        } else {\n          if (!hasClass(dropdown,active)) addClass(dropdown,active);\n        }\n      }\n      \n      bootstrapCustomEvent.call(activeTab, hideEvent, component, next);\n  \n      if (hasClass(activeContent, 'fade')) {\n        removeClass(activeContent,showClass);\n        emulateTransitionEnd(activeContent, triggerHide);\n      } else { triggerHide(); }\n    };\n  \n    // init\n    if ( !(stringTab in element) ) { // prevent adding event handlers twice\n      on(element, clickEvent, clickHandler);\n    }\n    if (self[height]) { tabsContentContainer = getActiveContent()[parentNode]; }\n    element[stringTab] = self;\n  };\n  \n  // TAB DATA API\n  // ============\n  supports[push]( [ stringTab, Tab, '['+dataToggle+'=\"tab\"]' ] );\n  \n  \n  \r\n  /* Native Javascript for Bootstrap | Initialize Data API\r\n  --------------------------------------------------------*/\r\n  var initializeDataAPI = function( constructor, collection ){\r\n      for (var i=0, l=collection[length]; i<l; i++) {\r\n        new constructor(collection[i]);\r\n      }\r\n    },\r\n    initCallback = BSN.initCallback = function(lookUp){\r\n      lookUp = lookUp || DOC;\r\n      for (var i=0, l=supports[length]; i<l; i++) {\r\n        initializeDataAPI( supports[i][1], lookUp[querySelectorAll] (supports[i][2]) );\r\n      }\r\n    };\r\n  \r\n  // bulk initialize all components\r\n  DOC[body] ? initCallback() : on( DOC, 'DOMContentLoaded', function(){ initCallback(); } );\r\n  \n  return {\n    Dropdown: Dropdown,\n    Collapse: Collapse,\n    Tab: Tab\n  };\n}));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(110)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///73\n")},function(module,exports,__webpack_require__){eval("var core = __webpack_require__(63);\nvar global = __webpack_require__(17);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __webpack_require__(75) ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQuanM/NTUzNyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMTkgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n")},function(module,exports){eval("module.exports = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19saWJyYXJ5LmpzPzJkMDAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75\n")},function(module,exports){eval("var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanM/MmQ5NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///76\n")},function(module,exports){eval("// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbnRlZ2VyLmpzPzQ1ODgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///77\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = __webpack_require__(118);\nvar enumBugKeys = __webpack_require__(101);\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcz8wZDU4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4xNCAvIDE1LjIuMy4xNCBPYmplY3Qua2V5cyhPKVxudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMtaW50ZXJuYWwnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiBrZXlzKE8pIHtcbiAgcmV0dXJuICRrZXlzKE8sIGVudW1CdWdLZXlzKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///78\n")},function(module,exports,__webpack_require__){eval("// 7.1.13 ToObject(argument)\nvar defined = __webpack_require__(57);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanM/NGJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///79\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYW9zL2Rpc3QvYW9zLmNzcz85ZTgzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///80\n")},function(module,exports,__webpack_require__){eval("/*\nThis plugin extends lazySizes to lazyLoad:\nbackground images, videos/posters and scripts\n\nBackground-Image:\nFor background images, use data-bg attribute:\n<div class=\"lazyload\" data-bg=\"bg-img.jpg\"></div>\n\n Video:\n For video/audio use data-poster and preload=\"none\":\n <video class=\"lazyload\" data-poster=\"poster.jpg\" preload=\"none\">\n \x3c!-- sources --\x3e\n </video>\n\n Scripts:\n For scripts use data-script:\n <div class=\"lazyload\" data-script=\"module-name.js\"></div>\n\n\n Script modules using require:\n For modules using require use data-require:\n <div class=\"lazyload\" data-require=\"module-name\"></div>\n*/\n\n(function(window, factory) {\n\tvar globalInstall = function(){\n\t\tfactory(window.lazySizes);\n\t\twindow.removeEventListener('lazyunveilread', globalInstall, true);\n\t};\n\n\tfactory = factory.bind(null, window, window.document);\n\n\tif( true && module.exports){\n\t\tfactory(__webpack_require__(66));\n\t} else if(window.lazySizes) {\n\t\tglobalInstall();\n\t} else {\n\t\twindow.addEventListener('lazyunveilread', globalInstall, true);\n\t}\n}(window, function(window, document, lazySizes) {\n\t/*jshint eqnull:true */\n\t'use strict';\n\tvar bgLoad, regBgUrlEscape;\n\tvar uniqueUrls = {};\n\n\tif(document.addEventListener){\n\t\tregBgUrlEscape = /\\(|\\)|\\s|'/;\n\n\t\tbgLoad = function (url, cb){\n\t\t\tvar img = document.createElement('img');\n\t\t\timg.onload = function(){\n\t\t\t\timg.onload = null;\n\t\t\t\timg.onerror = null;\n\t\t\t\timg = null;\n\t\t\t\tcb();\n\t\t\t};\n\t\t\timg.onerror = img.onload;\n\n\t\t\timg.src = url;\n\n\t\t\tif(img && img.complete && img.onload){\n\t\t\t\timg.onload();\n\t\t\t}\n\t\t};\n\n\t\taddEventListener('lazybeforeunveil', function(e){\n\t\t\tif(e.detail.instance != lazySizes){return;}\n\n\t\t\tvar tmp, load, bg, poster;\n\t\t\tif(!e.defaultPrevented) {\n\n\t\t\t\tif(e.target.preload == 'none'){\n\t\t\t\t\te.target.preload = 'auto';\n\t\t\t\t}\n\n\t\t\t\ttmp = e.target.getAttribute('data-link');\n\t\t\t\tif(tmp){\n\t\t\t\t\taddStyleScript(tmp, true);\n\t\t\t\t}\n\n\t\t\t\t// handle data-script\n\t\t\t\ttmp = e.target.getAttribute('data-script');\n\t\t\t\tif(tmp){\n\t\t\t\t\taddStyleScript(tmp);\n\t\t\t\t}\n\n\t\t\t\t// handle data-require\n\t\t\t\ttmp = e.target.getAttribute('data-require');\n\t\t\t\tif(tmp){\n\t\t\t\t\tif(lazySizes.cfg.requireJs){\n\t\t\t\t\t\tlazySizes.cfg.requireJs([tmp]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddStyleScript(tmp);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// handle data-bg\n\t\t\t\tbg = e.target.getAttribute('data-bg');\n\t\t\t\tif (bg) {\n\t\t\t\t\te.detail.firesLoad = true;\n\t\t\t\t\tload = function(){\n\t\t\t\t\t\te.target.style.backgroundImage = 'url(' + (regBgUrlEscape.test(bg) ? JSON.stringify(bg) : bg ) + ')';\n\t\t\t\t\t\te.detail.firesLoad = false;\n\t\t\t\t\t\tlazySizes.fire(e.target, '_lazyloaded', {}, true, true);\n\t\t\t\t\t};\n\n\t\t\t\t\tbgLoad(bg, load);\n\t\t\t\t}\n\n\t\t\t\t// handle data-poster\n\t\t\t\tposter = e.target.getAttribute('data-poster');\n\t\t\t\tif(poster){\n\t\t\t\t\te.detail.firesLoad = true;\n\t\t\t\t\tload = function(){\n\t\t\t\t\t\te.target.poster = poster;\n\t\t\t\t\t\te.detail.firesLoad = false;\n\t\t\t\t\t\tlazySizes.fire(e.target, '_lazyloaded', {}, true, true);\n\t\t\t\t\t};\n\n\t\t\t\t\tbgLoad(poster, load);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}, false);\n\n\t}\n\n\tfunction addStyleScript(src, style){\n\t\tif(uniqueUrls[src]){\n\t\t\treturn;\n\t\t}\n\t\tvar elem = document.createElement(style ? 'link' : 'script');\n\t\tvar insertElem = document.getElementsByTagName('script')[0];\n\n\t\tif(style){\n\t\t\telem.rel = 'stylesheet';\n\t\t\telem.href = src;\n\t\t} else {\n\t\t\telem.src = src;\n\t\t}\n\t\tuniqueUrls[src] = true;\n\t\tuniqueUrls[elem.src || elem.href] = true;\n\t\tinsertElem.parentNode.insertBefore(elem, insertElem);\n\t}\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbGF6eXNpemVzL3BsdWdpbnMvdW52ZWlsaG9va3MvbHMudW52ZWlsaG9va3MuanM/MDkyZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBwbHVnaW4gZXh0ZW5kcyBsYXp5U2l6ZXMgdG8gbGF6eUxvYWQ6XG5iYWNrZ3JvdW5kIGltYWdlcywgdmlkZW9zL3Bvc3RlcnMgYW5kIHNjcmlwdHNcblxuQmFja2dyb3VuZC1JbWFnZTpcbkZvciBiYWNrZ3JvdW5kIGltYWdlcywgdXNlIGRhdGEtYmcgYXR0cmlidXRlOlxuPGRpdiBjbGFzcz1cImxhenlsb2FkXCIgZGF0YS1iZz1cImJnLWltZy5qcGdcIj48L2Rpdj5cblxuIFZpZGVvOlxuIEZvciB2aWRlby9hdWRpbyB1c2UgZGF0YS1wb3N0ZXIgYW5kIHByZWxvYWQ9XCJub25lXCI6XG4gPHZpZGVvIGNsYXNzPVwibGF6eWxvYWRcIiBkYXRhLXBvc3Rlcj1cInBvc3Rlci5qcGdcIiBwcmVsb2FkPVwibm9uZVwiPlxuIDwhLS0gc291cmNlcyAtLT5cbiA8L3ZpZGVvPlxuXG4gU2NyaXB0czpcbiBGb3Igc2NyaXB0cyB1c2UgZGF0YS1zY3JpcHQ6XG4gPGRpdiBjbGFzcz1cImxhenlsb2FkXCIgZGF0YS1zY3JpcHQ9XCJtb2R1bGUtbmFtZS5qc1wiPjwvZGl2PlxuXG5cbiBTY3JpcHQgbW9kdWxlcyB1c2luZyByZXF1aXJlOlxuIEZvciBtb2R1bGVzIHVzaW5nIHJlcXVpcmUgdXNlIGRhdGEtcmVxdWlyZTpcbiA8ZGl2IGNsYXNzPVwibGF6eWxvYWRcIiBkYXRhLXJlcXVpcmU9XCJtb2R1bGUtbmFtZVwiPjwvZGl2PlxuKi9cblxuKGZ1bmN0aW9uKHdpbmRvdywgZmFjdG9yeSkge1xuXHR2YXIgZ2xvYmFsSW5zdGFsbCA9IGZ1bmN0aW9uKCl7XG5cdFx0ZmFjdG9yeSh3aW5kb3cubGF6eVNpemVzKTtcblx0XHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbGF6eXVudmVpbHJlYWQnLCBnbG9iYWxJbnN0YWxsLCB0cnVlKTtcblx0fTtcblxuXHRmYWN0b3J5ID0gZmFjdG9yeS5iaW5kKG51bGwsIHdpbmRvdywgd2luZG93LmRvY3VtZW50KTtcblxuXHRpZih0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKXtcblx0XHRmYWN0b3J5KHJlcXVpcmUoJ2xhenlzaXplcycpKTtcblx0fSBlbHNlIGlmKHdpbmRvdy5sYXp5U2l6ZXMpIHtcblx0XHRnbG9iYWxJbnN0YWxsKCk7XG5cdH0gZWxzZSB7XG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xhenl1bnZlaWxyZWFkJywgZ2xvYmFsSW5zdGFsbCwgdHJ1ZSk7XG5cdH1cbn0od2luZG93LCBmdW5jdGlvbih3aW5kb3csIGRvY3VtZW50LCBsYXp5U2l6ZXMpIHtcblx0Lypqc2hpbnQgZXFudWxsOnRydWUgKi9cblx0J3VzZSBzdHJpY3QnO1xuXHR2YXIgYmdMb2FkLCByZWdCZ1VybEVzY2FwZTtcblx0dmFyIHVuaXF1ZVVybHMgPSB7fTtcblxuXHRpZihkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKXtcblx0XHRyZWdCZ1VybEVzY2FwZSA9IC9cXCh8XFwpfFxcc3wnLztcblxuXHRcdGJnTG9hZCA9IGZ1bmN0aW9uICh1cmwsIGNiKXtcblx0XHRcdHZhciBpbWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcblx0XHRcdGltZy5vbmxvYWQgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRpbWcub25sb2FkID0gbnVsbDtcblx0XHRcdFx0aW1nLm9uZXJyb3IgPSBudWxsO1xuXHRcdFx0XHRpbWcgPSBudWxsO1xuXHRcdFx0XHRjYigpO1xuXHRcdFx0fTtcblx0XHRcdGltZy5vbmVycm9yID0gaW1nLm9ubG9hZDtcblxuXHRcdFx0aW1nLnNyYyA9IHVybDtcblxuXHRcdFx0aWYoaW1nICYmIGltZy5jb21wbGV0ZSAmJiBpbWcub25sb2FkKXtcblx0XHRcdFx0aW1nLm9ubG9hZCgpO1xuXHRcdFx0fVxuXHRcdH07XG5cblx0XHRhZGRFdmVudExpc3RlbmVyKCdsYXp5YmVmb3JldW52ZWlsJywgZnVuY3Rpb24oZSl7XG5cdFx0XHRpZihlLmRldGFpbC5pbnN0YW5jZSAhPSBsYXp5U2l6ZXMpe3JldHVybjt9XG5cblx0XHRcdHZhciB0bXAsIGxvYWQsIGJnLCBwb3N0ZXI7XG5cdFx0XHRpZighZS5kZWZhdWx0UHJldmVudGVkKSB7XG5cblx0XHRcdFx0aWYoZS50YXJnZXQucHJlbG9hZCA9PSAnbm9uZScpe1xuXHRcdFx0XHRcdGUudGFyZ2V0LnByZWxvYWQgPSAnYXV0byc7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0bXAgPSBlLnRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbGluaycpO1xuXHRcdFx0XHRpZih0bXApe1xuXHRcdFx0XHRcdGFkZFN0eWxlU2NyaXB0KHRtcCwgdHJ1ZSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBoYW5kbGUgZGF0YS1zY3JpcHRcblx0XHRcdFx0dG1wID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXNjcmlwdCcpO1xuXHRcdFx0XHRpZih0bXApe1xuXHRcdFx0XHRcdGFkZFN0eWxlU2NyaXB0KHRtcCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBoYW5kbGUgZGF0YS1yZXF1aXJlXG5cdFx0XHRcdHRtcCA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1yZXF1aXJlJyk7XG5cdFx0XHRcdGlmKHRtcCl7XG5cdFx0XHRcdFx0aWYobGF6eVNpemVzLmNmZy5yZXF1aXJlSnMpe1xuXHRcdFx0XHRcdFx0bGF6eVNpemVzLmNmZy5yZXF1aXJlSnMoW3RtcF0pO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRhZGRTdHlsZVNjcmlwdCh0bXApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGhhbmRsZSBkYXRhLWJnXG5cdFx0XHRcdGJnID0gZS50YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLWJnJyk7XG5cdFx0XHRcdGlmIChiZykge1xuXHRcdFx0XHRcdGUuZGV0YWlsLmZpcmVzTG9hZCA9IHRydWU7XG5cdFx0XHRcdFx0bG9hZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0XHRlLnRhcmdldC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSAndXJsKCcgKyAocmVnQmdVcmxFc2NhcGUudGVzdChiZykgPyBKU09OLnN0cmluZ2lmeShiZykgOiBiZyApICsgJyknO1xuXHRcdFx0XHRcdFx0ZS5kZXRhaWwuZmlyZXNMb2FkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRsYXp5U2l6ZXMuZmlyZShlLnRhcmdldCwgJ19sYXp5bG9hZGVkJywge30sIHRydWUsIHRydWUpO1xuXHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRiZ0xvYWQoYmcsIGxvYWQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaGFuZGxlIGRhdGEtcG9zdGVyXG5cdFx0XHRcdHBvc3RlciA9IGUudGFyZ2V0LmdldEF0dHJpYnV0ZSgnZGF0YS1wb3N0ZXInKTtcblx0XHRcdFx0aWYocG9zdGVyKXtcblx0XHRcdFx0XHRlLmRldGFpbC5maXJlc0xvYWQgPSB0cnVlO1xuXHRcdFx0XHRcdGxvYWQgPSBmdW5jdGlvbigpe1xuXHRcdFx0XHRcdFx0ZS50YXJnZXQucG9zdGVyID0gcG9zdGVyO1xuXHRcdFx0XHRcdFx0ZS5kZXRhaWwuZmlyZXNMb2FkID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRsYXp5U2l6ZXMuZmlyZShlLnRhcmdldCwgJ19sYXp5bG9hZGVkJywge30sIHRydWUsIHRydWUpO1xuXHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRiZ0xvYWQocG9zdGVyLCBsb2FkKTtcblxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSwgZmFsc2UpO1xuXG5cdH1cblxuXHRmdW5jdGlvbiBhZGRTdHlsZVNjcmlwdChzcmMsIHN0eWxlKXtcblx0XHRpZih1bmlxdWVVcmxzW3NyY10pe1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblx0XHR2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoc3R5bGUgPyAnbGluaycgOiAnc2NyaXB0Jyk7XG5cdFx0dmFyIGluc2VydEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07XG5cblx0XHRpZihzdHlsZSl7XG5cdFx0XHRlbGVtLnJlbCA9ICdzdHlsZXNoZWV0Jztcblx0XHRcdGVsZW0uaHJlZiA9IHNyYztcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZWxlbS5zcmMgPSBzcmM7XG5cdFx0fVxuXHRcdHVuaXF1ZVVybHNbc3JjXSA9IHRydWU7XG5cdFx0dW5pcXVlVXJsc1tlbGVtLnNyYyB8fCBlbGVtLmhyZWZdID0gdHJ1ZTtcblx0XHRpbnNlcnRFbGVtLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGVsZW0sIGluc2VydEVsZW0pO1xuXHR9XG59KSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///81\n")},function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_RESULT__;/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&("style"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(" ").replace(/\\s+/g," ").replace(/^\\s+|\\s+$/,"")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,"link",{rel:"stylesheet",href:b,media:"all"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error("Stylesheet failed to load");d()}):setTimeout(function(){e=!0;d()},0);u(a,"head",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName("head")[0];if(e){var f=t(a,"script",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,"HEAD"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error("Script load timeout")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||"-"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,"").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a="n";var c=(b||"n4").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+" "+(a.f+"00")+" 300px "+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/[\'"]/g,"");-1!=d.indexOf(" ")||/^\\d/.test(d)?b.push("\'"+d+"\'"):b.push(d)}return b.join(",")}function J(a){return a.a+a.f}function H(a){var b="normal";"o"===a.a?b="oblique":"i"===a.a&&(b="italic");return b}\nfunction ga(a){var b=4,c="n",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F("-");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c("wf","loading")]);K(a,"loading")}function L(a){if(a.g){var b=y(a.f,a.a.c("wf","active")),c=[],d=[a.a.c("wf","loading")];b||c.push(a.a.c("wf","inactive"));w(a.f,c,d)}K(a,"inactive")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,"span",{"aria-hidden":"true"},this.f)}function N(a){u(a.c,"body",a.a)}function O(a){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+I(a.c)+";"+("font-style:"+H(a)+";font-weight:"+(a.f+"00")+";")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||"BESbswy";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+",serif",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+",sans-serif",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G("serif",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G("sans-serif",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:"serif",C:"sans-serif"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f["sans-serif"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f["sans-serif"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c("wf",a.c,J(a).toString(),"active")],[b.a.c("wf",a.c,J(a).toString(),"loading"),b.a.c("wf",a.c,J(a).toString(),"inactive")]);K(b,"fontactive",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c("wf",a.c,J(a).toString(),"active")),d=[],e=[b.a.c("wf",a.c,J(a).toString(),"loading")];c||d.push(b.a.c("wf",a.c,J(a).toString(),"inactive"));w(b.f,d,e)}K(b,"fontinactive",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c("wf","active")],[a.a.c("wf","loading"),a.a.c("wf","inactive")]),K(a,"active")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c("wf",x.c,J(x).toString(),"loading")]);K(r,"fontloading",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f["__mti_fntLst"+d]){var c=f["__mti_fntLst"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||"https://fast.fonts.net/jsapi")+"/"+d+".js"+(e?"?v="+e:""),function(e){e?a([]):(f["__MonotypeConfiguration__"+\nd]=function(){return c.a},b())}).id="__MonotypeAPIScript__"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(":"),d[1])for(var h=d[1].split(","),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||""}var ua="https://fonts.googleapis.com/css";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(":");3==e.length&&a.f.push(e.pop());var f="";2==e.length&&""!=e[1]&&(f=":");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error("No fonts to load!");if(-1!=a.c.indexOf("kit="))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,"+"));b=a.c+"?family="+c.join("%7C");0<a.f.length&&(b+="&subset="+a.f.join(","));0<a.g.length&&(b+="&text="+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:"BESbswy","latin-ext":"\\u00e7\\u00f6\\u00fc\\u011f\\u015f",cyrillic:"\\u0439\\u044f\\u0416",greek:"\\u03b1\\u03b2\\u03a3",khmer:"\\u1780\\u1781\\u1782",Hanuman:"\\u1780\\u1781\\u1782"},Aa={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},Ba={i:"i",italic:"i",n:"n",normal:"n"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(":"),e=d[0].replace(/\\+/g," "),f=["n4"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(","),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k="";else{k=n[2];k=null==k||""==k?"n":Ba[k];n=n[1];if(null==n||""==n)n="4";else var r=Aa[n],n=r?r:isNaN(n)?"4":n.substr(0,1);k=[k,n].join("")}}else k="";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(","):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||"https://use.typekit.net")+"/"+b+".js",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga("font-weight:"+h.weight+";font-style:"+h.style)))}a(d.a)},A(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+ea(this.c)+"/"+b+".js",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)}; true?!(__WEBPACK_AMD_DEFINE_RESULT__ = (function(){return Z}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)):undefined;}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd2ViZm9udGxvYWRlci93ZWJmb250bG9hZGVyLmpzPzI3ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogV2ViIEZvbnQgTG9hZGVyIHYxLjYuMjggLSAoYykgQWRvYmUgU3lzdGVtcywgR29vZ2xlLiBMaWNlbnNlOiBBcGFjaGUgMi4wICovKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYWEoYSxiLGMpe3JldHVybiBhLmNhbGwuYXBwbHkoYS5iaW5kLGFyZ3VtZW50cyl9ZnVuY3Rpb24gYmEoYSxiLGMpe2lmKCFhKXRocm93IEVycm9yKCk7aWYoMjxhcmd1bWVudHMubGVuZ3RoKXt2YXIgZD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMik7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseShjLGQpO3JldHVybiBhLmFwcGx5KGIsYyl9fXJldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGIsYXJndW1lbnRzKX19ZnVuY3Rpb24gcChhLGIsYyl7cD1GdW5jdGlvbi5wcm90b3R5cGUuYmluZCYmLTEhPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLnRvU3RyaW5nKCkuaW5kZXhPZihcIm5hdGl2ZSBjb2RlXCIpP2FhOmJhO3JldHVybiBwLmFwcGx5KG51bGwsYXJndW1lbnRzKX12YXIgcT1EYXRlLm5vd3x8ZnVuY3Rpb24oKXtyZXR1cm4rbmV3IERhdGV9O2Z1bmN0aW9uIGNhKGEsYil7dGhpcy5hPWE7dGhpcy5vPWJ8fGE7dGhpcy5jPXRoaXMuby5kb2N1bWVudH12YXIgZGE9ISF3aW5kb3cuRm9udEZhY2U7ZnVuY3Rpb24gdChhLGIsYyxkKXtiPWEuYy5jcmVhdGVFbGVtZW50KGIpO2lmKGMpZm9yKHZhciBlIGluIGMpYy5oYXNPd25Qcm9wZXJ0eShlKSYmKFwic3R5bGVcIj09ZT9iLnN0eWxlLmNzc1RleHQ9Y1tlXTpiLnNldEF0dHJpYnV0ZShlLGNbZV0pKTtkJiZiLmFwcGVuZENoaWxkKGEuYy5jcmVhdGVUZXh0Tm9kZShkKSk7cmV0dXJuIGJ9ZnVuY3Rpb24gdShhLGIsYyl7YT1hLmMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoYilbMF07YXx8KGE9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTthLmluc2VydEJlZm9yZShjLGEubGFzdENoaWxkKX1mdW5jdGlvbiB2KGEpe2EucGFyZW50Tm9kZSYmYS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGEpfVxuZnVuY3Rpb24gdyhhLGIsYyl7Yj1ifHxbXTtjPWN8fFtdO2Zvcih2YXIgZD1hLmNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pLGU9MDtlPGIubGVuZ3RoO2UrPTEpe2Zvcih2YXIgZj0hMSxnPTA7ZzxkLmxlbmd0aDtnKz0xKWlmKGJbZV09PT1kW2ddKXtmPSEwO2JyZWFrfWZ8fGQucHVzaChiW2VdKX1iPVtdO2ZvcihlPTA7ZTxkLmxlbmd0aDtlKz0xKXtmPSExO2ZvcihnPTA7ZzxjLmxlbmd0aDtnKz0xKWlmKGRbZV09PT1jW2ddKXtmPSEwO2JyZWFrfWZ8fGIucHVzaChkW2VdKX1hLmNsYXNzTmFtZT1iLmpvaW4oXCIgXCIpLnJlcGxhY2UoL1xccysvZyxcIiBcIikucmVwbGFjZSgvXlxccyt8XFxzKyQvLFwiXCIpfWZ1bmN0aW9uIHkoYSxiKXtmb3IodmFyIGM9YS5jbGFzc05hbWUuc3BsaXQoL1xccysvKSxkPTAsZT1jLmxlbmd0aDtkPGU7ZCsrKWlmKGNbZF09PWIpcmV0dXJuITA7cmV0dXJuITF9XG5mdW5jdGlvbiBlYShhKXtyZXR1cm4gYS5vLmxvY2F0aW9uLmhvc3RuYW1lfHxhLmEubG9jYXRpb24uaG9zdG5hbWV9ZnVuY3Rpb24geihhLGIsYyl7ZnVuY3Rpb24gZCgpe20mJmUmJmYmJihtKGcpLG09bnVsbCl9Yj10KGEsXCJsaW5rXCIse3JlbDpcInN0eWxlc2hlZXRcIixocmVmOmIsbWVkaWE6XCJhbGxcIn0pO3ZhciBlPSExLGY9ITAsZz1udWxsLG09Y3x8bnVsbDtkYT8oYi5vbmxvYWQ9ZnVuY3Rpb24oKXtlPSEwO2QoKX0sYi5vbmVycm9yPWZ1bmN0aW9uKCl7ZT0hMDtnPUVycm9yKFwiU3R5bGVzaGVldCBmYWlsZWQgdG8gbG9hZFwiKTtkKCl9KTpzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZT0hMDtkKCl9LDApO3UoYSxcImhlYWRcIixiKX1cbmZ1bmN0aW9uIEEoYSxiLGMsZCl7dmFyIGU9YS5jLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXTtpZihlKXt2YXIgZj10KGEsXCJzY3JpcHRcIix7c3JjOmJ9KSxnPSExO2Yub25sb2FkPWYub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7Z3x8dGhpcy5yZWFkeVN0YXRlJiZcImxvYWRlZFwiIT10aGlzLnJlYWR5U3RhdGUmJlwiY29tcGxldGVcIiE9dGhpcy5yZWFkeVN0YXRlfHwoZz0hMCxjJiZjKG51bGwpLGYub25sb2FkPWYub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsXCJIRUFEXCI9PWYucGFyZW50Tm9kZS50YWdOYW1lJiZlLnJlbW92ZUNoaWxkKGYpKX07ZS5hcHBlbmRDaGlsZChmKTtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Z3x8KGc9ITAsYyYmYyhFcnJvcihcIlNjcmlwdCBsb2FkIHRpbWVvdXRcIikpKX0sZHx8NUUzKTtyZXR1cm4gZn1yZXR1cm4gbnVsbH07ZnVuY3Rpb24gQigpe3RoaXMuYT0wO3RoaXMuYz1udWxsfWZ1bmN0aW9uIEMoYSl7YS5hKys7cmV0dXJuIGZ1bmN0aW9uKCl7YS5hLS07RChhKX19ZnVuY3Rpb24gRShhLGIpe2EuYz1iO0QoYSl9ZnVuY3Rpb24gRChhKXswPT1hLmEmJmEuYyYmKGEuYygpLGEuYz1udWxsKX07ZnVuY3Rpb24gRihhKXt0aGlzLmE9YXx8XCItXCJ9Ri5wcm90b3R5cGUuYz1mdW5jdGlvbihhKXtmb3IodmFyIGI9W10sYz0wO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYi5wdXNoKGFyZ3VtZW50c1tjXS5yZXBsYWNlKC9bXFxXX10rL2csXCJcIikudG9Mb3dlckNhc2UoKSk7cmV0dXJuIGIuam9pbih0aGlzLmEpfTtmdW5jdGlvbiBHKGEsYil7dGhpcy5jPWE7dGhpcy5mPTQ7dGhpcy5hPVwiblwiO3ZhciBjPShifHxcIm40XCIpLm1hdGNoKC9eKFtuaW9dKShbMS05XSkkL2kpO2MmJih0aGlzLmE9Y1sxXSx0aGlzLmY9cGFyc2VJbnQoY1syXSwxMCkpfWZ1bmN0aW9uIGZhKGEpe3JldHVybiBIKGEpK1wiIFwiKyhhLmYrXCIwMFwiKStcIiAzMDBweCBcIitJKGEuYyl9ZnVuY3Rpb24gSShhKXt2YXIgYj1bXTthPWEuc3BsaXQoLyxcXHMqLyk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10ucmVwbGFjZSgvWydcIl0vZyxcIlwiKTstMSE9ZC5pbmRleE9mKFwiIFwiKXx8L15cXGQvLnRlc3QoZCk/Yi5wdXNoKFwiJ1wiK2QrXCInXCIpOmIucHVzaChkKX1yZXR1cm4gYi5qb2luKFwiLFwiKX1mdW5jdGlvbiBKKGEpe3JldHVybiBhLmErYS5mfWZ1bmN0aW9uIEgoYSl7dmFyIGI9XCJub3JtYWxcIjtcIm9cIj09PWEuYT9iPVwib2JsaXF1ZVwiOlwiaVwiPT09YS5hJiYoYj1cIml0YWxpY1wiKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGdhKGEpe3ZhciBiPTQsYz1cIm5cIixkPW51bGw7YSYmKChkPWEubWF0Y2goLyhub3JtYWx8b2JsaXF1ZXxpdGFsaWMpL2kpKSYmZFsxXSYmKGM9ZFsxXS5zdWJzdHIoMCwxKS50b0xvd2VyQ2FzZSgpKSwoZD1hLm1hdGNoKC8oWzEtOV0wMHxub3JtYWx8Ym9sZCkvaSkpJiZkWzFdJiYoL2JvbGQvaS50ZXN0KGRbMV0pP2I9NzovWzEtOV0wMC8udGVzdChkWzFdKSYmKGI9cGFyc2VJbnQoZFsxXS5zdWJzdHIoMCwxKSwxMCkpKSk7cmV0dXJuIGMrYn07ZnVuY3Rpb24gaGEoYSxiKXt0aGlzLmM9YTt0aGlzLmY9YS5vLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudDt0aGlzLmg9Yjt0aGlzLmE9bmV3IEYoXCItXCIpO3RoaXMuaj0hMSE9PWIuZXZlbnRzO3RoaXMuZz0hMSE9PWIuY2xhc3Nlc31mdW5jdGlvbiBpYShhKXthLmcmJncoYS5mLFthLmEuYyhcIndmXCIsXCJsb2FkaW5nXCIpXSk7SyhhLFwibG9hZGluZ1wiKX1mdW5jdGlvbiBMKGEpe2lmKGEuZyl7dmFyIGI9eShhLmYsYS5hLmMoXCJ3ZlwiLFwiYWN0aXZlXCIpKSxjPVtdLGQ9W2EuYS5jKFwid2ZcIixcImxvYWRpbmdcIildO2J8fGMucHVzaChhLmEuYyhcIndmXCIsXCJpbmFjdGl2ZVwiKSk7dyhhLmYsYyxkKX1LKGEsXCJpbmFjdGl2ZVwiKX1mdW5jdGlvbiBLKGEsYixjKXtpZihhLmomJmEuaFtiXSlpZihjKWEuaFtiXShjLmMsSihjKSk7ZWxzZSBhLmhbYl0oKX07ZnVuY3Rpb24gamEoKXt0aGlzLmM9e319ZnVuY3Rpb24ga2EoYSxiLGMpe3ZhciBkPVtdLGU7Zm9yKGUgaW4gYilpZihiLmhhc093blByb3BlcnR5KGUpKXt2YXIgZj1hLmNbZV07ZiYmZC5wdXNoKGYoYltlXSxjKSl9cmV0dXJuIGR9O2Z1bmN0aW9uIE0oYSxiKXt0aGlzLmM9YTt0aGlzLmY9Yjt0aGlzLmE9dCh0aGlzLmMsXCJzcGFuXCIse1wiYXJpYS1oaWRkZW5cIjpcInRydWVcIn0sdGhpcy5mKX1mdW5jdGlvbiBOKGEpe3UoYS5jLFwiYm9keVwiLGEuYSl9ZnVuY3Rpb24gTyhhKXtyZXR1cm5cImRpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7dG9wOi05OTk5cHg7bGVmdDotOTk5OXB4O2ZvbnQtc2l6ZTozMDBweDt3aWR0aDphdXRvO2hlaWdodDphdXRvO2xpbmUtaGVpZ2h0Om5vcm1hbDttYXJnaW46MDtwYWRkaW5nOjA7Zm9udC12YXJpYW50Om5vcm1hbDt3aGl0ZS1zcGFjZTpub3dyYXA7Zm9udC1mYW1pbHk6XCIrSShhLmMpK1wiO1wiKyhcImZvbnQtc3R5bGU6XCIrSChhKStcIjtmb250LXdlaWdodDpcIisoYS5mK1wiMDBcIikrXCI7XCIpfTtmdW5jdGlvbiBQKGEsYixjLGQsZSxmKXt0aGlzLmc9YTt0aGlzLmo9Yjt0aGlzLmE9ZDt0aGlzLmM9Yzt0aGlzLmY9ZXx8M0UzO3RoaXMuaD1mfHx2b2lkIDB9UC5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLmMuby5kb2N1bWVudCxiPXRoaXMsYz1xKCksZD1uZXcgUHJvbWlzZShmdW5jdGlvbihkLGUpe2Z1bmN0aW9uIGYoKXtxKCktYz49Yi5mP2UoKTphLmZvbnRzLmxvYWQoZmEoYi5hKSxiLmgpLnRoZW4oZnVuY3Rpb24oYSl7MTw9YS5sZW5ndGg/ZCgpOnNldFRpbWVvdXQoZiwyNSl9LGZ1bmN0aW9uKCl7ZSgpfSl9ZigpfSksZT1udWxsLGY9bmV3IFByb21pc2UoZnVuY3Rpb24oYSxkKXtlPXNldFRpbWVvdXQoZCxiLmYpfSk7UHJvbWlzZS5yYWNlKFtmLGRdKS50aGVuKGZ1bmN0aW9uKCl7ZSYmKGNsZWFyVGltZW91dChlKSxlPW51bGwpO2IuZyhiLmEpfSxmdW5jdGlvbigpe2IuaihiLmEpfSl9O2Z1bmN0aW9uIFEoYSxiLGMsZCxlLGYsZyl7dGhpcy52PWE7dGhpcy5CPWI7dGhpcy5jPWM7dGhpcy5hPWQ7dGhpcy5zPWd8fFwiQkVTYnN3eVwiO3RoaXMuZj17fTt0aGlzLnc9ZXx8M0UzO3RoaXMudT1mfHxudWxsO3RoaXMubT10aGlzLmo9dGhpcy5oPXRoaXMuZz1udWxsO3RoaXMuZz1uZXcgTSh0aGlzLmMsdGhpcy5zKTt0aGlzLmg9bmV3IE0odGhpcy5jLHRoaXMucyk7dGhpcy5qPW5ldyBNKHRoaXMuYyx0aGlzLnMpO3RoaXMubT1uZXcgTSh0aGlzLmMsdGhpcy5zKTthPW5ldyBHKHRoaXMuYS5jK1wiLHNlcmlmXCIsSih0aGlzLmEpKTthPU8oYSk7dGhpcy5nLmEuc3R5bGUuY3NzVGV4dD1hO2E9bmV3IEcodGhpcy5hLmMrXCIsc2Fucy1zZXJpZlwiLEoodGhpcy5hKSk7YT1PKGEpO3RoaXMuaC5hLnN0eWxlLmNzc1RleHQ9YTthPW5ldyBHKFwic2VyaWZcIixKKHRoaXMuYSkpO2E9TyhhKTt0aGlzLmouYS5zdHlsZS5jc3NUZXh0PWE7YT1uZXcgRyhcInNhbnMtc2VyaWZcIixKKHRoaXMuYSkpO2E9XG5PKGEpO3RoaXMubS5hLnN0eWxlLmNzc1RleHQ9YTtOKHRoaXMuZyk7Tih0aGlzLmgpO04odGhpcy5qKTtOKHRoaXMubSl9dmFyIFI9e0Q6XCJzZXJpZlwiLEM6XCJzYW5zLXNlcmlmXCJ9LFM9bnVsbDtmdW5jdGlvbiBUKCl7aWYobnVsbD09PVMpe3ZhciBhPS9BcHBsZVdlYktpdFxcLyhbMC05XSspKD86XFwuKFswLTldKykpLy5leGVjKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KTtTPSEhYSYmKDUzNj5wYXJzZUludChhWzFdLDEwKXx8NTM2PT09cGFyc2VJbnQoYVsxXSwxMCkmJjExPj1wYXJzZUludChhWzJdLDEwKSl9cmV0dXJuIFN9US5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt0aGlzLmYuc2VyaWY9dGhpcy5qLmEub2Zmc2V0V2lkdGg7dGhpcy5mW1wic2Fucy1zZXJpZlwiXT10aGlzLm0uYS5vZmZzZXRXaWR0aDt0aGlzLkE9cSgpO1UodGhpcyl9O1xuZnVuY3Rpb24gbGEoYSxiLGMpe2Zvcih2YXIgZCBpbiBSKWlmKFIuaGFzT3duUHJvcGVydHkoZCkmJmI9PT1hLmZbUltkXV0mJmM9PT1hLmZbUltkXV0pcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gVShhKXt2YXIgYj1hLmcuYS5vZmZzZXRXaWR0aCxjPWEuaC5hLm9mZnNldFdpZHRoLGQ7KGQ9Yj09PWEuZi5zZXJpZiYmYz09PWEuZltcInNhbnMtc2VyaWZcIl0pfHwoZD1UKCkmJmxhKGEsYixjKSk7ZD9xKCktYS5BPj1hLnc/VCgpJiZsYShhLGIsYykmJihudWxsPT09YS51fHxhLnUuaGFzT3duUHJvcGVydHkoYS5hLmMpKT9WKGEsYS52KTpWKGEsYS5CKTptYShhKTpWKGEsYS52KX1mdW5jdGlvbiBtYShhKXtzZXRUaW1lb3V0KHAoZnVuY3Rpb24oKXtVKHRoaXMpfSxhKSw1MCl9ZnVuY3Rpb24gVihhLGIpe3NldFRpbWVvdXQocChmdW5jdGlvbigpe3YodGhpcy5nLmEpO3YodGhpcy5oLmEpO3YodGhpcy5qLmEpO3YodGhpcy5tLmEpO2IodGhpcy5hKX0sYSksMCl9O2Z1bmN0aW9uIFcoYSxiLGMpe3RoaXMuYz1hO3RoaXMuYT1iO3RoaXMuZj0wO3RoaXMubT10aGlzLmo9ITE7dGhpcy5zPWN9dmFyIFg9bnVsbDtXLnByb3RvdHlwZS5nPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYTtiLmcmJncoYi5mLFtiLmEuYyhcIndmXCIsYS5jLEooYSkudG9TdHJpbmcoKSxcImFjdGl2ZVwiKV0sW2IuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwibG9hZGluZ1wiKSxiLmEuYyhcIndmXCIsYS5jLEooYSkudG9TdHJpbmcoKSxcImluYWN0aXZlXCIpXSk7SyhiLFwiZm9udGFjdGl2ZVwiLGEpO3RoaXMubT0hMDtuYSh0aGlzKX07XG5XLnByb3RvdHlwZS5oPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYTtpZihiLmcpe3ZhciBjPXkoYi5mLGIuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwiYWN0aXZlXCIpKSxkPVtdLGU9W2IuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwibG9hZGluZ1wiKV07Y3x8ZC5wdXNoKGIuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwiaW5hY3RpdmVcIikpO3coYi5mLGQsZSl9SyhiLFwiZm9udGluYWN0aXZlXCIsYSk7bmEodGhpcyl9O2Z1bmN0aW9uIG5hKGEpezA9PS0tYS5mJiZhLmomJihhLm0/KGE9YS5hLGEuZyYmdyhhLmYsW2EuYS5jKFwid2ZcIixcImFjdGl2ZVwiKV0sW2EuYS5jKFwid2ZcIixcImxvYWRpbmdcIiksYS5hLmMoXCJ3ZlwiLFwiaW5hY3RpdmVcIildKSxLKGEsXCJhY3RpdmVcIikpOkwoYS5hKSl9O2Z1bmN0aW9uIG9hKGEpe3RoaXMuaj1hO3RoaXMuYT1uZXcgamE7dGhpcy5oPTA7dGhpcy5mPXRoaXMuZz0hMH1vYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt0aGlzLmM9bmV3IGNhKHRoaXMuaixhLmNvbnRleHR8fHRoaXMuaik7dGhpcy5nPSExIT09YS5ldmVudHM7dGhpcy5mPSExIT09YS5jbGFzc2VzO3BhKHRoaXMsbmV3IGhhKHRoaXMuYyxhKSxhKX07XG5mdW5jdGlvbiBxYShhLGIsYyxkLGUpe3ZhciBmPTA9PS0tYS5oOyhhLmZ8fGEuZykmJnNldFRpbWVvdXQoZnVuY3Rpb24oKXt2YXIgYT1lfHxudWxsLG09ZHx8bnVsbHx8e307aWYoMD09PWMubGVuZ3RoJiZmKUwoYi5hKTtlbHNle2IuZis9Yy5sZW5ndGg7ZiYmKGIuaj1mKTt2YXIgaCxsPVtdO2ZvcihoPTA7aDxjLmxlbmd0aDtoKyspe3ZhciBrPWNbaF0sbj1tW2suY10scj1iLmEseD1rO3IuZyYmdyhyLmYsW3IuYS5jKFwid2ZcIix4LmMsSih4KS50b1N0cmluZygpLFwibG9hZGluZ1wiKV0pO0socixcImZvbnRsb2FkaW5nXCIseCk7cj1udWxsO2lmKG51bGw9PT1YKWlmKHdpbmRvdy5Gb250RmFjZSl7dmFyIHg9L0dlY2tvLipGaXJlZm94XFwvKFxcZCspLy5leGVjKHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50KSx4YT0vT1MgWC4qVmVyc2lvblxcLzEwXFwuLipTYWZhcmkvLmV4ZWMod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpJiYvQXBwbGUvLmV4ZWMod2luZG93Lm5hdmlnYXRvci52ZW5kb3IpO1xuWD14PzQyPHBhcnNlSW50KHhbMV0sMTApOnhhPyExOiEwfWVsc2UgWD0hMTtYP3I9bmV3IFAocChiLmcsYikscChiLmgsYiksYi5jLGssYi5zLG4pOnI9bmV3IFEocChiLmcsYikscChiLmgsYiksYi5jLGssYi5zLGEsbik7bC5wdXNoKHIpfWZvcihoPTA7aDxsLmxlbmd0aDtoKyspbFtoXS5zdGFydCgpfX0sMCl9ZnVuY3Rpb24gcGEoYSxiLGMpe3ZhciBkPVtdLGU9Yy50aW1lb3V0O2lhKGIpO3ZhciBkPWthKGEuYSxjLGEuYyksZj1uZXcgVyhhLmMsYixlKTthLmg9ZC5sZW5ndGg7Yj0wO2ZvcihjPWQubGVuZ3RoO2I8YztiKyspZFtiXS5sb2FkKGZ1bmN0aW9uKGIsZCxjKXtxYShhLGYsYixkLGMpfSl9O2Z1bmN0aW9uIHJhKGEsYil7dGhpcy5jPWE7dGhpcy5hPWJ9XG5yYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7aWYoZltcIl9fbXRpX2ZudExzdFwiK2RdKXt2YXIgYz1mW1wiX19tdGlfZm50THN0XCIrZF0oKSxlPVtdLGg7aWYoYylmb3IodmFyIGw9MDtsPGMubGVuZ3RoO2wrKyl7dmFyIGs9Y1tsXS5mb250ZmFtaWx5O3ZvaWQgMCE9Y1tsXS5mb250U3R5bGUmJnZvaWQgMCE9Y1tsXS5mb250V2VpZ2h0PyhoPWNbbF0uZm9udFN0eWxlK2NbbF0uZm9udFdlaWdodCxlLnB1c2gobmV3IEcoayxoKSkpOmUucHVzaChuZXcgRyhrKSl9YShlKX1lbHNlIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtiKCl9LDUwKX12YXIgYz10aGlzLGQ9Yy5hLnByb2plY3RJZCxlPWMuYS52ZXJzaW9uO2lmKGQpe3ZhciBmPWMuYy5vO0EodGhpcy5jLChjLmEuYXBpfHxcImh0dHBzOi8vZmFzdC5mb250cy5uZXQvanNhcGlcIikrXCIvXCIrZCtcIi5qc1wiKyhlP1wiP3Y9XCIrZTpcIlwiKSxmdW5jdGlvbihlKXtlP2EoW10pOihmW1wiX19Nb25vdHlwZUNvbmZpZ3VyYXRpb25fX1wiK1xuZF09ZnVuY3Rpb24oKXtyZXR1cm4gYy5hfSxiKCkpfSkuaWQ9XCJfX01vbm90eXBlQVBJU2NyaXB0X19cIitkfWVsc2UgYShbXSl9O2Z1bmN0aW9uIHNhKGEsYil7dGhpcy5jPWE7dGhpcy5hPWJ9c2EucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkPXRoaXMuYS51cmxzfHxbXSxlPXRoaXMuYS5mYW1pbGllc3x8W10sZj10aGlzLmEudGVzdFN0cmluZ3N8fHt9LGc9bmV3IEI7Yj0wO2ZvcihjPWQubGVuZ3RoO2I8YztiKyspeih0aGlzLmMsZFtiXSxDKGcpKTt2YXIgbT1bXTtiPTA7Zm9yKGM9ZS5sZW5ndGg7YjxjO2IrKylpZihkPWVbYl0uc3BsaXQoXCI6XCIpLGRbMV0pZm9yKHZhciBoPWRbMV0uc3BsaXQoXCIsXCIpLGw9MDtsPGgubGVuZ3RoO2wrPTEpbS5wdXNoKG5ldyBHKGRbMF0saFtsXSkpO2Vsc2UgbS5wdXNoKG5ldyBHKGRbMF0pKTtFKGcsZnVuY3Rpb24oKXthKG0sZil9KX07ZnVuY3Rpb24gdGEoYSxiKXthP3RoaXMuYz1hOnRoaXMuYz11YTt0aGlzLmE9W107dGhpcy5mPVtdO3RoaXMuZz1ifHxcIlwifXZhciB1YT1cImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzXCI7ZnVuY3Rpb24gdmEoYSxiKXtmb3IodmFyIGM9Yi5sZW5ndGgsZD0wO2Q8YztkKyspe3ZhciBlPWJbZF0uc3BsaXQoXCI6XCIpOzM9PWUubGVuZ3RoJiZhLmYucHVzaChlLnBvcCgpKTt2YXIgZj1cIlwiOzI9PWUubGVuZ3RoJiZcIlwiIT1lWzFdJiYoZj1cIjpcIik7YS5hLnB1c2goZS5qb2luKGYpKX19XG5mdW5jdGlvbiB3YShhKXtpZigwPT1hLmEubGVuZ3RoKXRocm93IEVycm9yKFwiTm8gZm9udHMgdG8gbG9hZCFcIik7aWYoLTEhPWEuYy5pbmRleE9mKFwia2l0PVwiKSlyZXR1cm4gYS5jO2Zvcih2YXIgYj1hLmEubGVuZ3RoLGM9W10sZD0wO2Q8YjtkKyspYy5wdXNoKGEuYVtkXS5yZXBsYWNlKC8gL2csXCIrXCIpKTtiPWEuYytcIj9mYW1pbHk9XCIrYy5qb2luKFwiJTdDXCIpOzA8YS5mLmxlbmd0aCYmKGIrPVwiJnN1YnNldD1cIithLmYuam9pbihcIixcIikpOzA8YS5nLmxlbmd0aCYmKGIrPVwiJnRleHQ9XCIrZW5jb2RlVVJJQ29tcG9uZW50KGEuZykpO3JldHVybiBifTtmdW5jdGlvbiB5YShhKXt0aGlzLmY9YTt0aGlzLmE9W107dGhpcy5jPXt9fVxudmFyIHphPXtsYXRpbjpcIkJFU2Jzd3lcIixcImxhdGluLWV4dFwiOlwiXFx1MDBlN1xcdTAwZjZcXHUwMGZjXFx1MDExZlxcdTAxNWZcIixjeXJpbGxpYzpcIlxcdTA0MzlcXHUwNDRmXFx1MDQxNlwiLGdyZWVrOlwiXFx1MDNiMVxcdTAzYjJcXHUwM2EzXCIsa2htZXI6XCJcXHUxNzgwXFx1MTc4MVxcdTE3ODJcIixIYW51bWFuOlwiXFx1MTc4MFxcdTE3ODFcXHUxNzgyXCJ9LEFhPXt0aGluOlwiMVwiLGV4dHJhbGlnaHQ6XCIyXCIsXCJleHRyYS1saWdodFwiOlwiMlwiLHVsdHJhbGlnaHQ6XCIyXCIsXCJ1bHRyYS1saWdodFwiOlwiMlwiLGxpZ2h0OlwiM1wiLHJlZ3VsYXI6XCI0XCIsYm9vazpcIjRcIixtZWRpdW06XCI1XCIsXCJzZW1pLWJvbGRcIjpcIjZcIixzZW1pYm9sZDpcIjZcIixcImRlbWktYm9sZFwiOlwiNlwiLGRlbWlib2xkOlwiNlwiLGJvbGQ6XCI3XCIsXCJleHRyYS1ib2xkXCI6XCI4XCIsZXh0cmFib2xkOlwiOFwiLFwidWx0cmEtYm9sZFwiOlwiOFwiLHVsdHJhYm9sZDpcIjhcIixibGFjazpcIjlcIixoZWF2eTpcIjlcIixsOlwiM1wiLHI6XCI0XCIsYjpcIjdcIn0sQmE9e2k6XCJpXCIsaXRhbGljOlwiaVwiLG46XCJuXCIsbm9ybWFsOlwiblwifSxcbkNhPS9eKHRoaW58KD86KD86ZXh0cmF8dWx0cmEpLT8pP2xpZ2h0fHJlZ3VsYXJ8Ym9va3xtZWRpdW18KD86KD86c2VtaXxkZW1pfGV4dHJhfHVsdHJhKS0/KT9ib2xkfGJsYWNrfGhlYXZ5fGx8cnxifFsxLTldMDApPyhufGl8bm9ybWFsfGl0YWxpYyk/JC87XG5mdW5jdGlvbiBEYShhKXtmb3IodmFyIGI9YS5mLmxlbmd0aCxjPTA7YzxiO2MrKyl7dmFyIGQ9YS5mW2NdLnNwbGl0KFwiOlwiKSxlPWRbMF0ucmVwbGFjZSgvXFwrL2csXCIgXCIpLGY9W1wibjRcIl07aWYoMjw9ZC5sZW5ndGgpe3ZhciBnO3ZhciBtPWRbMV07Zz1bXTtpZihtKWZvcih2YXIgbT1tLnNwbGl0KFwiLFwiKSxoPW0ubGVuZ3RoLGw9MDtsPGg7bCsrKXt2YXIgaztrPW1bbF07aWYoay5tYXRjaCgvXltcXHctXSskLykpe3ZhciBuPUNhLmV4ZWMoay50b0xvd2VyQ2FzZSgpKTtpZihudWxsPT1uKWs9XCJcIjtlbHNle2s9blsyXTtrPW51bGw9PWt8fFwiXCI9PWs/XCJuXCI6QmFba107bj1uWzFdO2lmKG51bGw9PW58fFwiXCI9PW4pbj1cIjRcIjtlbHNlIHZhciByPUFhW25dLG49cj9yOmlzTmFOKG4pP1wiNFwiOm4uc3Vic3RyKDAsMSk7az1bayxuXS5qb2luKFwiXCIpfX1lbHNlIGs9XCJcIjtrJiZnLnB1c2goayl9MDxnLmxlbmd0aCYmKGY9Zyk7Mz09ZC5sZW5ndGgmJihkPWRbMl0sZz1bXSxkPWQ/ZC5zcGxpdChcIixcIik6XG5nLDA8ZC5sZW5ndGgmJihkPXphW2RbMF1dKSYmKGEuY1tlXT1kKSl9YS5jW2VdfHwoZD16YVtlXSkmJihhLmNbZV09ZCk7Zm9yKGQ9MDtkPGYubGVuZ3RoO2QrPTEpYS5hLnB1c2gobmV3IEcoZSxmW2RdKSl9fTtmdW5jdGlvbiBFYShhLGIpe3RoaXMuYz1hO3RoaXMuYT1ifXZhciBGYT17QXJpbW86ITAsQ291c2luZTohMCxUaW5vczohMH07RWEucHJvdG90eXBlLmxvYWQ9ZnVuY3Rpb24oYSl7dmFyIGI9bmV3IEIsYz10aGlzLmMsZD1uZXcgdGEodGhpcy5hLmFwaSx0aGlzLmEudGV4dCksZT10aGlzLmEuZmFtaWxpZXM7dmEoZCxlKTt2YXIgZj1uZXcgeWEoZSk7RGEoZik7eihjLHdhKGQpLEMoYikpO0UoYixmdW5jdGlvbigpe2EoZi5hLGYuYyxGYSl9KX07ZnVuY3Rpb24gR2EoYSxiKXt0aGlzLmM9YTt0aGlzLmE9Yn1HYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmEuaWQsYz10aGlzLmMubztiP0EodGhpcy5jLCh0aGlzLmEuYXBpfHxcImh0dHBzOi8vdXNlLnR5cGVraXQubmV0XCIpK1wiL1wiK2IrXCIuanNcIixmdW5jdGlvbihiKXtpZihiKWEoW10pO2Vsc2UgaWYoYy5UeXBla2l0JiZjLlR5cGVraXQuY29uZmlnJiZjLlR5cGVraXQuY29uZmlnLmZuKXtiPWMuVHlwZWtpdC5jb25maWcuZm47Zm9yKHZhciBlPVtdLGY9MDtmPGIubGVuZ3RoO2YrPTIpZm9yKHZhciBnPWJbZl0sbT1iW2YrMV0saD0wO2g8bS5sZW5ndGg7aCsrKWUucHVzaChuZXcgRyhnLG1baF0pKTt0cnl7Yy5UeXBla2l0LmxvYWQoe2V2ZW50czohMSxjbGFzc2VzOiExLGFzeW5jOiEwfSl9Y2F0Y2gobCl7fWEoZSl9fSwyRTMpOmEoW10pfTtmdW5jdGlvbiBIYShhLGIpe3RoaXMuYz1hO3RoaXMuZj1iO3RoaXMuYT1bXX1IYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLmYuaWQsYz10aGlzLmMubyxkPXRoaXM7Yj8oYy5fX3dlYmZvbnRmb250ZGVja21vZHVsZV9ffHwoYy5fX3dlYmZvbnRmb250ZGVja21vZHVsZV9fPXt9KSxjLl9fd2ViZm9udGZvbnRkZWNrbW9kdWxlX19bYl09ZnVuY3Rpb24oYixjKXtmb3IodmFyIGc9MCxtPWMuZm9udHMubGVuZ3RoO2c8bTsrK2cpe3ZhciBoPWMuZm9udHNbZ107ZC5hLnB1c2gobmV3IEcoaC5uYW1lLGdhKFwiZm9udC13ZWlnaHQ6XCIraC53ZWlnaHQrXCI7Zm9udC1zdHlsZTpcIitoLnN0eWxlKSkpfWEoZC5hKX0sQSh0aGlzLmMsKHRoaXMuZi5hcGl8fFwiaHR0cHM6Ly9mLmZvbnRkZWNrLmNvbS9zL2Nzcy9qcy9cIikrZWEodGhpcy5jKStcIi9cIitiK1wiLmpzXCIsZnVuY3Rpb24oYil7YiYmYShbXSl9KSk6YShbXSl9O3ZhciBZPW5ldyBvYSh3aW5kb3cpO1kuYS5jLmN1c3RvbT1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgc2EoYixhKX07WS5hLmMuZm9udGRlY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEhhKGIsYSl9O1kuYS5jLm1vbm90eXBlPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyByYShiLGEpfTtZLmEuYy50eXBla2l0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBHYShiLGEpfTtZLmEuYy5nb29nbGU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEVhKGIsYSl9O3ZhciBaPXtsb2FkOnAoWS5sb2FkLFkpfTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShmdW5jdGlvbigpe3JldHVybiBafSk6XCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPVo6KHdpbmRvdy5XZWJGb250PVosd2luZG93LldlYkZvbnRDb25maWcmJlkubG9hZCh3aW5kb3cuV2ViRm9udENvbmZpZykpO30oKSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///82\n')},function(module,exports,__webpack_require__){eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// @ts-check\r\n\r\n/** @license MIT smoothscroll-anchor-polyfill 1.3.2 (c) 2020 Jonas Kuske */\r\n\r\nvar _DEBUG_ = true; // removed during minification\r\n\r\n(function(/** @type {any} */ root, factory) {\r\n  var isESModule = root && root.__sap_ES_MODULE__\r\n  // @ts-ignore\r\n  if (!isESModule && \"function\" === 'function' && __webpack_require__(151)) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  else if (!isESModule && typeof module === 'object' && module.exports) module.exports = factory();\r\n  else root.SmoothscrollAnchorPolyfill = factory();\r\n})(this, function() {\r\n  function SmoothscrollAnchorPolyfill() {\r\n    var instance = this, isBrowser = typeof window !== 'undefined';\r\n\r\n    if (isBrowser) {\r\n      /**\r\n       * Add flag to Window interface, workaround for type check\r\n       * @typedef {{__forceSmoothscrollAnchorPolyfill__: [boolean]}} GlobalFlag @deprecated\r\n       * @typedef {typeof globalThis & Window & GlobalFlag} WindowWithFlag\r\n       * @type {WindowWithFlag} */\r\n      var w = (window), d = document, docEl = d.documentElement, dummy = d.createElement('a');\r\n    }\r\n\r\n    /**\r\n     * Starts the polyfill by attaching the neccessary EventListeners\r\n     *\r\n     * Aborts, if ('scrollBehavior' in documentElement.style) and the force flag\r\n     * isn't set on the options parameter Object or globally on window\r\n     * @param {PolyfillOptions} [opts] Options for invoking the polyfill\r\n     * @returns {SmoothscrollAnchorPolyfill} Polyfill Instance, allows for chaining\r\n     *\r\n     * @typedef {Object} PolyfillOptions\r\n     * @prop {boolean} [force] Enable despite native support, overrides global flag\r\n     */\r\n    this.polyfill = function(opts) {\r\n      opts = opts || {};\r\n      if (isBrowser) {\r\n        /** @deprecated */\r\n        var globalFlag = w.__forceSmoothscrollAnchorPolyfill__;\r\n        var force = typeof opts.force === 'boolean' ? opts.force : globalFlag;\r\n\r\n        // Abort if smoothscroll has native support and force flag isn't set\r\n        if ('scrollBehavior' in dummy.style && !force) return instance;\r\n\r\n        instance.destroy(); // Remove previous listeners\r\n        d.addEventListener('click', handleClick, false);\r\n        d.addEventListener('scroll', trackScrollPositions);\r\n        w.addEventListener('hashchange', handleHashChange);\r\n      }\r\n      return instance;\r\n    };\r\n\r\n    /**\r\n     * Stops the polyfill by removing all EventListeners\r\n     * @returns {SmoothscrollAnchorPolyfill} Polyfill Instance, allows for chaining\r\n     * @param {DestroyOptions} [opts] Options for destroying the polyfill\r\n     *\r\n     * @typedef {Object} DestroyOptions\r\n     * @prop {HTMLAnchorElement} [_dummy] DON'T USE THIS. INTERNAL USE ONLY.\r\n     */\r\n    this.destroy = function(opts) {\r\n      opts = opts || {};\r\n      // For testing purposes only: support injection of external dummy element\r\n      // Allows controlling whether env is treated as env with native support\r\n      if (_DEBUG_ && opts._dummy) dummy = opts._dummy;\r\n\r\n      if (isBrowser) {\r\n        d.removeEventListener('click', handleClick, false);\r\n        d.removeEventListener('scroll', trackScrollPositions);\r\n        w.removeEventListener('hashchange', handleHashChange);\r\n      }\r\n      return instance;\r\n    };\r\n\r\n    if (!isBrowser) return;\r\n\r\n    // Check if browser supports focus without automatic scrolling (preventScroll)\r\n    var supportsPreventScroll = false;\r\n    try {\r\n      // Define getter for preventScroll to find out if the browser accesses it\r\n      var preppedFocusOption = Object.defineProperty({}, 'preventScroll', {\r\n        get: function() {\r\n          supportsPreventScroll = true;\r\n        }\r\n      });\r\n      // Trigger focus – if browser uses preventScroll the var will be set to true\r\n      dummy.focus(preppedFocusOption);\r\n    } catch (e) { }\r\n\r\n    // Regex to extract the value following the scroll-behavior property name\r\n    var extractValue = /scroll-behavior:[\\s]*([^;\"`'\\s]+)/;\r\n    var docElStyle = getComputedStyle(docEl)\r\n\r\n    /**\r\n     * Returns true if scroll-behavior: smooth is set and not overwritten\r\n     * by a higher-specifity declaration, else returns false\r\n     */\r\n    function shouldSmoothscroll() {\r\n      // Values to check for set scroll-behavior in order of priority/specificity\r\n      var valuesToCheck = [\r\n        // Priority 1: behavior assigned to style property\r\n        // Allows toggling smoothscroll from JS (docEl.style.scrollBehavior = ...)\r\n        docEl.style.scrollBehavior,\r\n        // Priority 2: behavior specified inline in style attribute\r\n        (extractValue.exec(docEl.getAttribute('style')) || [])[1],\r\n        // Priority 3: custom property\r\n        // Behaves like regular CSS, e.g. allows using media queries\r\n        docElStyle.getPropertyValue('--scroll-behavior'),\r\n        // Priority 4: behavior specified in fontFamily\r\n        // Same use case as priority 3, but supports legacy browsers without CSS vars\r\n        (extractValue.exec(docElStyle.fontFamily) || [])[1]\r\n      ];\r\n\r\n      // Loop over values in specified order, return once a valid value is found\r\n      for (var i = 0; i < valuesToCheck.length; i++) {\r\n        var specifiedBehavior = getScrollBehavior(valuesToCheck[i]);\r\n        if (specifiedBehavior !== null) return specifiedBehavior;\r\n      }\r\n      // No value found? Return false, no set value = no smoothscroll :(\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * If a valid CSS property value for scroll-behavior is passed, returns\r\n     * whether it specifies smooth scroll behavior or not, else returns null\r\n     * @param {?string} value The value to check\r\n     * @returns {?boolean} The specified scroll behavior or null\r\n     */\r\n    function getScrollBehavior(value) {\r\n      var status = null;\r\n      value = value && value.trim();\r\n      if (/^smooth$/.test(value)) status = true;\r\n      if (/^(initial|inherit|auto|unset)$/.test(value)) status = false;\r\n      return status;\r\n    }\r\n\r\n    /**\r\n     * Get the target element of an event\r\n     * @param {Event} evt\r\n     * @returns {HTMLElement}\r\n     */\r\n    function getEventTarget(evt) {\r\n      evt = evt || w.event;\r\n      return /** @type {HTMLElement} */ (evt.target || evt.srcElement);\r\n    }\r\n\r\n    /**\r\n     * Check if an element is an anchor pointing to a target on the current page\r\n     * @param {HTMLAnchorElement} el\r\n     * @returns {boolean}\r\n     */\r\n    function isAnchorToLocalElement(el) {\r\n      // False if element isn't \"a\" or href has no #fragment\r\n      if (!/^a$/i.test(el.tagName) || !/#/.test(el.href)) return false;\r\n\r\n      // Fix bug in IE9 where anchor.pathname misses leading slash\r\n      var anchorPath = el.pathname;\r\n      if (anchorPath[0] !== '/') anchorPath = '/' + anchorPath;\r\n\r\n      // False if target isn't current page\r\n      if (el.hostname !== location.hostname || anchorPath !== location.pathname) return false;\r\n\r\n      // False if anchor targets a ?query that is different from the current one\r\n      // e.g. /?page=1 → /?page=2#content\r\n      if (el.search && el.search !== location.search) return false;\r\n\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Focuses an element, if it's not focused after the first try,\r\n     * allow focusing by adjusting tabIndex and retry\r\n     * @param {HTMLElement} el\r\n     */\r\n    function focusElement(el) {\r\n      el.focus({ preventScroll: true });\r\n      if (d.activeElement !== el) {\r\n        var prevTabIndex = el.getAttribute('tabindex');\r\n        el.setAttribute('tabindex', '-1');\r\n\r\n        if (getComputedStyle(el).outlineStyle === 'none') {\r\n          var prevOutline = el.style.outlineStyle;\r\n          el.style.outlineStyle = 'none';\r\n          el.addEventListener('blur', function undoOutlineChange() {\r\n            el.style.outlineStyle = prevOutline;\r\n            el.setAttribute('tabindex', prevTabIndex);\r\n            el.removeEventListener('blur', undoOutlineChange);\r\n          })\r\n        }\r\n\r\n        el.focus({ preventScroll: true });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Returns the element whose id matches the hash or\r\n     * document.body if the hash is \"#top\" or \"\" (empty string)\r\n     * @param {string} hash\r\n     */\r\n    function getScrollTarget(hash) {\r\n      if (typeof hash !== 'string') return null;\r\n      hash = decodeHash(hash);\r\n\r\n      // Retrieve target if an id is specified in the hash, otherwise use body.\r\n      // If hash is \"#top\" and no target with id \"top\" was found, also use body\r\n      // See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href\r\n      var target = hash ? d.getElementById(hash.slice(1)) : d.body;\r\n      if (hash === '#top' && !target) target = d.body;\r\n      return target;\r\n    }\r\n\r\n    /**\r\n     * Takes a URL-encoded hash and returns the decoded version.\r\n     * @param {string} hash Hash to decode\r\n     */\r\n    function decodeHash(hash) {\r\n      try {\r\n        // \"#%F0%9F%91%8D%F0%9F%8F%BB\" -> \"#👍🏻\"\r\n        hash = decodeURIComponent(hash);\r\n      } catch (e) { /* */ }\r\n      return hash;\r\n    }\r\n\r\n    /**\r\n     * Walks up the DOM starting from \"element\" until an element satisfies \"validate()\"\r\n     * @param {HTMLElement} element The element from where to start validating\r\n     * @param {function} validate Validation function, receives current element as arg\r\n     * @returns {?HTMLElement} The found element or null\r\n     */\r\n    function findInParents(element, validate) {\r\n      if (validate(element)) return element;\r\n      if (element.parentElement) return findInParents(element.parentElement, validate);\r\n      return null;\r\n    }\r\n\r\n    // Stores the setTimeout id of pending focus changes, allows aborting them\r\n    var pendingFocusChange;\r\n\r\n    /**\r\n     * Scrolls to a given element or to the top if the given element\r\n     * is document.body, then focuses the element\r\n     * @param {HTMLElement} target\r\n     */\r\n    function triggerSmoothscroll(target) {\r\n      // Clear potential pending focus change triggered by a previous scroll\r\n      if (!supportsPreventScroll) clearTimeout(pendingFocusChange);\r\n\r\n      // Use JS scroll APIs to scroll to top (if target is body) or to the element\r\n      // This allows polyfills for these APIs to do their smooth scrolling magic\r\n      var scrollTop = target === d.body;\r\n      if (scrollTop) w.scroll({ top: 0, left: 0, behavior: 'smooth' });\r\n      else target.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n\r\n      // If the browser supports preventScroll: immediately focus the target\r\n      // Otherwise schedule the focus so the smoothscroll isn't interrupted\r\n      if (supportsPreventScroll) focusElement(target);\r\n      else pendingFocusChange = setTimeout(focusElement.bind(null, target), 450);\r\n    }\r\n\r\n    /**\r\n     * Check if the clicked target is an anchor pointing to a local element,\r\n     * if so prevent the default behavior and handle the scrolling using the\r\n     * native JavaScript scroll APIs so smoothscroll polyfills apply\r\n     * @param {MouseEvent} evt\r\n     */\r\n    function handleClick(evt) {\r\n      var notPrimaryClick = evt.metaKey || evt.ctrlKey || evt.shiftKey || evt.button !== 0;\r\n      if (evt.defaultPrevented || notPrimaryClick) return;\r\n\r\n      // scroll-behavior not set to smooth? Bail out, let browser handle it\r\n      if (!shouldSmoothscroll()) return;\r\n\r\n      // Check the DOM from the click target upwards if a local anchor was clicked\r\n      var anchor = /** @type {?HTMLAnchorElement} */ (\r\n        findInParents(getEventTarget(evt), isAnchorToLocalElement)\r\n      );\r\n      if (!anchor) return;\r\n\r\n      // Find the element targeted by the hash\r\n      var hash = anchor.hash;\r\n      var target = getScrollTarget(hash);\r\n\r\n      if (target) {\r\n        // Prevent default browser behavior to avoid a jump to the anchor target\r\n        evt.preventDefault();\r\n\r\n        // Trigger the smooth scroll\r\n        triggerSmoothscroll(target);\r\n\r\n        // Append the hash to the URL\r\n        if (history.pushState) history.pushState(null, d.title, (hash || '#'));\r\n      }\r\n    }\r\n\r\n    // To enable smooth scrolling on hashchange, we need to immediately restore\r\n    // the scroll pos after a hashchange changed it, so we track it constantly.\r\n    // Some browsers don't trigger a scroll event before the hashchange,\r\n    // so to undo, the position from last scroll is the one we need to go back to.\r\n    // In others (e.g. IE) the scroll listener is triggered again before the\r\n    // hashchange occurs and the last reported position is already the new one\r\n    // updated by the hashchange – we need the second last to undo there.\r\n    // Because of this we don't track just the last, but the last two positions.\r\n    var lastTwoScrollPos = [];\r\n\r\n    /**\r\n      * Tries to undo the automatic, instant scroll caused by a hashchange\r\n      * and instead scrolls smoothly to the new hash target\r\n      */\r\n    function handleHashChange() {\r\n      // scroll-behavior not set to smooth or body not parsed yet? Abort\r\n      if (!d.body || !shouldSmoothscroll()) return;\r\n\r\n      var target = getScrollTarget(location.hash);\r\n      if (!target) return;\r\n\r\n      // If the position last reported by the scroll listener is the same as the\r\n      // current one caused by a hashchange, go back to second last – else last\r\n      var currentPos = getScrollTop();\r\n      var top = lastTwoScrollPos[lastTwoScrollPos[1] === currentPos ? 0 : 1];\r\n\r\n      // @ts-ignore\r\n      // Undo the scroll caused by the hashchange...\r\n      // Using {behavior: 'instant'} even though it's not in the spec anymore as\r\n      // Blink & Gecko support it – once an engine with native support doesn't,\r\n      // we need to disable scroll-behavior during scroll reset, then restore\r\n      w.scroll({ top: top, behavior: 'instant' });\r\n      // ...and instead smoothscroll to the target\r\n      triggerSmoothscroll(target);\r\n    }\r\n\r\n    /**\r\n     * Returns the scroll offset towards the top\r\n     */\r\n    function getScrollTop() {\r\n      return docEl.scrollTop || d.body.scrollTop;\r\n    }\r\n\r\n    /**\r\n     * Update the last two scroll positions\r\n     */\r\n    function trackScrollPositions() {\r\n      if (!d.body) return; // Body not parsed yet? Abort\r\n      lastTwoScrollPos[0] = lastTwoScrollPos[1];\r\n      lastTwoScrollPos[1] = getScrollTop();\r\n    }\r\n  }\r\n\r\n  return new SmoothscrollAnchorPolyfill().polyfill();\r\n});\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar classof = __webpack_require__(99);\nvar builtinExec = RegExp.prototype.exec;\n\n // `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw new TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n  if (classof(R) !== 'RegExp') {\n    throw new TypeError('RegExp#exec called on incompatible receiver');\n  }\n  return builtinExec.call(R, S);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy1hYnN0cmFjdC5qcz81ZjFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgYnVpbHRpbkV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG5cbiAvLyBgUmVnRXhwRXhlY2AgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHBleGVjXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChSLCBTKSB7XG4gIHZhciBleGVjID0gUi5leGVjO1xuICBpZiAodHlwZW9mIGV4ZWMgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgcmVzdWx0ID0gZXhlYy5jYWxsKFIsIFMpO1xuICAgIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAnb2JqZWN0Jykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwIGV4ZWMgbWV0aG9kIHJldHVybmVkIHNvbWV0aGluZyBvdGhlciB0aGFuIGFuIE9iamVjdCBvciBudWxsJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgaWYgKGNsYXNzb2YoUikgIT09ICdSZWdFeHAnKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignUmVnRXhwI2V4ZWMgY2FsbGVkIG9uIGluY29tcGF0aWJsZSByZWNlaXZlcicpO1xuICB9XG4gIHJldHVybiBidWlsdGluRXhlYy5jYWxsKFIsIFMpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///84\n")},function(module,exports,__webpack_require__){"use strict";eval("\n__webpack_require__(152);\nvar redefine = __webpack_require__(34);\nvar hide = __webpack_require__(27);\nvar fails = __webpack_require__(26);\nvar defined = __webpack_require__(57);\nvar wks = __webpack_require__(9);\nvar regexpExec = __webpack_require__(105);\n\nvar SPECIES = wks('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {\n  // Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length === 2 && result[0] === 'a' && result[1] === 'b';\n})();\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n    re.exec = function () { execCalled = true; return null; };\n    if (KEY === 'split') {\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n    }\n    re[SYMBOL]('');\n    return !execCalled;\n  }) : undefined;\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var fns = exec(\n      defined,\n      SYMBOL,\n      ''[KEY],\n      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {\n        if (regexp.exec === regexpExec) {\n          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n            // The native String method already delegates to @@method (this\n            // polyfilled function), leasing to infinite recursion.\n            // We avoid it by directly calling the native @@method method.\n            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n          }\n          return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n        }\n        return { done: false };\n      }\n    );\n    var strfn = fns[0];\n    var rxfn = fns[1];\n\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzPzIxNGYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmV4ZWMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcblxudmFyIFNQRUNJRVMgPSB3a3MoJ3NwZWNpZXMnKTtcblxudmFyIFJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gI3JlcGxhY2UgbmVlZHMgYnVpbHQtaW4gc3VwcG9ydCBmb3IgbmFtZWQgZ3JvdXBzLlxuICAvLyAjbWF0Y2ggd29ya3MgZmluZSBiZWNhdXNlIGl0IGp1c3QgcmV0dXJuIHRoZSBleGVjIHJlc3VsdHMsIGV2ZW4gaWYgaXQgaGFzXG4gIC8vIGEgXCJncm9wc1wiIHByb3BlcnR5LlxuICB2YXIgcmUgPSAvLi87XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHJlc3VsdC5ncm91cHMgPSB7IGE6ICc3JyB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7XG59KTtcblxudmFyIFNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQyA9IChmdW5jdGlvbiAoKSB7XG4gIC8vIENocm9tZSA1MSBoYXMgYSBidWdneSBcInNwbGl0XCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlY1xuICB2YXIgcmUgPSAvKD86KS87XG4gIHZhciBvcmlnaW5hbEV4ZWMgPSByZS5leGVjO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG4gIHZhciByZXN1bHQgPSAnYWInLnNwbGl0KHJlKTtcbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IDIgJiYgcmVzdWx0WzBdID09PSAnYScgJiYgcmVzdWx0WzFdID09PSAnYic7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGxlbmd0aCwgZXhlYykge1xuICB2YXIgU1lNQk9MID0gd2tzKEtFWSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19TWU1CT0wgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHNcbiAgICB2YXIgTyA9IHt9O1xuICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCA/ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3ltYm9sLW5hbWVkIFJlZ0V4cCBtZXRob2RzIGNhbGwgLmV4ZWNcbiAgICB2YXIgZXhlY0NhbGxlZCA9IGZhbHNlO1xuICAgIHZhciByZSA9IC9hLztcbiAgICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyBleGVjQ2FsbGVkID0gdHJ1ZTsgcmV0dXJuIG51bGw7IH07XG4gICAgaWYgKEtFWSA9PT0gJ3NwbGl0Jykge1xuICAgICAgLy8gUmVnRXhwW0BAc3BsaXRdIGRvZXNuJ3QgY2FsbCB0aGUgcmVnZXgncyBleGVjIG1ldGhvZCwgYnV0IGZpcnN0IGNyZWF0ZXNcbiAgICAgIC8vIGEgbmV3IG9uZS4gV2UgbmVlZCB0byByZXR1cm4gdGhlIHBhdGNoZWQgcmVnZXggd2hlbiBjcmVhdGluZyB0aGUgbmV3IG9uZS5cbiAgICAgIHJlLmNvbnN0cnVjdG9yID0ge307XG4gICAgICByZS5jb25zdHJ1Y3RvcltTUEVDSUVTXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlOyB9O1xuICAgIH1cbiAgICByZVtTWU1CT0xdKCcnKTtcbiAgICByZXR1cm4gIWV4ZWNDYWxsZWQ7XG4gIH0pIDogdW5kZWZpbmVkO1xuXG4gIGlmIChcbiAgICAhREVMRUdBVEVTX1RPX1NZTUJPTCB8fFxuICAgICFERUxFR0FURVNfVE9fRVhFQyB8fFxuICAgIChLRVkgPT09ICdyZXBsYWNlJyAmJiAhUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMpIHx8XG4gICAgKEtFWSA9PT0gJ3NwbGl0JyAmJiAhU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDKVxuICApIHtcbiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07XG4gICAgdmFyIGZucyA9IGV4ZWMoXG4gICAgICBkZWZpbmVkLFxuICAgICAgU1lNQk9MLFxuICAgICAgJydbS0VZXSxcbiAgICAgIGZ1bmN0aW9uIG1heWJlQ2FsbE5hdGl2ZShuYXRpdmVNZXRob2QsIHJlZ2V4cCwgc3RyLCBhcmcyLCBmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICBpZiAocmVnZXhwLmV4ZWMgPT09IHJlZ2V4cEV4ZWMpIHtcbiAgICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgICAgIC8vIFRoZSBuYXRpdmUgU3RyaW5nIG1ldGhvZCBhbHJlYWR5IGRlbGVnYXRlcyB0byBAQG1ldGhvZCAodGhpc1xuICAgICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICAgICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC5cbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVSZWdFeHBNZXRob2QuY2FsbChyZWdleHAsIHN0ciwgYXJnMikgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZU1ldGhvZC5jYWxsKHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRvbmU6IGZhbHNlIH07XG4gICAgICB9XG4gICAgKTtcbiAgICB2YXIgc3RyZm4gPSBmbnNbMF07XG4gICAgdmFyIHJ4Zm4gPSBmbnNbMV07XG5cbiAgICByZWRlZmluZShTdHJpbmcucHJvdG90eXBlLCBLRVksIHN0cmZuKTtcbiAgICBoaWRlKFJlZ0V4cC5wcm90b3R5cGUsIFNZTUJPTCwgbGVuZ3RoID09IDJcbiAgICAgIC8vIDIxLjIuNS44IFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXShzdHJpbmcsIHJlcGxhY2VWYWx1ZSlcbiAgICAgIC8vIDIxLjIuNS4xMSBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdKHN0cmluZywgbGltaXQpXG4gICAgICA/IGZ1bmN0aW9uIChzdHJpbmcsIGFyZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfVxuICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpXG4gICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpXG4gICAgICA6IGZ1bmN0aW9uIChzdHJpbmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMpOyB9XG4gICAgKTtcbiAgfVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///85\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbWJ1cmdlci1jc3Mvc3JjL3Njc3MvbWJ1cmdlci5zY3NzPzE2NWYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///86\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2NvcmUvb25jYW52YXMvbW1lbnUub25jYW52YXMuc2Nzcz9lMzg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///87\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2NvcmUvb2ZmY2FudmFzL21tZW51Lm9mZmNhbnZhcy5zY3NzPzdhNTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///88\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2NvcmUvc2NyZWVucmVhZGVyL21tZW51LnNjcmVlbnJlYWRlci5zY3NzPzE0ZjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///89\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2V4dGVuc2lvbnMvZWZmZWN0cy9tbWVudS5lZmZlY3RzLnNjc3M/MDY4MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///90\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2V4dGVuc2lvbnMvcGFnZWRpbS9tbWVudS5wYWdlZGltLnNjc3M/MTMzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///91\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL2V4dGVuc2lvbnMvcG9zaXRpb25pbmcvbW1lbnUucG9zaXRpb25pbmcuc2Nzcz8zNjIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///92\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW1lbnUtanMvc3JjL3dyYXBwZXJzL2Jvb3RzdHJhcC9tbWVudS5ib290c3RyYXAuc2Nzcz9lZmMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///93\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/*!\n * css-vars-ponyfill\n * v2.0.2\n * https://jhildenbiddle.github.io/css-vars-ponyfill/\n * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for (var i = 1; i < arguments.length; i++) {\n            var source = arguments[i];\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\n\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n        return arr2;\n    }\n}\n\nfunction _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n    throw new TypeError("Invalid attempt to spread non-iterable instance");\n}\n\n/*!\n * get-css-data\n * v1.6.3\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */ function getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\n        return null;\n    });\n    function isValidCss() {\n        var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";\n        var isHTML = cssText.trim().charAt(0) === "<";\n        return !isHTML;\n    }\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? "" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    var parser = document.createElement("a");\n    urlArray.forEach(function(url, i) {\n        parser.setAttribute("href", url);\n        parser.href = String(parser.href);\n        var isIElte9 = Boolean(document.all && !window.atob);\n        var isIElte9CORS = isIElte9 && parser.host.split(":")[0] !== location.host.split(":")[0];\n        if (isIElte9CORS) {\n            var isSameProtocol = parser.protocol === location.protocol;\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest();\n                xdr.open("GET", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    if (isValidCss(xdr.responseText)) {\n                        onSuccess(xdr.responseText, i);\n                    } else {\n                        onError(xdr, i);\n                    }\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout(function() {\n                    xdr.send();\n                }, 0);\n            } else {\n                console.warn("Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (".concat(url, ")"));\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest();\n            xhr.open("GET", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n                        onSuccess(xhr.responseText, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    });\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {object}   [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet\'s runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet\'s text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement: document,\n *     include    : \'style,link[rel="stylesheet"]\',\n *     exclude    : \'[href="skip.css"]\',\n *     filter     : /red/,\n *     useCSSOM   : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:[\'"])([^\'"]*)(?:[\'"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        rootElement: options.rootElement || document,\n        include: options.include || \'style,link[rel="stylesheet"]\',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        useCSSOM: options.useCSSOM || false,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {\n        return !matchesSelector(node, settings.exclude);\n    });\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\n        return null;\n    });\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            var cssText = cssArray.join("");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal !== undefined && Boolean(returnVal) === false ? "" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach(function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                });\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = "";\n                }\n                handleComplete();\n            }\n        });\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, "").match(regex.cssImports) || []).filter(function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        });\n        importData.urls = importData.rules.map(function(rule) {\n            return rule.replace(regex.cssImports, "$1");\n        });\n        importData.absoluteUrls = importData.urls.map(function(url) {\n            return getFullUrl(url, baseUrl);\n        });\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        });\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? "" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach(function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    });\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach(function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    });\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach(function(node, i) {\n            var linkHref = node.getAttribute("href");\n            var linkRel = node.getAttribute("rel");\n            var isLink = node.nodeName === "LINK" && linkHref && linkRel && linkRel.toLowerCase() === "stylesheet";\n            var isStyle = node.nodeName === "STYLE";\n            if (isLink) {\n                getUrls(linkHref, {\n                    mimeType: "text/css",\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var sourceUrl = getFullUrl(linkHref, location.href);\n                        handleSuccess(cssText, i, node, sourceUrl);\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        cssArray[i] = "";\n                        settings.onError(xhr, node, url);\n                        handleComplete();\n                    }\n                });\n            } else if (isStyle) {\n                var cssText = node.textContent;\n                if (settings.useCSSOM) {\n                    cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {\n                        return rule.cssText;\n                    }).join("");\n                }\n                handleSuccess(cssText, i, node, location.href);\n            } else {\n                cssArray[i] = "";\n                handleComplete();\n            }\n        });\n    } else {\n        settings.onComplete("", []);\n    }\n}\n\nfunction getFullUrl(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument("");\n    var b = d.createElement("base");\n    var a = d.createElement("a");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nvar balancedMatch = balanced;\n\nfunction balanced(a, b, str) {\n    if (a instanceof RegExp) a = maybeMatch(a, str);\n    if (b instanceof RegExp) b = maybeMatch(b, str);\n    var r = range(a, b, str);\n    return r && {\n        start: r[0],\n        end: r[1],\n        pre: str.slice(0, r[0]),\n        body: str.slice(r[0] + a.length, r[1]),\n        post: str.slice(r[1] + b.length)\n    };\n}\n\nfunction maybeMatch(reg, str) {\n    var m = str.match(reg);\n    return m ? m[0] : null;\n}\n\nbalanced.range = range;\n\nfunction range(a, b, str) {\n    var begs, beg, left, right, result;\n    var ai = str.indexOf(a);\n    var bi = str.indexOf(b, ai + 1);\n    var i = ai;\n    if (ai >= 0 && bi > 0) {\n        begs = [];\n        left = str.length;\n        while (i >= 0 && !result) {\n            if (i == ai) {\n                begs.push(i);\n                ai = str.indexOf(a, i + 1);\n            } else if (begs.length == 1) {\n                result = [ begs.pop(), bi ];\n            } else {\n                beg = begs.pop();\n                if (beg < left) {\n                    left = beg;\n                    right = bi;\n                }\n                bi = str.indexOf(b, i + 1);\n            }\n            i = ai < bi && ai >= 0 ? ai : bi;\n        }\n        if (begs.length) {\n            result = [ left, right ];\n        }\n    }\n    return result;\n}\n\nfunction parseCss(css) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var defaults = {\n        preserveStatic: true,\n        removeComments: false\n    };\n    var settings = _extends({}, defaults, options);\n    var errors = [];\n    function error(msg) {\n        throw new Error("CSS parse error: ".concat(msg));\n    }\n    function match(re) {\n        var m = re.exec(css);\n        if (m) {\n            css = css.slice(m[0].length);\n            return m;\n        }\n    }\n    function open() {\n        return match(/^{\\s*/);\n    }\n    function close() {\n        return match(/^}/);\n    }\n    function whitespace() {\n        match(/^\\s*/);\n    }\n    function comment() {\n        whitespace();\n        if (css[0] !== "/" || css[1] !== "*") {\n            return;\n        }\n        var i = 2;\n        while (css[i] && (css[i] !== "*" || css[i + 1] !== "/")) {\n            i++;\n        }\n        if (!css[i]) {\n            return error("end of comment is missing");\n        }\n        var str = css.slice(2, i);\n        css = css.slice(i + 2);\n        return {\n            type: "comment",\n            comment: str\n        };\n    }\n    function comments() {\n        var cmnts = [];\n        var c;\n        while (c = comment()) {\n            cmnts.push(c);\n        }\n        return settings.removeComments ? [] : cmnts;\n    }\n    function selector() {\n        whitespace();\n        while (css[0] === "}") {\n            error("extra closing bracket");\n        }\n        var m = match(/^(("(?:\\\\"|[^"])*"|\'(?:\\\\\'|[^\'])*\'|[^{])+)/);\n        if (m) {\n            return m[0].trim().replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*\\/]|[\\r\\n])))*\\*\\/+/g, "").replace(/"(?:\\\\"|[^"])*"|\'(?:\\\\\'|[^\'])*\'/g, function(m) {\n                return m.replace(/,/g, "‌");\n            }).split(/\\s*(?![^(]*\\)),\\s*/).map(function(s) {\n                return s.replace(/\\u200C/g, ",");\n            });\n        }\n    }\n    function declaration() {\n        match(/^([;\\s]*)+/);\n        var comment_regexp = /\\/\\*[^*]*\\*+([^\\/*][^*]*\\*+)*\\//g;\n        var prop = match(/^(\\*?[-#\\/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!prop) {\n            return;\n        }\n        prop = prop[0].trim();\n        if (!match(/^:\\s*/)) {\n            return error("property missing \':\'");\n        }\n        var val = match(/^((?:\\/\\*.*?\\*\\/|\'(?:\\\\\'|.)*?\'|"(?:\\\\"|.)*?"|\\((\\s*\'(?:\\\\\'|.)*?\'|"(?:\\\\"|.)*?"|[^)]*?)\\s*\\)|[^};])+)/);\n        var ret = {\n            type: "declaration",\n            property: prop.replace(comment_regexp, ""),\n            value: val ? val[0].replace(comment_regexp, "").trim() : ""\n        };\n        match(/^[;\\s]*/);\n        return ret;\n    }\n    function declarations() {\n        if (!open()) {\n            return error("missing \'{\'");\n        }\n        var d;\n        var decls = comments();\n        while (d = declaration()) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n        if (!close()) {\n            return error("missing \'}\'");\n        }\n        return decls;\n    }\n    function keyframe() {\n        whitespace();\n        var vals = [];\n        var m;\n        while (m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/)) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n        if (vals.length) {\n            return {\n                type: "keyframe",\n                values: vals,\n                declarations: declarations()\n            };\n        }\n    }\n    function at_keyframes() {\n        var m = match(/^@([-\\w]+)?keyframes\\s*/);\n        if (!m) {\n            return;\n        }\n        var vendor = m[1];\n        m = match(/^([-\\w]+)\\s*/);\n        if (!m) {\n            return error("@keyframes missing name");\n        }\n        var name = m[1];\n        if (!open()) {\n            return error("@keyframes missing \'{\'");\n        }\n        var frame;\n        var frames = comments();\n        while (frame = keyframe()) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n        if (!close()) {\n            return error("@keyframes missing \'}\'");\n        }\n        return {\n            type: "keyframes",\n            name: name,\n            vendor: vendor,\n            keyframes: frames\n        };\n    }\n    function at_page() {\n        var m = match(/^@page */);\n        if (m) {\n            var sel = selector() || [];\n            return {\n                type: "page",\n                selectors: sel,\n                declarations: declarations()\n            };\n        }\n    }\n    function at_fontface() {\n        var m = match(/^@font-face\\s*/);\n        if (m) {\n            return {\n                type: "font-face",\n                declarations: declarations()\n            };\n        }\n    }\n    function at_supports() {\n        var m = match(/^@supports *([^{]+)/);\n        if (m) {\n            return {\n                type: "supports",\n                supports: m[1].trim(),\n                rules: rules()\n            };\n        }\n    }\n    function at_host() {\n        var m = match(/^@host\\s*/);\n        if (m) {\n            return {\n                type: "host",\n                rules: rules()\n            };\n        }\n    }\n    function at_media() {\n        var m = match(/^@media *([^{]+)/);\n        if (m) {\n            return {\n                type: "media",\n                media: m[1].trim(),\n                rules: rules()\n            };\n        }\n    }\n    function at_custom_m() {\n        var m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) {\n            return {\n                type: "custom-media",\n                name: m[1].trim(),\n                media: m[2].trim()\n            };\n        }\n    }\n    function at_document() {\n        var m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (m) {\n            return {\n                type: "document",\n                document: m[2].trim(),\n                vendor: m[1] ? m[1].trim() : null,\n                rules: rules()\n            };\n        }\n    }\n    function at_x() {\n        var m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) {\n            return {\n                type: m[1],\n                name: m[2].trim()\n            };\n        }\n    }\n    function at_rule() {\n        whitespace();\n        if (css[0] === "@") {\n            var ret = at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x();\n            if (ret && !settings.preserveStatic) {\n                var hasVarFunc = false;\n                if (ret.declarations) {\n                    hasVarFunc = ret.declarations.some(function(decl) {\n                        return /var\\(/.test(decl.value);\n                    });\n                } else {\n                    var arr = ret.keyframes || ret.rules || [];\n                    hasVarFunc = arr.some(function(obj) {\n                        return (obj.declarations || []).some(function(decl) {\n                            return /var\\(/.test(decl.value);\n                        });\n                    });\n                }\n                return hasVarFunc ? ret : {};\n            }\n            return ret;\n        }\n    }\n    function rule() {\n        if (!settings.preserveStatic) {\n            var balancedMatch$1 = balancedMatch("{", "}", css);\n            if (balancedMatch$1) {\n                var hasVarDecl = balancedMatch$1.pre.indexOf(":root") !== -1 && /--\\S*\\s*:/.test(balancedMatch$1.body);\n                var hasVarFunc = /var\\(/.test(balancedMatch$1.body);\n                if (!hasVarDecl && !hasVarFunc) {\n                    css = css.slice(balancedMatch$1.end + 1);\n                    return {};\n                }\n            }\n        }\n        var sel = selector() || [];\n        var decls = settings.preserveStatic ? declarations() : declarations().filter(function(decl) {\n            var hasVarDecl = sel.some(function(s) {\n                return s.indexOf(":root") !== -1;\n            }) && /^--\\S/.test(decl.property);\n            var hasVarFunc = /var\\(/.test(decl.value);\n            return hasVarDecl || hasVarFunc;\n        });\n        if (!sel.length) {\n            error("selector missing");\n        }\n        return {\n            type: "rule",\n            selectors: sel,\n            declarations: decls\n        };\n    }\n    function rules(core) {\n        if (!core && !open()) {\n            return error("missing \'{\'");\n        }\n        var node;\n        var rules = comments();\n        while (css.length && (core || css[0] !== "}") && (node = at_rule() || rule())) {\n            if (node.type) {\n                rules.push(node);\n            }\n            rules = rules.concat(comments());\n        }\n        if (!core && !close()) {\n            return error("missing \'}\'");\n        }\n        return rules;\n    }\n    return {\n        type: "stylesheet",\n        stylesheet: {\n            rules: rules(true),\n            errors: errors\n        }\n    };\n}\n\nfunction parseVars(cssData) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var defaults = {\n        store: {},\n        onWarning: function onWarning() {}\n    };\n    var settings = _extends({}, defaults, options);\n    if (typeof cssData === "string") {\n        cssData = parseCss(cssData, settings);\n    }\n    cssData.stylesheet.rules.forEach(function(rule) {\n        if (rule.type !== "rule") {\n            return;\n        }\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== ":root") {\n            return;\n        }\n        rule.declarations.forEach(function(decl, i) {\n            var prop = decl.property;\n            var value = decl.value;\n            if (prop && prop.indexOf("--") === 0) {\n                settings.store[prop] = value;\n            }\n        });\n    });\n    return settings.store;\n}\n\nfunction stringifyCss(tree) {\n    var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";\n    var cb = arguments.length > 2 ? arguments[2] : undefined;\n    var renderMethods = {\n        charset: function charset(node) {\n            return "@charset " + node.name + ";";\n        },\n        comment: function comment(node) {\n            return node.comment.indexOf("__CSSVARSPONYFILL") === 0 ? "/*" + node.comment + "*/" : "";\n        },\n        "custom-media": function customMedia(node) {\n            return "@custom-media " + node.name + " " + node.media + ";";\n        },\n        declaration: function declaration(node) {\n            return node.property + ":" + node.value + ";";\n        },\n        document: function document(node) {\n            return "@" + (node.vendor || "") + "document " + node.document + "{" + visit(node.rules) + "}";\n        },\n        "font-face": function fontFace(node) {\n            return "@font-face" + "{" + visit(node.declarations) + "}";\n        },\n        host: function host(node) {\n            return "@host" + "{" + visit(node.rules) + "}";\n        },\n        import: function _import(node) {\n            return "@import " + node.name + ";";\n        },\n        keyframe: function keyframe(node) {\n            return node.values.join(",") + "{" + visit(node.declarations) + "}";\n        },\n        keyframes: function keyframes(node) {\n            return "@" + (node.vendor || "") + "keyframes " + node.name + "{" + visit(node.keyframes) + "}";\n        },\n        media: function media(node) {\n            return "@media " + node.media + "{" + visit(node.rules) + "}";\n        },\n        namespace: function namespace(node) {\n            return "@namespace " + node.name + ";";\n        },\n        page: function page(node) {\n            return "@page " + (node.selectors.length ? node.selectors.join(", ") : "") + "{" + visit(node.declarations) + "}";\n        },\n        rule: function rule(node) {\n            var decls = node.declarations;\n            if (decls.length) {\n                return node.selectors.join(",") + "{" + visit(decls) + "}";\n            }\n        },\n        supports: function supports(node) {\n            return "@supports " + node.supports + "{" + visit(node.rules) + "}";\n        }\n    };\n    function visit(nodes) {\n        var buf = "";\n        for (var i = 0; i < nodes.length; i++) {\n            var n = nodes[i];\n            if (cb) {\n                cb(n);\n            }\n            var txt = renderMethods[n.type](n);\n            if (txt) {\n                buf += txt;\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n        return buf;\n    }\n    return visit(tree.stylesheet.rules);\n}\n\nfunction walkCss(node, fn) {\n    node.rules.forEach(function(rule) {\n        if (rule.rules) {\n            walkCss(rule, fn);\n            return;\n        }\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe) {\n                if (keyframe.type === "keyframe") {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n            return;\n        }\n        if (!rule.declarations) {\n            return;\n        }\n        fn(rule.declarations, node);\n    });\n}\n\nvar VAR_PROP_IDENTIFIER = "--";\n\nvar VAR_FUNC_IDENTIFIER = "var";\n\nfunction transformCss(cssData) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var defaults = {\n        preserveStatic: true,\n        preserveVars: false,\n        variables: {},\n        onWarning: function onWarning() {}\n    };\n    var settings = _extends({}, defaults, options);\n    if (typeof cssData === "string") {\n        cssData = parseCss(cssData, settings);\n    }\n    walkCss(cssData.stylesheet, function(declarations, node) {\n        for (var i = 0; i < declarations.length; i++) {\n            var decl = declarations[i];\n            var type = decl.type;\n            var prop = decl.property;\n            var value = decl.value;\n            if (type !== "declaration") {\n                continue;\n            }\n            if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                declarations.splice(i, 1);\n                i--;\n                continue;\n            }\n            if (value.indexOf(VAR_FUNC_IDENTIFIER + "(") !== -1) {\n                var resolvedValue = resolveValue(value, settings);\n                if (resolvedValue !== decl.value) {\n                    resolvedValue = fixNestedCalc(resolvedValue);\n                    if (!settings.preserveVars) {\n                        decl.value = resolvedValue;\n                    } else {\n                        declarations.splice(i, 0, {\n                            type: type,\n                            property: prop,\n                            value: resolvedValue\n                        });\n                        i++;\n                    }\n                }\n            }\n        }\n    });\n    return stringifyCss(cssData);\n}\n\nfunction fixNestedCalc(value) {\n    var reCalcVal = /calc\\(([^)]+)\\)/g;\n    (value.match(reCalcVal) || []).forEach(function(match) {\n        var newVal = "calc".concat(match.split("calc").join(""));\n        value = value.replace(match, newVal);\n    });\n    return value;\n}\n\nfunction resolveValue(value) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var __recursiveFallback = arguments.length > 2 ? arguments[2] : undefined;\n    if (value.indexOf("var(") === -1) {\n        return value;\n    }\n    var valueData = balancedMatch("(", ")", value);\n    function resolveFunc(value) {\n        var name = value.split(",")[0].replace(/[\\s\\n\\t]/g, "");\n        var fallback = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n        var match = settings.variables.hasOwnProperty(name) ? String(settings.variables[name]) : undefined;\n        var replacement = match || (fallback ? String(fallback) : undefined);\n        var unresolvedFallback = __recursiveFallback || value;\n        if (!match) {\n            settings.onWarning(\'variable "\'.concat(name, \'" is undefined\'));\n        }\n        if (replacement && replacement !== "undefined" && replacement.length > 0) {\n            return resolveValue(replacement, settings, unresolvedFallback);\n        } else {\n            return "var(".concat(unresolvedFallback, ")");\n        }\n    }\n    if (!valueData) {\n        if (value.indexOf("var(") !== -1) {\n            settings.onWarning(\'missing closing ")" in the value "\'.concat(value, \'"\'));\n        }\n        return value;\n    } else if (valueData.pre.slice(-3) === "var") {\n        var isEmptyVarFunc = valueData.body.trim().length === 0;\n        if (isEmptyVarFunc) {\n            settings.onWarning("var() must contain a non-whitespace string");\n            return value;\n        } else {\n            return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);\n        }\n    } else {\n        return valueData.pre + "(".concat(resolveValue(valueData.body, settings), ")") + resolveValue(valueData.post, settings);\n    }\n}\n\nvar isBrowser = typeof window !== "undefined";\n\nvar isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports("(--a: 0)");\n\nvar counters = {\n    group: 0,\n    job: 0\n};\n\nvar defaults = {\n    rootElement: isBrowser ? document : null,\n    shadowDOM: false,\n    include: "style,link[rel=stylesheet]",\n    exclude: "",\n    variables: {},\n    onlyLegacy: true,\n    preserveStatic: true,\n    preserveVars: false,\n    silent: false,\n    updateDOM: true,\n    updateURLs: true,\n    watch: null,\n    onBeforeSend: function onBeforeSend() {},\n    onWarning: function onWarning() {},\n    onError: function onError() {},\n    onSuccess: function onSuccess() {},\n    onComplete: function onComplete() {}\n};\n\nvar regex = {\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\n    cssMediaQueries: /@media[^{]+\\{([\\s\\S]+?})\\s*}/g,\n    cssRootRules: /(?::root\\s*{\\s*[^}]*})/g,\n    cssUrls: /url\\((?![\'"]?(?:data|http|\\/\\/):)[\'"]?([^\'")]*)[\'"]?\\)/g,\n    cssVarDecls: /(?:[\\s;]*)(-{2}\\w[\\w-]*)(?:\\s*:\\s*)([^;]*);/g,\n    cssVarFunc: /var\\(\\s*--[\\w-]/,\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\n\nvar variableStore = {\n    dom: {},\n    job: {},\n    user: {}\n};\n\nvar cssVarsIsRunning = false;\n\nvar cssVarsObserver = null;\n\nvar cssVarsSrcNodeCount = 0;\n\nvar debounceTimer = null;\n\nvar isShadowDOMReady = false;\n\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {string}   [options.include="style,link[rel=stylesheet]"] CSS selector\n *                   matching <link re="stylesheet"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel="stylehseet"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.preserveStatic=true] Determines if CSS\n *                   declarations that do not reference a custom property will\n *                   be preserved in the transformed CSS\n * @param {boolean}  [options.preserveVars=false] Determines if CSS custom\n *                   property declarations will be preserved in the transformed\n *                   CSS\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) an array of\n *                   output <style> node references that have been appended to\n *                   the DOM, 3) an object containing all custom properies names\n *                   and values, and 4) the ponyfill execution time in\n *                   milliseconds.\n *\n * @example\n *\n *   cssVars({\n *     rootElement   : document,\n *     shadowDOM     : false,\n *     include       : \'style,link[rel="stylesheet"]\',\n *     exclude       : \'\',\n *     variables     : {},\n *     onlyLegacy    : true,\n *     preserveStatic: true,\n *     preserveVars  : false,\n *     silent        : false,\n *     updateDOM     : true,\n *     updateURLs    : true,\n *     watch         : false,\n *     onBeforeSend(xhr, node, url) {},\n *     onWarning(message) {},\n *     onError(message, node, xhr, url) {},\n *     onSuccess(cssText, node, url) {},\n *     onComplete(cssText, styleNode, cssVariables, benchmark) {}\n *   });\n */ function cssVars() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var msgPrefix = "cssVars(): ";\n    var settings = _extends({}, defaults, options);\n    function handleError(message, sourceNode, xhr, url) {\n        if (!settings.silent && window.console) {\n            console.error("".concat(msgPrefix).concat(message, "\\n"), sourceNode);\n        }\n        settings.onError(message, sourceNode, xhr, url);\n    }\n    function handleWarning(message) {\n        if (!settings.silent && window.console) {\n            console.warn("".concat(msgPrefix).concat(message));\n        }\n        settings.onWarning(message);\n    }\n    if (!isBrowser) {\n        return;\n    }\n    if (settings.watch) {\n        settings.watch = defaults.watch;\n        addMutationObserver(settings);\n        cssVars(settings);\n        return;\n    } else if (settings.watch === false && cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n    if (!settings.__benchmark) {\n        if (cssVarsIsRunning === settings.rootElement) {\n            cssVarsDebounced(options);\n            return;\n        }\n        settings.__benchmark = getTimeStamp();\n        settings.exclude = [ cssVarsObserver ? \'[data-cssvars]:not([data-cssvars=""])\' : \'[data-cssvars="out"]\', settings.exclude ].filter(function(selector) {\n            return selector;\n        }).join(",");\n        settings.variables = fixVarNames(settings.variables);\n        if (!cssVarsObserver) {\n            var outNodes = Array.apply(null, settings.rootElement.querySelectorAll(\'[data-cssvars="out"]\'));\n            outNodes.forEach(function(outNode) {\n                var dataGroup = outNode.getAttribute("data-cssvars-group");\n                var srcNode = dataGroup ? settings.rootElement.querySelector(\'[data-cssvars="src"][data-cssvars-group="\'.concat(dataGroup, \'"]\')) : null;\n                if (!srcNode) {\n                    outNode.parentNode.removeChild(outNode);\n                }\n            });\n            if (cssVarsSrcNodeCount) {\n                var srcNodes = settings.rootElement.querySelectorAll(\'[data-cssvars]:not([data-cssvars="out"])\');\n                if (srcNodes.length < cssVarsSrcNodeCount) {\n                    cssVarsSrcNodeCount = srcNodes.length;\n                    variableStore.dom = {};\n                }\n            }\n        }\n    }\n    if (document.readyState !== "loading") {\n        var isShadowElm = settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host;\n        if (isNativeSupport && settings.onlyLegacy) {\n            if (settings.updateDOM) {\n                var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n                Object.keys(settings.variables).forEach(function(key) {\n                    targetElm.style.setProperty(key, settings.variables[key]);\n                });\n            }\n        } else if (isShadowElm && !isShadowDOMReady) {\n            getCssData({\n                rootElement: defaults.rootElement,\n                include: defaults.include,\n                exclude: settings.exclude,\n                onSuccess: function onSuccess(cssText, node, url) {\n                    cssText = cssText.replace(regex.cssComments, "").replace(regex.cssMediaQueries, "");\n                    cssText = (cssText.match(regex.cssRootRules) || []).join("");\n                    return cssText || false;\n                },\n                onComplete: function onComplete(cssText, cssArray, nodeArray) {\n                    parseVars(cssText, {\n                        store: variableStore.dom,\n                        onWarning: handleWarning\n                    });\n                    isShadowDOMReady = true;\n                    cssVars(settings);\n                }\n            });\n        } else {\n            cssVarsIsRunning = settings.rootElement;\n            getCssData({\n                rootElement: settings.rootElement,\n                include: settings.include,\n                exclude: settings.exclude,\n                onBeforeSend: settings.onBeforeSend,\n                onError: function onError(xhr, node, url) {\n                    var responseUrl = xhr.responseURL || getFullUrl$1(url, location.href);\n                    var statusText = xhr.statusText ? "(".concat(xhr.statusText, ")") : "Unspecified Error" + (xhr.status === 0 ? " (possibly CORS related)" : "");\n                    var errorMsg = "CSS XHR Error: ".concat(responseUrl, " ").concat(xhr.status, " ").concat(statusText);\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onSuccess: function onSuccess(cssText, node, url) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? "" : returnVal || cssText;\n                    if (settings.updateURLs) {\n                        cssText = fixRelativeCssUrls(cssText, url);\n                    }\n                    return cssText;\n                },\n                onComplete: function onComplete(cssText, cssArray) {\n                    var nodeArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n                    var jobVars = {};\n                    var varStore = settings.updateDOM ? variableStore.dom : Object.keys(variableStore.job).length ? variableStore.job : variableStore.job = JSON.parse(JSON.stringify(variableStore.dom));\n                    var hasVarChange = false;\n                    nodeArray.forEach(function(node, i) {\n                        if (regex.cssVars.test(cssArray[i])) {\n                            try {\n                                var cssTree = parseCss(cssArray[i], {\n                                    preserveStatic: settings.preserveStatic,\n                                    removeComments: true\n                                });\n                                parseVars(cssTree, {\n                                    store: jobVars,\n                                    onWarning: handleWarning\n                                });\n                                node.__cssVars = {\n                                    tree: cssTree\n                                };\n                            } catch (err) {\n                                handleError(err.message, node);\n                            }\n                        }\n                    });\n                    if (settings.updateDOM) {\n                        _extends(variableStore.user, settings.variables);\n                    }\n                    _extends(jobVars, settings.variables);\n                    hasVarChange = Boolean((document.querySelector("[data-cssvars]") || Object.keys(variableStore.dom).length) && Object.keys(jobVars).some(function(name) {\n                        return jobVars[name] !== varStore[name];\n                    }));\n                    _extends(varStore, variableStore.user, jobVars);\n                    if (hasVarChange) {\n                        resetCssNodes(settings.rootElement);\n                        cssVars(settings);\n                    } else {\n                        var outCssArray = [];\n                        var outNodeArray = [];\n                        var hasKeyframesWithVars = false;\n                        variableStore.job = {};\n                        if (settings.updateDOM) {\n                            counters.job++;\n                        }\n                        nodeArray.forEach(function(node) {\n                            var isSkip = !node.__cssVars;\n                            if (node.__cssVars) {\n                                try {\n                                    transformCss(node.__cssVars.tree, _extends({}, settings, {\n                                        variables: varStore,\n                                        onWarning: handleWarning\n                                    }));\n                                    var outCss = stringifyCss(node.__cssVars.tree);\n                                    if (settings.updateDOM) {\n                                        if (!node.getAttribute("data-cssvars")) {\n                                            node.setAttribute("data-cssvars", "src");\n                                        }\n                                        if (outCss.length) {\n                                            var dataGroup = node.getAttribute("data-cssvars-group") || ++counters.group;\n                                            var outCssNoSpaces = outCss.replace(/\\s/g, "");\n                                            var outNode = settings.rootElement.querySelector(\'[data-cssvars="out"][data-cssvars-group="\'.concat(dataGroup, \'"]\')) || document.createElement("style");\n                                            hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);\n                                            if (!outNode.hasAttribute("data-cssvars")) {\n                                                outNode.setAttribute("data-cssvars", "out");\n                                            }\n                                            if (outCssNoSpaces === node.textContent.replace(/\\s/g, "")) {\n                                                isSkip = true;\n                                                if (outNode && outNode.parentNode) {\n                                                    node.removeAttribute("data-cssvars-group");\n                                                    outNode.parentNode.removeChild(outNode);\n                                                }\n                                            } else if (outCssNoSpaces !== outNode.textContent.replace(/\\s/g, "")) {\n                                                [ node, outNode ].forEach(function(n) {\n                                                    n.setAttribute("data-cssvars-job", counters.job);\n                                                    n.setAttribute("data-cssvars-group", dataGroup);\n                                                });\n                                                outNode.textContent = outCss;\n                                                outCssArray.push(outCss);\n                                                outNodeArray.push(outNode);\n                                                if (!outNode.parentNode) {\n                                                    node.parentNode.insertBefore(outNode, node.nextSibling);\n                                                }\n                                            }\n                                        }\n                                    } else {\n                                        if (node.textContent.replace(/\\s/g, "") !== outCss) {\n                                            outCssArray.push(outCss);\n                                        }\n                                    }\n                                } catch (err) {\n                                    handleError(err.message, node);\n                                }\n                            }\n                            if (isSkip) {\n                                node.setAttribute("data-cssvars", "skip");\n                            }\n                            if (!node.hasAttribute("data-cssvars-job")) {\n                                node.setAttribute("data-cssvars-job", counters.job);\n                            }\n                        });\n                        cssVarsSrcNodeCount = settings.rootElement.querySelectorAll(\'[data-cssvars]:not([data-cssvars="out"])\').length;\n                        if (settings.shadowDOM) {\n                            var elms = [ settings.rootElement ].concat(_toConsumableArray(settings.rootElement.querySelectorAll("*")));\n                            for (var i = 0, elm; elm = elms[i]; ++i) {\n                                if (elm.shadowRoot && elm.shadowRoot.querySelector("style")) {\n                                    var shadowSettings = _extends({}, settings, {\n                                        rootElement: elm.shadowRoot,\n                                        variables: variableStore.dom\n                                    });\n                                    cssVars(shadowSettings);\n                                }\n                            }\n                        }\n                        if (settings.updateDOM && hasKeyframesWithVars) {\n                            fixKeyframes(settings.rootElement);\n                        }\n                        cssVarsIsRunning = false;\n                        settings.onComplete(outCssArray.join(""), outNodeArray, JSON.parse(JSON.stringify(varStore)), getTimeStamp() - settings.__benchmark);\n                    }\n                }\n            });\n        }\n    } else {\n        document.addEventListener("DOMContentLoaded", function init(evt) {\n            cssVars(options);\n            document.removeEventListener("DOMContentLoaded", init);\n        });\n    }\n}\n\ncssVars.reset = function() {\n    cssVarsIsRunning = false;\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n    cssVarsSrcNodeCount = 0;\n    debounceTimer = null;\n    isShadowDOMReady = false;\n    for (var prop in variableStore) {\n        variableStore[prop] = {};\n    }\n};\n\nfunction addMutationObserver(settings) {\n    function isLink(node) {\n        var isStylesheet = node.tagName === "LINK" && (node.getAttribute("rel") || "").indexOf("stylesheet") !== -1;\n        return isStylesheet && !node.disabled;\n    }\n    function isStyle(node) {\n        return node.tagName === "STYLE" && !node.disabled;\n    }\n    function isValidAddMutation(mutationNodes) {\n        return Array.apply(null, mutationNodes).some(function(node) {\n            var isElm = node.nodeType === 1;\n            var hasAttr = isElm && node.hasAttribute("data-cssvars");\n            var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);\n            var isValid = !hasAttr && (isLink(node) || isStyleWithVars);\n            return isValid;\n        });\n    }\n    function isValidRemoveMutation(mutationNodes) {\n        return Array.apply(null, mutationNodes).some(function(node) {\n            var isElm = node.nodeType === 1;\n            var isOutNode = isElm && node.getAttribute("data-cssvars") === "out";\n            var isSrcNode = isElm && node.getAttribute("data-cssvars") === "src";\n            var isValid = isSrcNode;\n            if (isSrcNode || isOutNode) {\n                var dataGroup = node.getAttribute("data-cssvars-group");\n                var orphanNode = settings.rootElement.querySelector(\'[data-cssvars-group="\'.concat(dataGroup, \'"]\'));\n                if (isSrcNode) {\n                    resetCssNodes(settings.rootElement);\n                    variableStore.dom = {};\n                }\n                if (orphanNode) {\n                    orphanNode.parentNode.removeChild(orphanNode);\n                }\n            }\n            return isValid;\n        });\n    }\n    if (!window.MutationObserver) {\n        return;\n    }\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n        cssVarsObserver = null;\n    }\n    cssVarsObserver = new MutationObserver(function(mutations) {\n        var hasValidMutation = mutations.some(function(mutation) {\n            var isValid = false;\n            if (mutation.type === "attributes") {\n                isValid = isLink(mutation.target);\n            } else if (mutation.type === "childList") {\n                isValid = isValidAddMutation(mutation.addedNodes) || isValidRemoveMutation(mutation.removedNodes);\n            }\n            return isValid;\n        });\n        if (hasValidMutation) {\n            cssVars(settings);\n        }\n    });\n    cssVarsObserver.observe(document.documentElement, {\n        attributes: true,\n        attributeFilter: [ "disabled", "href" ],\n        childList: true,\n        subtree: true\n    });\n}\n\nfunction cssVarsDebounced(settings) {\n    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n    clearTimeout(debounceTimer);\n    debounceTimer = setTimeout(function() {\n        settings.__benchmark = null;\n        cssVars(settings);\n    }, delay);\n}\n\nfunction fixKeyframes(rootElement) {\n    var animationNameProp = [ "animation-name", "-moz-animation-name", "-webkit-animation-name" ].filter(function(prop) {\n        return getComputedStyle(document.body)[prop];\n    })[0];\n    if (animationNameProp) {\n        var allNodes = rootElement.getElementsByTagName("*");\n        var keyframeNodes = [];\n        var nameMarker = "__CSSVARSPONYFILL-KEYFRAMES__";\n        for (var i = 0, len = allNodes.length; i < len; i++) {\n            var node = allNodes[i];\n            var animationName = getComputedStyle(node)[animationNameProp];\n            if (animationName !== "none") {\n                node.style[animationNameProp] += nameMarker;\n                keyframeNodes.push(node);\n            }\n        }\n        void document.body.offsetHeight;\n        for (var _i = 0, _len = keyframeNodes.length; _i < _len; _i++) {\n            var nodeStyle = keyframeNodes[_i].style;\n            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, "");\n        }\n    }\n}\n\nfunction fixRelativeCssUrls(cssText, baseUrl) {\n    var cssUrls = cssText.replace(regex.cssComments, "").match(regex.cssUrls) || [];\n    cssUrls.forEach(function(cssUrl) {\n        var oldUrl = cssUrl.replace(regex.cssUrls, "$1");\n        var newUrl = getFullUrl$1(oldUrl, baseUrl);\n        cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n    });\n    return cssText;\n}\n\nfunction fixVarNames() {\n    var varObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var reLeadingHyphens = /^-{2}/;\n    return Object.keys(varObj).reduce(function(obj, value) {\n        var key = reLeadingHyphens.test(value) ? value : "--".concat(value.replace(/^-+/, ""));\n        obj[key] = varObj[value];\n        return obj;\n    }, {});\n}\n\nfunction getFullUrl$1(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument("");\n    var b = d.createElement("base");\n    var a = d.createElement("a");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction getTimeStamp() {\n    return isBrowser && (window.performance || {}).now ? window.performance.now() : new Date().getTime();\n}\n\nfunction resetCssNodes(rootElement) {\n    var resetNodes = Array.apply(null, rootElement.querySelectorAll(\'[data-cssvars="skip"],[data-cssvars="src"]\'));\n    resetNodes.forEach(function(node) {\n        return node.setAttribute("data-cssvars", "");\n    });\n}\n\n/* unused harmony default export */ var _unused_webpack_default_export = (cssVars);\n//# sourceMappingURL=css-vars-ponyfill.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///94\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.function.name.js\nvar es6_function_name = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js\nvar es6_regexp_to_string = __webpack_require__(2);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.object.to-string.js\nvar es6_object_to_string = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.iterator.js\nvar es6_string_iterator = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.from.js\nvar es6_array_from = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js\nvar web_dom_iterable = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es7.symbol.async-iterator.js\nvar es7_symbol_async_iterator = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js\nvar es6_symbol = __webpack_require__(1);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/_version.js\n/* harmony default export */ var _version = ('8.2.1');\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/_options.js\nvar _options_options = {\n  hooks: {},\n  extensions: [],\n  wrappers: [],\n  navbar: {\n    add: true,\n    title: 'Menu',\n    titleLink: 'parent'\n  },\n  onClick: {\n    close: null,\n    preventDefault: null,\n    setSelected: true\n  },\n  slidingSubmenus: true\n};\n/* harmony default export */ var _options = (_options_options);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/_configs.js\nvar _configs_configs = {\n  classNames: {\n    inset: 'Inset',\n    nolistview: 'NoListview',\n    nopanel: 'NoPanel',\n    panel: 'Panel',\n    selected: 'Selected',\n    spacer: 'Spacer',\n    vertical: 'Vertical'\n  },\n  language: null,\n  openingInterval: 25,\n  panelNodetype: ['ul', 'ol', 'div'],\n  transitionDuration: 400\n};\n/* harmony default export */ var _configs = (_configs_configs);\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.match.js\nvar es6_regexp_match = __webpack_require__(153);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_helpers.js\n\n\n\n\n/**\n * Deep extend an object with the given defaults.\n * Note that the extended object is not a clone, meaning the original object will also be updated.\n *\n * @param \t{object}\torignl\tThe object to extend to.\n * @param \t{object}\tdfault\tThe object to extend from.\n * @return\t{object}\t\t\tThe extended \"orignl\" object.\n */\nfunction extend(orignl, dfault) {\n  if (type(orignl) != 'object') {\n    orignl = {};\n  }\n\n  if (type(dfault) != 'object') {\n    dfault = {};\n  }\n\n  for (var k in dfault) {\n    if (!dfault.hasOwnProperty(k)) {\n      continue;\n    }\n\n    if (typeof orignl[k] == 'undefined') {\n      orignl[k] = dfault[k];\n    } else if (type(orignl[k]) == 'object') {\n      extend(orignl[k], dfault[k]);\n    }\n  }\n\n  return orignl;\n}\n/**\n * Detect the touch / dragging direction on a touch device.\n *\n * @param   {HTMLElement} surface   The element to monitor for touch events.\n * @return  {object}                Object with \"get\" function.\n */\n\nfunction touchDirection(surface) {\n  var direction = '';\n  var position = -1;\n  surface.addEventListener('touchstart', function (evnt) {\n    position = evnt.changedTouches[0].pageY;\n  });\n  surface.addEventListener('touchmove', function (evnt) {\n    var newPosition = evnt.changedTouches[0].pageY;\n    direction = newPosition > position ? 'down' : 'up';\n    position = newPosition;\n  });\n  return {\n    get: function get() {\n      return direction;\n    }\n  };\n}\n/**\n * Get the type of any given variable. Improvement of \"typeof\".\n *\n * @param \t{any}\t\tvariable\tThe variable.\n * @return\t{string}\t\t\t\tThe type of the variable in lowercase.\n */\n\nfunction type(variable) {\n  return {}.toString.call(variable).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n/**\n * Find the value from an option or function.\n * @param \t{HTMLElement} \telement \tScope for the function.\n * @param \t{any} \t\t\t[option] \tValue or function.\n * @param \t{any} \t\t\t[dfault] \tDefault fallback value.\n * @return\t{any}\t\t\t\t\t\tThe given evaluation of the given option, or the default fallback value.\n */\n\nfunction valueOrFn(element, option, dfault) {\n  if (typeof option == 'function') {\n    var value = option.call(element);\n\n    if (typeof value != 'undefined') {\n      return value;\n    }\n  }\n\n  if ((option === null || typeof option == 'function' || typeof option == 'undefined') && typeof dfault != 'undefined') {\n    return dfault;\n  }\n\n  return option;\n}\n/**\n * Set and invoke a (single) transition-end function with fallback.\n *\n * @param {HTMLElement} \telement \tScope for the function.\n * @param {function}\t\tfunc\t\tFunction to invoke.\n * @param {number}\t\t\tduration\tThe duration of the animation (for the fallback).\n */\n\nfunction transitionend(element, func, duration) {\n  var _ended = false,\n      _fn = function _fn(evnt) {\n    if (typeof evnt !== 'undefined') {\n      if (evnt.target !== element) {\n        return;\n      }\n    }\n\n    if (!_ended) {\n      element.removeEventListener('transitionend', _fn);\n      element.removeEventListener('webkitTransitionEnd', _fn);\n      func.call(element);\n    }\n\n    _ended = true;\n  };\n\n  element.addEventListener('transitionend', _fn);\n  element.addEventListener('webkitTransitionEnd', _fn);\n  setTimeout(_fn, duration * 1.1);\n}\n/**\n * Get a (page wide) unique ID.\n */\n\nfunction uniqueId() {\n  return 'mm-' + __id++;\n}\nvar __id = 0;\n/**\n * Get the original ID from a possibly prefixed ID.\n * @param id The possibly prefixed ID.\n */\n\nfunction originalId(id) {\n  if (id.slice(0, 3) == 'mm-') {\n    return id.slice(3);\n  }\n\n  return id;\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_i18n.js\n\nvar translations = {};\n/**\n * Add translations to a language.\n * @param {object}  text        Object of key/value translations.\n * @param {string}  language    The translated language.\n */\n\nfunction _i18n_add(text, language) {\n  if (typeof translations[language] == 'undefined') {\n    translations[language] = {};\n  }\n\n  extend(translations[language], text);\n}\n/**\n * Find a translated text in a language.\n * @param   {string} text       The text to find the translation for.\n * @param   {string} language   The language to search in.\n * @return  {string}            The translated text.\n */\n\nfunction get(text, language) {\n  if (typeof language == 'string' && typeof translations[language] != 'undefined') {\n    return translations[language][text] || text;\n  }\n\n  return text;\n}\n/**\n * Get all translated text in a language.\n * @param   {string} language   The language to search for.\n * @return  {object}            The translations.\n */\n\nfunction _i18n_all(language) {\n  return translations;\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/translations/nl.js\n/* harmony default export */ var nl = ({\n  'Menu': 'Menu'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/translations/fa.js\n/* harmony default export */ var fa = ({\n  'Menu': 'منو'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/translations/de.js\n/* harmony default export */ var de = ({\n  'Menu': 'Menü'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/translations/ru.js\n/* harmony default export */ var ru = ({\n  'Menu': 'Меню'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/translations/translate.js\n\n\n\n\n\n/* harmony default export */ var translate = (function () {\n  _i18n_add(nl, 'nl');\n  _i18n_add(fa, 'fa');\n  _i18n_add(de, 'de');\n  _i18n_add(ru, 'ru');\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js\nvar es6_regexp_split = __webpack_require__(13);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_dom.js\n\n\n\n\n\n\n\n\n\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Create an element with classname.\n *\n * @param \t{string}\t\tselector\tThe nodeName and classnames for the element to create.\n * @return\t{HTMLElement}\t\t\t\tThe created element.\n */\nfunction create(selector) {\n  var elem;\n  selector.split('.').forEach(function (arg, a) {\n    if (a == 0) {\n      elem = document.createElement(arg);\n    } else {\n      elem.classList.add(arg);\n    }\n  });\n  return elem;\n}\n/**\n * Find all elements matching the selector.\n * Basically the same as element.querySelectorAll() but it returns an actuall array.\n *\n * @param \t{HTMLElement} \telement Element to search in.\n * @param \t{string}\t\tfilter\tThe filter to match.\n * @return\t{array}\t\t\t\t\tArray of elements that match the filter.\n */\n\nfunction find(element, filter) {\n  return Array.prototype.slice.call(element.querySelectorAll(filter));\n}\n/**\n * Find all child elements matching the (optional) selector.\n *\n * @param \t{HTMLElement} \telement Element to search in.\n * @param \t{string}\t\tfilter\tThe filter to match.\n * @return\t{array}\t\t\t\t\tArray of child elements that match the filter.\n */\n\nfunction _dom_children(element, filter) {\n  var children = Array.prototype.slice.call(element.children);\n  return filter ? children.filter(function (child) {\n    return child.matches(filter);\n  }) : children;\n}\n/**\n * Find text excluding text from within child elements.\n * @param   {HTMLElement}   element Element to search in.\n * @return  {string}                The text.\n */\n\nfunction _dom_text(element) {\n  return Array.prototype.slice.call(element.childNodes).filter(function (child) {\n    return child.nodeType == 3;\n  }).map(function (child) {\n    return child.textContent;\n  }).join(' ');\n}\n/**\n * Find all preceding elements matching the selector.\n *\n * @param \t{HTMLElement} \telement Element to start searching from.\n * @param \t{string}\t\tfilter\tThe filter to match.\n * @return\t{array}\t\t\t\t\tArray of preceding elements that match the selector.\n */\n\nfunction _dom_parents(element, filter) {\n  /** Array of preceding elements that match the selector. */\n  var parents = [];\n  /** Array of preceding elements that match the selector. */\n\n  var parent = element.parentElement;\n\n  while (parent) {\n    parents.push(parent);\n    parent = parent.parentElement;\n  }\n\n  return filter ? parents.filter(function (parent) {\n    return parent.matches(filter);\n  }) : parents;\n}\n/**\n * Find all previous siblings matching the selecotr.\n *\n * @param \t{HTMLElement} \telement Element to start searching from.\n * @param \t{string}\t\tfilter\tThe filter to match.\n * @return\t{array}\t\t\t\t\tArray of previous siblings that match the selector.\n */\n\nfunction prevAll(element, filter) {\n  /** Array of previous siblings that match the selector. */\n  var previous = [];\n  /** Current element in the loop */\n\n  var current = element.previousElementSibling;\n\n  while (current) {\n    if (!filter || current.matches(filter)) {\n      previous.push(current);\n    }\n\n    current = current.previousElementSibling;\n  }\n\n  return previous;\n}\n/**\n * Get an element offset relative to the document.\n *\n * @param \t{HTMLElement}\t element \t\t\tElement to start measuring from.\n * @param \t{string}\t\t [direction=top] \tOffset top or left.\n * @return\t{number}\t\t\t\t\t\t\tThe element offset relative to the document.\n */\n\nfunction offset(element, direction) {\n  return element.getBoundingClientRect()[direction] + document.body[direction === 'left' ? 'scrollLeft' : 'scrollTop'];\n}\n/**\n * Filter out non-listitem listitems.\n * @param  {array} listitems \tElements to filter.\n * @return {array}\t\t\t\tThe filtered set of listitems.\n */\n\nfunction filterLI(listitems) {\n  return listitems.filter(function (listitem) {\n    return !listitem.matches('.mm-hidden');\n  });\n}\n/**\n * Find anchors in listitems (excluding anchor that open a sub-panel).\n * @param  {array} \tlistitems \tElements to filter.\n * @return {array}\t\t\t\tThe found set of anchors.\n */\n\nfunction filterLIA(listitems) {\n  var anchors = [];\n  filterLI(listitems).forEach(function (listitem) {\n    anchors.push.apply(anchors, _toConsumableArray(_dom_children(listitem, 'a.mm-listitem__text')));\n  });\n  return anchors.filter(function (anchor) {\n    return !anchor.matches('.mm-btn_next');\n  });\n}\n/**\n * Refactor a classname on multiple elements.\n * @param {HTMLElement} element \tElement to refactor.\n * @param {string}\t\toldClass \tClassname to remove.\n * @param {string}\t\tnewClass \tClassname to add.\n */\n\nfunction reClass(element, oldClass, newClass) {\n  if (element.matches('.' + oldClass)) {\n    element.classList.remove(oldClass);\n    element.classList.add(newClass);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_matchmedia.js\n/** Collection of callback functions for media querys. */\nvar listeners = {};\n/**\n * Bind functions to a matchMedia listener (subscriber).\n *\n * @param {string|number} \tquery \tMedia query to match or number for min-width.\n * @param {function} \t\tyes \tFunction to invoke when the media query matches.\n * @param {function} \t\tno \t\tFunction to invoke when the media query doesn't match.\n */\n\nfunction _matchmedia_add(query, yes, no) {\n  if (typeof query == 'number') {\n    query = '(min-width: ' + query + 'px)';\n  }\n\n  listeners[query] = listeners[query] || [];\n  listeners[query].push({\n    yes: yes,\n    no: no\n  });\n}\n/**\n * Initialize the matchMedia listener.\n */\n\nfunction watch() {\n  var _loop = function _loop(query) {\n    var mqlist = window.matchMedia(query);\n    fire(query, mqlist);\n\n    mqlist.onchange = function (evnt) {\n      fire(query, mqlist);\n    };\n  };\n\n  for (var query in listeners) {\n    _loop(query);\n  }\n}\n/**\n * Invoke the \"yes\" or \"no\" function for a matchMedia listener (publisher).\n *\n * @param {string} \t\t\tquery \tMedia query to check for.\n * @param {MediaQueryList} \tmqlist \tMedia query list to check with.\n */\n\nfunction fire(query, mqlist) {\n  var fn = mqlist.matches ? 'yes' : 'no';\n\n  for (var m = 0; m < listeners[query].length; m++) {\n    listeners[query][m][fn]();\n  }\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/oncanvas/mmenu.oncanvas.js\n\n\n\n\n\n\n\n\n\nfunction mmenu_oncanvas_toConsumableArray(arr) { return mmenu_oncanvas_arrayWithoutHoles(arr) || mmenu_oncanvas_iterableToArray(arr) || mmenu_oncanvas_unsupportedIterableToArray(arr) || mmenu_oncanvas_nonIterableSpread(); }\n\nfunction mmenu_oncanvas_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_oncanvas_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_oncanvas_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_oncanvas_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_oncanvas_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_oncanvas_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_oncanvas_arrayLikeToArray(arr); }\n\nfunction mmenu_oncanvas_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n\n\n\n\n\n\n\n //  Add the translations.\n\ntranslate();\n/**\n * Class for a mobile menu.\n */\n\nvar mmenu_oncanvas_Mmenu = /*#__PURE__*/function () {\n  /**\n   * Create a mobile menu.\n   * @param {HTMLElement|string} \tmenu\t\t\t\t\t\tThe menu node.\n   * @param {object} \t\t\t\t[options=Mmenu.options]\t\tOptions for the menu.\n   * @param {object} \t\t\t\t[configs=Mmenu.configs]\t\tConfiguration options for the menu.\n   */\n  function Mmenu(menu, options, configs) {\n    _classCallCheck(this, Mmenu);\n\n    //\tExtend options and configuration from defaults.\n    this.opts = extend(options, Mmenu.options);\n    this.conf = extend(configs, Mmenu.configs); //\tMethods to expose in the API.\n\n    this._api = ['bind', 'initPanels', 'initPanel', 'openPanel', 'closePanel', 'closeAllPanels', 'setSelected']; //\tStorage objects for nodes, variables, hooks and click handlers.\n\n    this.node = {};\n    this.vars = {};\n    this.hook = {};\n    this.clck = []; //\tGet menu node from string or element.\n\n    this.node.menu = typeof menu == 'string' ? document.querySelector(menu) : menu;\n\n    if (typeof this._deprecatedWarnings == 'function') {\n      this._deprecatedWarnings();\n    }\n\n    this._initWrappers();\n\n    this._initAddons();\n\n    this._initExtensions();\n\n    this._initHooks();\n\n    this._initAPI();\n\n    this._initMenu();\n\n    this._initPanels();\n\n    this._initOpened();\n\n    this._initAnchors();\n\n    watch();\n    return this;\n  }\n  /**\n   * Open a panel.\n   * @param {HTMLElement} panel\t\t\t\tPanel to open.\n   * @param {boolean}\t\t[animation=true]\tWhether or not to open the panel with an animation.\n   */\n\n\n  _createClass(Mmenu, [{\n    key: \"openPanel\",\n    value: function openPanel(panel, animation) {\n      var _this = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('openPanel:before', [panel]); //\tFind panel.\n\n      if (!panel) {\n        return;\n      }\n\n      if (!panel.matches('.mm-panel')) {\n        panel = panel.closest('.mm-panel');\n      }\n\n      if (!panel) {\n        return;\n      } //\t/Find panel.\n\n\n      if (typeof animation != 'boolean') {\n        animation = true;\n      } //\tOpen a \"vertical\" panel.\n\n\n      if (panel.parentElement.matches('.mm-listitem_vertical')) {\n        //\tOpen current and all vertical parent panels.\n        _dom_parents(panel, '.mm-listitem_vertical').forEach(function (listitem) {\n          listitem.classList.add('mm-listitem_opened');\n          _dom_children(listitem, '.mm-panel').forEach(function (panel) {\n            panel.classList.remove('mm-hidden');\n          });\n        }); //\tOpen first non-vertical parent panel.\n\n        var parents = _dom_parents(panel, '.mm-panel').filter(function (panel) {\n          return !panel.parentElement.matches('.mm-listitem_vertical');\n        });\n        this.trigger('openPanel:start', [panel]);\n\n        if (parents.length) {\n          this.openPanel(parents[0]);\n        }\n\n        this.trigger('openPanel:finish', [panel]); //\tOpen a \"horizontal\" panel.\n      } else {\n        if (panel.matches('.mm-panel_opened')) {\n          return;\n        }\n\n        var panels = _dom_children(this.node.pnls, '.mm-panel'),\n            current = _dom_children(this.node.pnls, '.mm-panel_opened')[0]; //\tClose all child panels.\n\n        panels.filter(function (parent) {\n          return parent !== panel;\n        }).forEach(function (parent) {\n          parent.classList.remove('mm-panel_opened-parent');\n        }); //\tOpen all parent panels.\n\n        var parent = panel['mmParent'];\n\n        while (parent) {\n          parent = parent.closest('.mm-panel');\n\n          if (parent) {\n            if (!parent.parentElement.matches('.mm-listitem_vertical')) {\n              parent.classList.add('mm-panel_opened-parent');\n            }\n\n            parent = parent['mmParent'];\n          }\n        } //\tAdd classes for animation.\n\n\n        panels.forEach(function (panel) {\n          panel.classList.remove('mm-panel_highest');\n        });\n        panels.filter(function (hidden) {\n          return hidden !== current;\n        }).filter(function (hidden) {\n          return hidden !== panel;\n        }).forEach(function (hidden) {\n          hidden.classList.add('mm-hidden');\n        });\n        panel.classList.remove('mm-hidden');\n        /**\tStart opening the panel. */\n\n        var openPanelStart = function openPanelStart() {\n          if (current) {\n            current.classList.remove('mm-panel_opened');\n          }\n\n          panel.classList.add('mm-panel_opened');\n\n          if (panel.matches('.mm-panel_opened-parent')) {\n            if (current) {\n              current.classList.add('mm-panel_highest');\n            }\n\n            panel.classList.remove('mm-panel_opened-parent');\n          } else {\n            if (current) {\n              current.classList.add('mm-panel_opened-parent');\n            }\n\n            panel.classList.add('mm-panel_highest');\n          } //\tInvoke \"start\" hook.\n\n\n          _this.trigger('openPanel:start', [panel]);\n        };\n        /**\tFinish opening the panel. */\n\n\n        var openPanelFinish = function openPanelFinish() {\n          if (current) {\n            current.classList.remove('mm-panel_highest');\n            current.classList.add('mm-hidden');\n          }\n\n          panel.classList.remove('mm-panel_highest'); //\tInvoke \"finish\" hook.\n\n          _this.trigger('openPanel:finish', [panel]);\n        };\n\n        if (animation && !panel.matches('.mm-panel_noanimation')) {\n          //\tWithout the timeout the animation will not work because the element had display: none;\n          setTimeout(function () {\n            //\tCallback\n            transitionend(panel, function () {\n              openPanelFinish();\n            }, _this.conf.transitionDuration);\n            openPanelStart();\n          }, this.conf.openingInterval);\n        } else {\n          openPanelStart();\n          openPanelFinish();\n        }\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('openPanel:after', [panel]);\n    }\n    /**\n     * Close a panel.\n     * @param {HTMLElement} panel Panel to close.\n     */\n\n  }, {\n    key: \"closePanel\",\n    value: function closePanel(panel) {\n      //\tInvoke \"before\" hook.\n      this.trigger('closePanel:before', [panel]);\n      var li = panel.parentElement; //\tOnly works for \"vertical\" panels.\n\n      if (li.matches('.mm-listitem_vertical')) {\n        li.classList.remove('mm-listitem_opened');\n        panel.classList.add('mm-hidden'); //\tInvoke main hook.\n\n        this.trigger('closePanel', [panel]);\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('closePanel:after', [panel]);\n    }\n    /**\n     * Close all opened panels.\n     * @param {HTMLElement} panel Panel to open after closing all other panels.\n     */\n\n  }, {\n    key: \"closeAllPanels\",\n    value: function closeAllPanels(panel) {\n      //\tInvoke \"before\" hook.\n      this.trigger('closeAllPanels:before'); //\tClose all \"vertical\" panels.\n\n      var listitems = this.node.pnls.querySelectorAll('.mm-listitem');\n      listitems.forEach(function (listitem) {\n        listitem.classList.remove('mm-listitem_selected', 'mm-listitem_opened');\n      }); //\tClose all \"horizontal\" panels.\n\n      var panels = _dom_children(this.node.pnls, '.mm-panel'),\n          opened = panel ? panel : panels[0];\n      _dom_children(this.node.pnls, '.mm-panel').forEach(function (panel) {\n        if (panel !== opened) {\n          panel.classList.remove('mm-panel_opened');\n          panel.classList.remove('mm-panel_opened-parent');\n          panel.classList.remove('mm-panel_highest');\n          panel.classList.add('mm-hidden');\n        }\n      }); //\tOpen first panel.\n\n      this.openPanel(opened, false); //\tInvoke \"after\" hook.\n\n      this.trigger('closeAllPanels:after');\n    }\n    /**\n     * Toggle a panel opened/closed.\n     * @param {HTMLElement} panel Panel to open or close.\n     */\n\n  }, {\n    key: \"togglePanel\",\n    value: function togglePanel(panel) {\n      var listitem = panel.parentElement; //\tOnly works for \"vertical\" panels.\n\n      if (listitem.matches('.mm-listitem_vertical')) {\n        this[listitem.matches('.mm-listitem_opened') ? 'closePanel' : 'openPanel'](panel);\n      }\n    }\n    /**\n     * Display a listitem as being \"selected\".\n     * @param {HTMLElement} listitem Listitem to mark.\n     */\n\n  }, {\n    key: \"setSelected\",\n    value: function setSelected(listitem) {\n      //\tInvoke \"before\" hook.\n      this.trigger('setSelected:before', [listitem]); //\tFirst, remove the selected class from all listitems.\n\n      find(this.node.menu, '.mm-listitem_selected').forEach(function (li) {\n        li.classList.remove('mm-listitem_selected');\n      }); //\tNext, add the selected class to the provided listitem.\n\n      listitem.classList.add('mm-listitem_selected'); //\tInvoke \"after\" hook.\n\n      this.trigger('setSelected:after', [listitem]);\n    }\n    /**\n     * Bind functions to a hook (subscriber).\n     * @param {string} \t\thook The hook.\n     * @param {function} \tfunc The function.\n     */\n\n  }, {\n    key: \"bind\",\n    value: function bind(hook, func) {\n      //\tCreate an array for the hook if it does not yet excist.\n      this.hook[hook] = this.hook[hook] || []; //\tPush the function to the array.\n\n      this.hook[hook].push(func);\n    }\n    /**\n     * Invoke the functions bound to a hook (publisher).\n     * @param {string} \thook  \tThe hook.\n     * @param {array}\t[args] \tArguments for the function.\n     */\n\n  }, {\n    key: \"trigger\",\n    value: function trigger(hook, args) {\n      if (this.hook[hook]) {\n        for (var h = 0, l = this.hook[hook].length; h < l; h++) {\n          this.hook[hook][h].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Create the API.\n     */\n\n  }, {\n    key: \"_initAPI\",\n    value: function _initAPI() {\n      var _this2 = this;\n\n      //\tWe need this=that because:\n      //\t1) the \"arguments\" object can not be referenced in an arrow function in ES3 and ES5.\n      var that = this;\n      this.API = {};\n\n      this._api.forEach(function (fn) {\n        _this2.API[fn] = function () {\n          var re = that[fn].apply(that, arguments); // 1)\n\n          return typeof re == 'undefined' ? that.API : re;\n        };\n      }); //\tStore the API in the HTML node for external usage.\n\n\n      this.node.menu['mmApi'] = this.API;\n    }\n    /**\n     * Bind the hooks specified in the options (publisher).\n     */\n\n  }, {\n    key: \"_initHooks\",\n    value: function _initHooks() {\n      for (var hook in this.opts.hooks) {\n        this.bind(hook, this.opts.hooks[hook]);\n      }\n    }\n    /**\n     * Initialize the wrappers specified in the options.\n     */\n\n  }, {\n    key: \"_initWrappers\",\n    value: function _initWrappers() {\n      //\tInvoke \"before\" hook.\n      this.trigger('initWrappers:before');\n\n      for (var w = 0; w < this.opts.wrappers.length; w++) {\n        var wrpr = Mmenu.wrappers[this.opts.wrappers[w]];\n\n        if (typeof wrpr == 'function') {\n          wrpr.call(this);\n        }\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('initWrappers:after');\n    }\n    /**\n     * Initialize all available add-ons.\n     */\n\n  }, {\n    key: \"_initAddons\",\n    value: function _initAddons() {\n      //\tInvoke \"before\" hook.\n      this.trigger('initAddons:before');\n\n      for (var addon in Mmenu.addons) {\n        Mmenu.addons[addon].call(this);\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('initAddons:after');\n    }\n    /**\n     * Initialize the extensions specified in the options.\n     */\n\n  }, {\n    key: \"_initExtensions\",\n    value: function _initExtensions() {\n      var _this3 = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('initExtensions:before'); //\tConvert array to object with array.\n\n      if (type(this.opts.extensions) == 'array') {\n        this.opts.extensions = {\n          all: this.opts.extensions\n        };\n      } //\tLoop over object.\n\n\n      for (var query in this.opts.extensions) {\n        if (this.opts.extensions[query].length) {\n          (function () {\n            var classnames = _this3.opts.extensions[query].map(function (query) {\n              return 'mm-menu_' + query;\n            });\n\n            _matchmedia_add(query, function () {\n              var _this3$node$menu$clas;\n\n              (_this3$node$menu$clas = _this3.node.menu.classList).add.apply(_this3$node$menu$clas, mmenu_oncanvas_toConsumableArray(classnames));\n            }, function () {\n              var _this3$node$menu$clas2;\n\n              (_this3$node$menu$clas2 = _this3.node.menu.classList).remove.apply(_this3$node$menu$clas2, mmenu_oncanvas_toConsumableArray(classnames));\n            });\n          })();\n        }\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('initExtensions:after');\n    }\n    /**\n     * Initialize the menu.\n     */\n\n  }, {\n    key: \"_initMenu\",\n    value: function _initMenu() {\n      var _this4 = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('initMenu:before'); //\tAdd class to the wrapper.\n\n      this.node.wrpr = this.node.wrpr || this.node.menu.parentElement;\n      this.node.wrpr.classList.add('mm-wrapper'); //\tAdd an ID to the menu if it does not yet have one.\n\n      this.node.menu.id = this.node.menu.id || uniqueId(); //\tWrap the panels in a node.\n\n      var panels = create('div.mm-panels');\n      _dom_children(this.node.menu).forEach(function (panel) {\n        if (_this4.conf.panelNodetype.indexOf(panel.nodeName.toLowerCase()) > -1) {\n          panels.append(panel);\n        }\n      });\n      this.node.menu.append(panels);\n      this.node.pnls = panels; //\tAdd class to the menu.\n\n      this.node.menu.classList.add('mm-menu'); //\tInvoke \"after\" hook.\n\n      this.trigger('initMenu:after');\n    }\n    /**\n     * @deprecated\n     */\n\n  }, {\n    key: \"initPanels\",\n    value: function initPanels(panels) {\n      var _this5 = this;\n\n      this.trigger('initPanels:deprecated');\n      panels = panels || _dom_children(this.node.pnls);\n      panels.forEach(function (panel) {\n        _this5.initPanel(panel);\n      });\n    }\n    /**\n     * Initialize panels.\n     * @param {array} [panels] Panels to initialize.\n     */\n\n  }, {\n    key: \"_initPanels\",\n    value: function _initPanels() {\n      var _this6 = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('initPanels:before'); //\tOpen / close panels.\n\n      this.clck.push(function (anchor, args) {\n        if (args.inMenu) {\n          var href = anchor.getAttribute('href');\n\n          if (href && href.length > 1 && href.slice(0, 1) == '#') {\n            try {\n              var panel = find(_this6.node.menu, href)[0];\n\n              if (panel && panel.matches('.mm-panel')) {\n                if (anchor.parentElement.matches('.mm-listitem_vertical')) {\n                  _this6.togglePanel(panel);\n                } else {\n                  _this6.openPanel(panel);\n                }\n\n                return true;\n              }\n            } catch (err) {}\n          }\n        }\n      });\n      /** The panels to initiate */\n\n      var panels = _dom_children(this.node.pnls);\n      panels.forEach(function (panel) {\n        _this6.initPanel(panel);\n      }); //\tInvoke \"after\" hook.\n\n      this.trigger('initPanels:after');\n    }\n    /**\n     * Initialize a single panel and its children.\n     * @param {HTMLElement} panel The panel to initialize.\n     */\n\n  }, {\n    key: \"initPanel\",\n    value: function initPanel(panel) {\n      var _this7 = this;\n\n      /** Query selector for possible node-types for panels. */\n      var panelNodetype = this.conf.panelNodetype.join(', ');\n\n      if (panel.matches(panelNodetype)) {\n        //  Only once\n        if (!panel.matches('.mm-panel')) {\n          panel = this._initPanel(panel);\n        }\n\n        if (panel) {\n          /** The sub panels. */\n          var children = []; //\tFind panel > panel\n\n          children.push.apply(children, mmenu_oncanvas_toConsumableArray(_dom_children(panel, '.' + this.conf.classNames.panel))); //\tFind panel listitem > panel\n\n          _dom_children(panel, '.mm-listview').forEach(function (listview) {\n            _dom_children(listview, '.mm-listitem').forEach(function (listitem) {\n              children.push.apply(children, mmenu_oncanvas_toConsumableArray(_dom_children(listitem, panelNodetype)));\n            });\n          }); //  Initiate subpanel(s).\n\n          children.forEach(function (child) {\n            _this7.initPanel(child);\n          });\n        }\n      }\n    }\n    /**\n     * Initialize a single panel.\n     * @param  {HTMLElement} \t\tpanel \tPanel to initialize.\n     * @return {HTMLElement|null} \t\t\tInitialized panel.\n     */\n\n  }, {\n    key: \"_initPanel\",\n    value: function _initPanel(panel) {\n      //\tInvoke \"before\" hook.\n      this.trigger('initPanel:before', [panel]); //\tRefactor panel classnames\n\n      reClass(panel, this.conf.classNames.panel, 'mm-panel');\n      reClass(panel, this.conf.classNames.nopanel, 'mm-nopanel');\n      reClass(panel, this.conf.classNames.inset, 'mm-listview_inset');\n\n      if (panel.matches('.mm-listview_inset')) {\n        panel.classList.add('mm-nopanel');\n      } //\tStop if not supposed to be a panel.\n\n\n      if (panel.matches('.mm-nopanel')) {\n        return null;\n      }\n\n      var id = panel.id || uniqueId(); //  Vertical panel.\n\n      var vertical = panel.matches('.' + this.conf.classNames.vertical) || !this.opts.slidingSubmenus;\n      panel.classList.remove(this.conf.classNames.vertical); //\tWrap UL/OL in DIV\n\n      if (panel.matches('ul, ol')) {\n        panel.removeAttribute('id');\n        /** The panel. */\n\n        var wrapper = create('div'); //\tWrap the listview in the panel.\n\n        panel.before(wrapper);\n        wrapper.append(panel);\n        panel = wrapper;\n      }\n\n      panel.id = id;\n      panel.classList.add('mm-panel', 'mm-hidden');\n      /** The parent listitem. */\n\n      var parent = [panel.parentElement].filter(function (listitem) {\n        return listitem.matches('li');\n      })[0];\n\n      if (vertical) {\n        if (parent) {\n          parent.classList.add('mm-listitem_vertical');\n        }\n      } else {\n        this.node.pnls.append(panel);\n      } //\tStore parent/child relation.\n\n\n      if (parent) {\n        parent['mmChild'] = panel;\n        panel['mmParent'] = parent;\n      }\n\n      this._initNavbar(panel);\n\n      this._initListview(panel); //\tInvoke \"after\" hook.\n\n\n      this.trigger('initPanel:after', [panel]);\n      return panel;\n    }\n    /**\n     * Initialize a navbar.\n     * @param {HTMLElement} panel Panel for the navbar.\n     */\n\n  }, {\n    key: \"_initNavbar\",\n    value: function _initNavbar(panel) {\n      //\tInvoke \"before\" hook.\n      this.trigger('initNavbar:before', [panel]); //\tOnly one navbar per panel.\n\n      if (_dom_children(panel, '.mm-navbar').length) {\n        return;\n      }\n      /** The parent listitem. */\n\n\n      var parent = panel['mmParent'];\n      /** The navbar element. */\n\n      var navbar = create('div.mm-navbar');\n      /** Title in the navbar. */\n\n      var text = this._getPanelTitle(panel, this.opts.navbar.title);\n      /** Href for the title. */\n\n\n      var href = '';\n\n      if (parent) {\n        if (parent.matches('.mm-listitem_vertical')) {\n          return;\n        }\n\n        var opener; //\tListview, the panel wrapping this panel\n\n        if (parent.matches('.mm-listitem')) {\n          opener = _dom_children(parent, '.mm-listitem__text')[0]; //\tNon-listview, the first anchor in the parent panel that links to this panel\n        } else {\n          opener = panel.closest('.mm-panel');\n          opener = find(opener, 'a[href=\"#' + panel.id + '\"]')[0];\n        }\n\n        var id = opener.closest('.mm-panel').id;\n        text = this._getPanelTitle(panel, opener.textContent);\n\n        switch (this.opts.navbar.titleLink) {\n          case 'anchor':\n            href = opener.getAttribute('href');\n            break;\n\n          case 'parent':\n            href = '#' + id;\n            break;\n        }\n\n        var prev = create('a.mm-btn.mm-btn_prev.mm-navbar__btn');\n        prev.setAttribute('href', '#' + id);\n        navbar.append(prev);\n      } else if (!this.opts.navbar.title) {\n        return;\n      }\n\n      if (!this.opts.navbar.add) {\n        _dom_children(panel, '.mm-navbar')[0].classList.add('mm-hidden');\n      }\n\n      var title = create('a.mm-navbar__title');\n      title.innerHTML = text;\n\n      if (href) {\n        title.setAttribute('href', href);\n      }\n\n      navbar.append(title); //\tJust to center the title.\n\n      if (parent) {\n        var next = create('span.mm-btn.mm-navbar__btn');\n        navbar.append(next);\n      }\n\n      panel.prepend(navbar); //\tInvoke \"after\" hook.\n\n      this.trigger('initNavbar:after', [panel]);\n    }\n    /**\n     * Initialize a listview.\n     * @param {HTMLElement} panel Panel for the listview(s).\n     */\n\n  }, {\n    key: \"_initListview\",\n    value: function _initListview(panel) {\n      var _this8 = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('initListview:before', [panel]);\n      /** Listviews in the panel. */\n\n      var listviews = _dom_children(panel, 'ul, ol'); //\tRefactor listitems classnames\n\n      listviews.forEach(function (listview) {\n        reClass(listview, _this8.conf.classNames.nolistview, 'mm-nolistview');\n\n        if (!listview.matches('.mm-nolistview')) {\n          listview.classList.add('mm-listview');\n          _dom_children(listview).forEach(function (listitem) {\n            listitem.classList.add('mm-listitem');\n            reClass(listitem, _this8.conf.classNames.selected, 'mm-listitem_selected');\n            reClass(listitem, _this8.conf.classNames.spacer, 'mm-listitem_spacer');\n            _dom_children(listitem, 'a, span').forEach(function (item) {\n              if (!item.matches('.mm-btn')) {\n                item.classList.add('mm-listitem__text');\n              }\n            });\n          });\n        }\n      });\n      /** The parent listitem. */\n\n      var parent = panel['mmParent']; //\tAdd open link to parent listitem\n\n      if (parent && parent.matches('.mm-listitem')) {\n        if (!_dom_children(parent, '.mm-btn').length) {\n          /** The text node. */\n          var item = _dom_children(parent, '.mm-listitem__text')[0];\n\n          if (item) {\n            /** The open link. */\n            var button = create('a.mm-btn.mm-btn_next.mm-listitem__btn');\n            button.setAttribute('href', '#' + panel.id); //  If the item has no link,\n            //      Replace the item with the open link.\n\n            if (item.matches('span')) {\n              button.classList.add('mm-listitem__text');\n              button.innerHTML = item.innerHTML;\n              parent.insertBefore(button, item.nextElementSibling);\n              item.remove(); //  Append the button to the listitem.\n            } else {\n              parent.append(button);\n            }\n          }\n        }\n      } //\tInvoke \"after\" hook.\n\n\n      this.trigger('initListview:after', [panel]);\n    }\n    /**\n     * Find and open the correct panel after creating the menu.\n     */\n\n  }, {\n    key: \"_initOpened\",\n    value: function _initOpened() {\n      //\tInvoke \"before\" hook.\n      this.trigger('initOpened:before');\n      /** The selected listitem(s). */\n\n      var listitems = this.node.pnls.querySelectorAll('.mm-listitem_selected');\n      /** The last selected listitem. */\n\n      var lastitem = null; //\tDeselect the listitems.\n\n      listitems.forEach(function (listitem) {\n        lastitem = listitem;\n        listitem.classList.remove('mm-listitem_selected');\n      }); //\tRe-select the last listitem.\n\n      if (lastitem) {\n        lastitem.classList.add('mm-listitem_selected');\n      }\n      /**\tThe current opened panel. */\n\n\n      var current = lastitem ? lastitem.closest('.mm-panel') : _dom_children(this.node.pnls, '.mm-panel')[0]; //\tOpen the current opened panel.\n\n      this.openPanel(current, false); //\tInvoke \"after\" hook.\n\n      this.trigger('initOpened:after');\n    }\n    /**\n     * Initialize anchors in / for the menu.\n     */\n\n  }, {\n    key: \"_initAnchors\",\n    value: function _initAnchors() {\n      var _this9 = this;\n\n      //\tInvoke \"before\" hook.\n      this.trigger('initAnchors:before');\n      document.addEventListener('click', function (evnt) {\n        /** The clicked element. */\n        var target = evnt.target.closest('a[href]');\n\n        if (!target) {\n          return;\n        }\n        /** Arguments passed to the bound methods. */\n\n\n        var args = {\n          inMenu: target.closest('.mm-menu') === _this9.node.menu,\n          inListview: target.matches('.mm-listitem > a'),\n          toExternal: target.matches('[rel=\"external\"]') || target.matches('[target=\"_blank\"]')\n        };\n        var onClick = {\n          close: null,\n          setSelected: null,\n          preventDefault: target.getAttribute('href').slice(0, 1) == '#'\n        }; //\tFind hooked behavior.\n\n        for (var c = 0; c < _this9.clck.length; c++) {\n          var click = _this9.clck[c].call(_this9, target, args);\n\n          if (click) {\n            if (typeof click == 'boolean') {\n              evnt.preventDefault();\n              return;\n            }\n\n            if (type(click) == 'object') {\n              onClick = extend(click, onClick);\n            }\n          }\n        } //\tDefault behavior for anchors in lists.\n\n\n        if (args.inMenu && args.inListview && !args.toExternal) {\n          //\tSet selected item, Default: true\n          if (valueOrFn(target, _this9.opts.onClick.setSelected, onClick.setSelected)) {\n            _this9.setSelected(target.parentElement);\n          } //\tPrevent default / don't follow link. Default: false.\n\n\n          if (valueOrFn(target, _this9.opts.onClick.preventDefault, onClick.preventDefault)) {\n            evnt.preventDefault();\n          } //\tClose menu. Default: false\n\n\n          if (valueOrFn(target, _this9.opts.onClick.close, onClick.close)) {\n            if (_this9.opts.offCanvas && typeof _this9.close == 'function') {\n              _this9.close();\n            }\n          }\n        }\n      }, true); //\tInvoke \"after\" hook.\n\n      this.trigger('initAnchors:after');\n    }\n    /**\n     * Get the translation for a text.\n     * @param  {string} text \tText to translate.\n     * @return {string}\t\t\tThe translated text.\n     */\n\n  }, {\n    key: \"i18n\",\n    value: function i18n(text) {\n      return get(text, this.conf.language);\n    }\n    /**\n     * Find the title for a panel.\n     * @param \t{HTMLElement}\t\t\tpanel \t\tPanel to search in.\n     * @param \t{string|Function} \t\t[dfault] \tFallback/default title.\n     * @return\t{string}\t\t\t\t\t\t\tThe title for the panel.\n     */\n\n  }, {\n    key: \"_getPanelTitle\",\n    value: function _getPanelTitle(panel, dfault) {\n      var title; //\tFunction\n\n      if (typeof this.opts.navbar.title == 'function') {\n        title = this.opts.navbar.title.call(panel);\n      } //\tData attr\n\n\n      if (typeof title == 'undefined') {\n        title = panel.getAttribute('mm-data-title');\n      }\n\n      if (typeof title == 'string' && title.length) {\n        return title;\n      } //\tFallback\n\n\n      if (typeof dfault == 'string') {\n        return this.i18n(dfault);\n      } else if (typeof dfault == 'function') {\n        return this.i18n(dfault.call(panel));\n      } //\tDefault\n\n\n      if (typeof Mmenu.options.navbar.title == 'string') {\n        return this.i18n(Mmenu.options.navbar.title);\n      }\n\n      return this.i18n('Menu');\n    }\n  }]);\n\n  return Mmenu;\n}();\n/**\tPlugin version. */\n\n\n\nmmenu_oncanvas_Mmenu.version = _version;\n/**\tDefault options for menus. */\n\nmmenu_oncanvas_Mmenu.options = _options;\n/**\tDefault configuration for menus. */\n\nmmenu_oncanvas_Mmenu.configs = _configs;\n/**\tAvailable add-ons for the plugin. */\n\nmmenu_oncanvas_Mmenu.addons = {};\n/** Available wrappers for the plugin. */\n\nmmenu_oncanvas_Mmenu.wrappers = {};\n/**\tGlobally used HTML elements. */\n\nmmenu_oncanvas_Mmenu.node = {};\n/** Globally used variables. */\n\nmmenu_oncanvas_Mmenu.vars = {};\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/offcanvas/_options.js\n\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar offcanvas_options_options = {\n  blockUI: true,\n  moveBackground: true\n};\n/* harmony default export */ var offcanvas_options = (offcanvas_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction extendShorthandOptions(options) {\n  if (_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/offcanvas/_configs.js\nvar offcanvas_configs_configs = {\n  clone: false,\n  menu: {\n    insertMethod: 'prepend',\n    insertSelector: 'body'\n  },\n  page: {\n    nodetype: 'div',\n    selector: null,\n    noSelector: []\n  }\n};\n/* harmony default export */ var offcanvas_configs = (offcanvas_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_eventlisteners.js\n\n\n/**\n * Make the first letter in a word uppercase.\n * @param {string} word The word.\n */\nfunction ucFirst(word) {\n  if (!word) {\n    return '';\n  }\n\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n/**\n * Bind an event listener to an element.\n * @param {HTMLElement} element     The element to bind the event listener to.\n * @param {string}      evnt        The event to listen to.\n * @param {funcion}     handler     The function to invoke.\n */\n\n\nfunction on(element, evnt, handler) {\n  //  Extract the event name and space from the event (the event can include a namespace (click.foo)).\n  var evntParts = evnt.split('.');\n  evnt = 'mmEvent' + ucFirst(evntParts[0]) + ucFirst(evntParts[1]);\n  element[evnt] = element[evnt] || [];\n  element[evnt].push(handler);\n  element.addEventListener(evntParts[0], handler);\n}\n/**\n * Remove an event listener from an element.\n * @param {HTMLElement} element The element to remove the event listeners from.\n * @param {string}      evnt    The event to remove.\n */\n\nfunction off(element, evnt) {\n  //  Extract the event name and space from the event (the event can include a namespace (click.foo)).\n  var evntParts = evnt.split('.');\n  evnt = 'mmEvent' + ucFirst(evntParts[0]) + ucFirst(evntParts[1]);\n  (element[evnt] || []).forEach(function (handler) {\n    element.removeEventListener(evntParts[0], handler);\n  });\n}\n/**\n * Trigger the bound event listeners on an element.\n * @param {HTMLElement} element     The element of which to trigger the event listeners from.\n * @param {string}      evnt        The event to trigger.\n * @param {object}      [options]   Options to pass to the handler.\n */\n\nfunction trigger(element, evnt, options) {\n  var evntParts = evnt.split('.');\n  evnt = 'mmEvent' + ucFirst(evntParts[0]) + ucFirst(evntParts[1]);\n  (element[evnt] || []).forEach(function (handler) {\n    handler(options || {});\n  });\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/offcanvas/mmenu.offcanvas.js\n\n\n\n\n\n\n //  Add the options and configs.\n\nmmenu_oncanvas_Mmenu.options.offCanvas = offcanvas_options;\nmmenu_oncanvas_Mmenu.configs.offCanvas = offcanvas_configs;\n/* harmony default export */ var mmenu_offcanvas = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  var options = extendShorthandOptions(this.opts.offCanvas);\n  this.opts.offCanvas = extend(options, mmenu_oncanvas_Mmenu.options.offCanvas);\n  var configs = this.conf.offCanvas; //\tAdd methods to the API.\n\n  this._api.push('open', 'close', 'setPage'); //\tSetup the menu.\n\n\n  this.vars.opened = false; //\tAdd off-canvas behavior.\n\n  this.bind('initMenu:before', function () {\n    //\tClone if needed.\n    if (configs.clone) {\n      //\tClone the original menu and store it.\n      _this.node.menu = _this.node.menu.cloneNode(true); //\tPrefix all ID's in the cloned menu.\n\n      if (_this.node.menu.id) {\n        _this.node.menu.id = 'mm-' + _this.node.menu.id;\n      }\n\n      find(_this.node.menu, '[id]').forEach(function (elem) {\n        elem.id = 'mm-' + elem.id;\n      });\n    }\n\n    _this.node.wrpr = document.documentElement; //\tPrepend to the <body>\n\n    document.querySelector(configs.menu.insertSelector)[configs.menu.insertMethod](_this.node.menu);\n  });\n  this.bind('initMenu:after', function () {\n    //\tSetup the UI blocker.\n    mmenu_offcanvas_initBlocker.call(_this); //\tSetup the page.\n\n    _this.setPage(mmenu_oncanvas_Mmenu.node.page); //\tSetup window events.\n\n\n    mmenu_offcanvas_initWindow.call(_this); //\tSetup the menu.\n\n    _this.node.menu.classList.add('mm-menu_offcanvas'); //\tOpen if url hash equals menu id (usefull when user clicks the hamburger icon before the menu is created)\n\n\n    var hash = window.location.hash;\n\n    if (hash) {\n      var id = originalId(_this.node.menu.id);\n\n      if (id && id == hash.slice(1)) {\n        setTimeout(function () {\n          _this.open();\n        }, 1000);\n      }\n    }\n  }); //\tSync the blocker to target the page.\n\n  this.bind('setPage:after', function (page) {\n    if (mmenu_oncanvas_Mmenu.node.blck) {\n      _dom_children(mmenu_oncanvas_Mmenu.node.blck, 'a').forEach(function (anchor) {\n        anchor.setAttribute('href', '#' + page.id);\n      });\n    }\n  }); //\tAdd screenreader / aria support\n\n  this.bind('open:start:sr-aria', function () {\n    mmenu_oncanvas_Mmenu.sr_aria(_this.node.menu, 'hidden', false);\n  });\n  this.bind('close:finish:sr-aria', function () {\n    mmenu_oncanvas_Mmenu.sr_aria(_this.node.menu, 'hidden', true);\n  });\n  this.bind('initMenu:after:sr-aria', function () {\n    mmenu_oncanvas_Mmenu.sr_aria(_this.node.menu, 'hidden', true);\n  }); //\tAdd screenreader / text support\n\n  this.bind('initBlocker:after:sr-text', function () {\n    _dom_children(mmenu_oncanvas_Mmenu.node.blck, 'a').forEach(function (anchor) {\n      anchor.innerHTML = mmenu_oncanvas_Mmenu.sr_text(_this.i18n(_this.conf.screenReader.text.closeMenu));\n    });\n  }); //\tAdd click behavior.\n  //\tPrevents default behavior when clicking an anchor\n\n  this.clck.push(function (anchor, args) {\n    //\tOpen menu if the clicked anchor links to the menu\n    var id = originalId(_this.node.menu.id);\n\n    if (id) {\n      if (anchor.matches('[href=\"#' + id + '\"]')) {\n        //\tOpening this menu from within this menu\n        //\t\t-> Open menu\n        if (args.inMenu) {\n          _this.open();\n\n          return true;\n        } //\tOpening this menu from within a second menu\n        //\t\t-> Close the second menu before opening this menu\n\n\n        var menu = anchor.closest('.mm-menu');\n\n        if (menu) {\n          var api = menu['mmApi'];\n\n          if (api && api.close) {\n            api.close();\n            transitionend(menu, function () {\n              _this.open();\n            }, _this.conf.transitionDuration);\n            return true;\n          }\n        } //\tOpening this menu\n\n\n        _this.open();\n\n        return true;\n      }\n    } //\tClose menu\n\n\n    id = mmenu_oncanvas_Mmenu.node.page.id;\n\n    if (id) {\n      if (anchor.matches('[href=\"#' + id + '\"]')) {\n        _this.close();\n\n        return true;\n      }\n    }\n\n    return;\n  });\n});\n/**\n * Open the menu.\n */\n\nmmenu_oncanvas_Mmenu.prototype.open = function () {\n  var _this2 = this;\n\n  //\tInvoke \"before\" hook.\n  this.trigger('open:before');\n\n  if (this.vars.opened) {\n    return;\n  }\n\n  this._openSetup(); //\tWithout the timeout, the animation won't work because the menu had display: none;\n\n\n  setTimeout(function () {\n    _this2._openStart();\n  }, this.conf.openingInterval); //\tInvoke \"after\" hook.\n\n  this.trigger('open:after');\n};\n\nmmenu_oncanvas_Mmenu.prototype._openSetup = function () {\n  var _this$node$wrpr$class,\n      _this3 = this;\n\n  var options = this.opts.offCanvas; //\tClose other menus\n\n  this.closeAllOthers(); //\tStore style and position\n\n  mmenu_oncanvas_Mmenu.node.page['mmStyle'] = mmenu_oncanvas_Mmenu.node.page.getAttribute('style') || ''; //\tTrigger window-resize to measure height\n\n  trigger(window, 'resize.page', {\n    force: true\n  });\n  var clsn = ['mm-wrapper_opened']; //\tAdd options\n\n  if (options.blockUI) {\n    clsn.push('mm-wrapper_blocking');\n  }\n\n  if (options.blockUI == 'modal') {\n    clsn.push('mm-wrapper_modal');\n  }\n\n  if (options.moveBackground) {\n    clsn.push('mm-wrapper_background');\n  }\n\n  (_this$node$wrpr$class = this.node.wrpr.classList).add.apply(_this$node$wrpr$class, clsn); //\tOpen\n  //\tWithout the timeout, the animation won't work because the menu had display: none;\n\n\n  setTimeout(function () {\n    _this3.vars.opened = true;\n  }, this.conf.openingInterval);\n  this.node.menu.classList.add('mm-menu_opened');\n};\n/**\n * Finish opening the menu.\n */\n\n\nmmenu_oncanvas_Mmenu.prototype._openStart = function () {\n  var _this4 = this;\n\n  //\tCallback when the page finishes opening.\n  transitionend(mmenu_oncanvas_Mmenu.node.page, function () {\n    _this4.trigger('open:finish');\n  }, this.conf.transitionDuration); //\tOpening\n\n  this.trigger('open:start');\n  this.node.wrpr.classList.add('mm-wrapper_opening');\n};\n\nmmenu_oncanvas_Mmenu.prototype.close = function () {\n  var _this5 = this;\n\n  //\tInvoke \"before\" hook.\n  this.trigger('close:before');\n\n  if (!this.vars.opened) {\n    return;\n  } //\tCallback when the page finishes closing.\n\n\n  transitionend(mmenu_oncanvas_Mmenu.node.page, function () {\n    var _this5$node$wrpr$clas;\n\n    _this5.node.menu.classList.remove('mm-menu_opened');\n\n    var clsn = ['mm-wrapper_opened', 'mm-wrapper_blocking', 'mm-wrapper_modal', 'mm-wrapper_background'];\n\n    (_this5$node$wrpr$clas = _this5.node.wrpr.classList).remove.apply(_this5$node$wrpr$clas, clsn); //\tRestore style and position\n\n\n    mmenu_oncanvas_Mmenu.node.page.setAttribute('style', mmenu_oncanvas_Mmenu.node.page['mmStyle']);\n    _this5.vars.opened = false;\n\n    _this5.trigger('close:finish');\n  }, this.conf.transitionDuration); //\tClosing\n\n  this.trigger('close:start');\n  this.node.wrpr.classList.remove('mm-wrapper_opening'); //\tInvoke \"after\" hook.\n\n  this.trigger('close:after');\n};\n/**\n * Close all other menus.\n */\n\n\nmmenu_oncanvas_Mmenu.prototype.closeAllOthers = function () {\n  var _this6 = this;\n\n  find(document.body, '.mm-menu_offcanvas').forEach(function (menu) {\n    if (menu !== _this6.node.menu) {\n      var api = menu['mmApi'];\n\n      if (api && api.close) {\n        api.close();\n      }\n    }\n  });\n};\n/**\n * Set the \"page\" node.\n *\n * @param {HTMLElement} page Element to set as the page.\n */\n\n\nmmenu_oncanvas_Mmenu.prototype.setPage = function (page) {\n  //\tInvoke \"before\" hook.\n  this.trigger('setPage:before', [page]);\n  var configs = this.conf.offCanvas; //\tIf no page was specified, find it.\n\n  if (!page) {\n    /** Array of elements that are / could be \"the page\". */\n    var pages = typeof configs.page.selector == 'string' ? find(document.body, configs.page.selector) : _dom_children(document.body, configs.page.nodetype); //\tFilter out elements that are absolutely not \"the page\".\n\n    pages = pages.filter(function (page) {\n      return !page.matches('.mm-menu, .mm-wrapper__blocker');\n    }); //\tFilter out elements that are configured to not be \"the page\".\n\n    if (configs.page.noSelector.length) {\n      pages = pages.filter(function (page) {\n        return !page.matches(configs.page.noSelector.join(', '));\n      });\n    } //\tWrap multiple pages in a single element.\n\n\n    if (pages.length > 1) {\n      var wrapper = create('div');\n      pages[0].before(wrapper);\n      pages.forEach(function (page) {\n        wrapper.append(page);\n      });\n      pages = [wrapper];\n    }\n\n    page = pages[0];\n  }\n\n  page.classList.add('mm-page', 'mm-slideout');\n  page.id = page.id || uniqueId();\n  mmenu_oncanvas_Mmenu.node.page = page; //\tInvoke \"after\" hook.\n\n  this.trigger('setPage:after', [page]);\n};\n/**\n * Initialize the window.\n */\n\n\nvar mmenu_offcanvas_initWindow = function initWindow() {\n  var _this7 = this;\n\n  //\tPrevent tabbing\n  //\tBecause when tabbing outside the menu, the element that gains focus will be centered on the screen.\n  //\tIn other words: The menu would move out of view.\n  off(document.body, 'keydown.tabguard');\n  on(document.body, 'keydown.tabguard', function (evnt) {\n    if (evnt.keyCode == 9) {\n      if (_this7.node.wrpr.matches('.mm-wrapper_opened')) {\n        evnt.preventDefault();\n      }\n    }\n  }); //\tSet \"page\" element min-height to window height\n\n  off(window, 'resize.page');\n  on(window, 'resize.page', function (evnt) {\n    if (mmenu_oncanvas_Mmenu.node.page) {\n      if (_this7.node.wrpr.matches('.mm-wrapper_opening') || evnt.force) {\n        mmenu_oncanvas_Mmenu.node.page.style.minHeight = window.innerHeight + 'px';\n      }\n    }\n  });\n};\n/**\n * Initialize \"blocker\" node\n */\n\n\nvar mmenu_offcanvas_initBlocker = function initBlocker() {\n  var _this8 = this;\n\n  //\tInvoke \"before\" hook.\n  this.trigger('initBlocker:before');\n  var options = this.opts.offCanvas,\n      configs = this.conf.offCanvas;\n\n  if (!options.blockUI) {\n    return;\n  } //\tCreate the blocker node.\n\n\n  if (!mmenu_oncanvas_Mmenu.node.blck) {\n    var blck = create('div.mm-wrapper__blocker.mm-slideout');\n    blck.innerHTML = '<a></a>'; //\tAppend the blocker node to the body.\n\n    document.querySelector(configs.menu.insertSelector).append(blck); //\tStore the blocker node.\n\n    mmenu_oncanvas_Mmenu.node.blck = blck;\n  } //\tClose the menu when\n  //\t\t1) clicking,\n  //\t\t2) touching or\n  //\t\t3) dragging the blocker node.\n\n\n  var closeMenu = function closeMenu(evnt) {\n    evnt.preventDefault();\n    evnt.stopPropagation();\n\n    if (!_this8.node.wrpr.matches('.mm-wrapper_modal')) {\n      _this8.close();\n    }\n  };\n\n  mmenu_oncanvas_Mmenu.node.blck.addEventListener('mousedown', closeMenu); // 1\n\n  mmenu_oncanvas_Mmenu.node.blck.addEventListener('touchstart', closeMenu); // 2\n\n  mmenu_oncanvas_Mmenu.node.blck.addEventListener('touchmove', closeMenu); // 3\n  //\tInvoke \"after\" hook.\n\n  this.trigger('initBlocker:after');\n};\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js\nvar es6_regexp_replace = __webpack_require__(67);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/_options.js\n\n\n\nfunction _options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _options_typeof = function _typeof(obj) { return typeof obj; }; } else { _options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _options_typeof(obj); }\n\nvar screenreader_options_options = {\n  aria: true,\n  text: true\n};\n/* harmony default export */ var screenreader_options = (screenreader_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction _options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      aria: options,\n      text: options\n    };\n  }\n\n  if (_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/_configs.js\nvar screenreader_configs_configs = {\n  text: {\n    closeMenu: 'Close menu',\n    closeSubmenu: 'Close submenu',\n    openSubmenu: 'Open submenu',\n    toggleSubmenu: 'Toggle submenu'\n  }\n};\n/* harmony default export */ var screenreader_configs = (screenreader_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/translations/nl.js\n/* harmony default export */ var translations_nl = ({\n  'Close menu': 'Menu sluiten',\n  'Close submenu': 'Submenu sluiten',\n  'Open submenu': 'Submenu openen',\n  'Toggle submenu': 'Submenu wisselen'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/translations/fa.js\n/* harmony default export */ var translations_fa = ({\n  'Close menu': 'بستن منو',\n  'Close submenu': 'بستن زیرمنو',\n  'Open submenu': 'بازکردن زیرمنو',\n  'Toggle submenu': 'سوییچ زیرمنو'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/translations/de.js\n/* harmony default export */ var translations_de = ({\n  'Close menu': 'Menü schließen',\n  'Close submenu': 'Untermenü schließen',\n  'Open submenu': 'Untermenü öffnen',\n  'Toggle submenu': 'Untermenü wechseln'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/translations/ru.js\n/* harmony default export */ var translations_ru = ({\n  'Close menu': 'Закрыть меню',\n  'Close submenu': 'Закрыть подменю',\n  'Open submenu': 'Открыть подменю',\n  'Toggle submenu': 'Переключить подменю'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/translations/translate.js\n\n\n\n\n\n/* harmony default export */ var translations_translate = (function () {\n  _i18n_add(translations_nl, 'nl');\n  _i18n_add(translations_fa, 'fa');\n  _i18n_add(translations_de, 'de');\n  _i18n_add(translations_ru, 'ru');\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/screenreader/mmenu.screenreader.js\n\n\n\n\n\n\n\n\n\n\nfunction mmenu_screenreader_toConsumableArray(arr) { return mmenu_screenreader_arrayWithoutHoles(arr) || mmenu_screenreader_iterableToArray(arr) || mmenu_screenreader_unsupportedIterableToArray(arr) || mmenu_screenreader_nonIterableSpread(); }\n\nfunction mmenu_screenreader_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_screenreader_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_screenreader_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_screenreader_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_screenreader_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_screenreader_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_screenreader_arrayLikeToArray(arr); }\n\nfunction mmenu_screenreader_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n //  Add the translations.\n\ntranslations_translate(); //  Add the options and configs.\n\nmmenu_oncanvas_Mmenu.options.screenReader = screenreader_options;\nmmenu_oncanvas_Mmenu.configs.screenReader = screenreader_configs;\n/* harmony default export */ var mmenu_screenreader = (function () {\n  var _this = this;\n\n  //\tExtend options.\n  var options = _options_extendShorthandOptions(this.opts.screenReader);\n  this.opts.screenReader = extend(options, mmenu_oncanvas_Mmenu.options.screenReader); //\tExtend configs.\n\n  var configs = this.conf.screenReader; //\tAdd Aria-* attributes\n\n  if (options.aria) {\n    //\tAdd screenreader / aria hooks for add-ons\n    //\tIn orde to keep this list short, only extend hooks that are actually used by other add-ons.\n    this.bind('initAddons:after', function () {\n      _this.bind('initMenu:after', function () {\n        this.trigger('initMenu:after:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('initNavbar:after', function () {\n        this.trigger('initNavbar:after:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('openPanel:start', function () {\n        this.trigger('openPanel:start:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('close:start', function () {\n        this.trigger('close:start:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('close:finish', function () {\n        this.trigger('close:finish:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('open:start', function () {\n        this.trigger('open:start:sr-aria', [].slice.call(arguments));\n      });\n\n      _this.bind('initOpened:after', function () {\n        this.trigger('initOpened:after:sr-aria', [].slice.call(arguments));\n      });\n    }); //\tUpdate aria-hidden for hidden / visible listitems\n\n    this.bind('updateListview', function () {\n      _this.node.pnls.querySelectorAll('.mm-listitem').forEach(function (listitem) {\n        mmenu_oncanvas_Mmenu.sr_aria(listitem, 'hidden', listitem.matches('.mm-hidden'));\n      });\n    }); //\tUpdate aria-hidden for the panels when opening and closing a panel.\n\n    this.bind('openPanel:start', function (panel) {\n      /** Panels that should be considered \"hidden\". */\n      var hidden = find(_this.node.pnls, '.mm-panel').filter(function (hide) {\n        return hide !== panel;\n      }).filter(function (hide) {\n        return !hide.parentElement.matches('.mm-panel');\n      });\n      /** Panels that should be considered \"visible\". */\n\n      var visible = [panel];\n      find(panel, '.mm-listitem_vertical .mm-listitem_opened').forEach(function (listitem) {\n        visible.push.apply(visible, mmenu_screenreader_toConsumableArray(_dom_children(listitem, '.mm-panel')));\n      }); //\tSet the panels to be considered \"hidden\" or \"visible\".\n\n      hidden.forEach(function (panel) {\n        mmenu_oncanvas_Mmenu.sr_aria(panel, 'hidden', true);\n      });\n      visible.forEach(function (panel) {\n        mmenu_oncanvas_Mmenu.sr_aria(panel, 'hidden', false);\n      });\n    });\n    this.bind('closePanel', function (panel) {\n      mmenu_oncanvas_Mmenu.sr_aria(panel, 'hidden', true);\n    }); //\tAdd aria-haspopup and aria-owns to prev- and next buttons.\n\n    this.bind('initPanel:after', function (panel) {\n      find(panel, '.mm-btn').forEach(function (button) {\n        mmenu_oncanvas_Mmenu.sr_aria(button, 'haspopup', true);\n        var href = button.getAttribute('href');\n\n        if (href) {\n          mmenu_oncanvas_Mmenu.sr_aria(button, 'owns', href.replace('#', ''));\n        }\n      });\n    }); //\tAdd aria-hidden for navbars in panels.\n\n    this.bind('initNavbar:after', function (panel) {\n      /** The navbar in the panel. */\n      var navbar = _dom_children(panel, '.mm-navbar')[0];\n      /** Whether or not the navbar should be considered \"hidden\". */\n\n      var hidden = navbar.matches('.mm-hidden'); //\tSet the navbar to be considered \"hidden\" or \"visible\".\n\n      mmenu_oncanvas_Mmenu.sr_aria(navbar, 'hidden', hidden);\n    }); //\tText\n\n    if (options.text) {\n      //\tAdd aria-hidden to titles in navbars\n      if (this.opts.navbar.titleLink == 'parent') {\n        this.bind('initNavbar:after', function (panel) {\n          /** The navbar in the panel. */\n          var navbar = _dom_children(panel, '.mm-navbar')[0];\n          /** Whether or not the navbar should be considered \"hidden\". */\n\n          var hidden = navbar.querySelector('.mm-btn_prev') ? true : false; //\tSet the navbar-title to be considered \"hidden\" or \"visible\".\n\n          mmenu_oncanvas_Mmenu.sr_aria(find(navbar, '.mm-navbar__title')[0], 'hidden', hidden);\n        });\n      }\n    }\n  } //\tAdd screenreader text\n\n\n  if (options.text) {\n    //\tAdd screenreader / text hooks for add-ons\n    //\tIn orde to keep this list short, only extend hooks that are actually used by other add-ons.\n    this.bind('initAddons:after', function () {\n      _this.bind('setPage:after', function () {\n        this.trigger('setPage:after:sr-text', [].slice.call(arguments));\n      });\n\n      _this.bind('initBlocker:after', function () {\n        this.trigger('initBlocker:after:sr-text', [].slice.call(arguments));\n      });\n    }); //\tAdd text to the prev-buttons.\n\n    this.bind('initNavbar:after', function (panel) {\n      var navbar = _dom_children(panel, '.mm-navbar')[0];\n\n      if (navbar) {\n        var button = _dom_children(navbar, '.mm-btn_prev')[0];\n\n        if (button) {\n          button.innerHTML = mmenu_oncanvas_Mmenu.sr_text(_this.i18n(configs.text.closeSubmenu));\n        }\n      }\n    }); //\tAdd text to the next-buttons.\n\n    this.bind('initListview:after', function (panel) {\n      var parent = panel['mmParent'];\n\n      if (parent) {\n        var next = _dom_children(parent, '.mm-btn_next')[0];\n\n        if (next) {\n          var text = _this.i18n(configs.text[next.parentElement.matches('.mm-listitem_vertical') ? 'toggleSubmenu' : 'openSubmenu']);\n\n          next.innerHTML += mmenu_oncanvas_Mmenu.sr_text(text);\n        }\n      }\n    });\n  }\n}); //\tMethods\n\n(function () {\n  var attr = function attr(element, _attr, value) {\n    element[_attr] = value;\n\n    if (value) {\n      element.setAttribute(_attr, value.toString());\n    } else {\n      element.removeAttribute(_attr);\n    }\n  };\n  /**\n   * Add aria (property and) attribute to a HTML element.\n   *\n   * @param {HTMLElement} \telement\tThe node to add the attribute to.\n   * @param {string}\t\t\tname\tThe (non-aria-prefixed) attribute name.\n   * @param {string|boolean}\tvalue\tThe attribute value.\n   */\n\n\n  mmenu_oncanvas_Mmenu.sr_aria = function (element, name, value) {\n    attr(element, 'aria-' + name, value);\n  };\n  /**\n   * Add role attribute to a HTML element.\n   *\n   * @param {HTMLElement}\t\telement\tThe node to add the attribute to.\n   * @param {string|boolean}\tvalue\tThe attribute value.\n   */\n\n\n  mmenu_oncanvas_Mmenu.sr_role = function (element, value) {\n    attr(element, 'role', value);\n  };\n  /**\n   * Wrap a text in a screen-reader-only node.\n   *\n   * @param \t{string} text\tThe text to wrap.\n   * @return\t{string}\t\tThe wrapped text.\n   */\n\n\n  mmenu_oncanvas_Mmenu.sr_text = function (text) {\n    return '<span class=\"mm-sronly\">' + text + '</span>';\n  };\n})();\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/scrollbugfix/_options.js\n\n\n\nfunction scrollbugfix_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { scrollbugfix_options_typeof = function _typeof(obj) { return typeof obj; }; } else { scrollbugfix_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return scrollbugfix_options_typeof(obj); }\n\nvar scrollbugfix_options_options = {\n  fix: true\n};\n/* harmony default export */ var scrollbugfix_options = (scrollbugfix_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction scrollbugfix_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      fix: options\n    };\n  }\n\n  if (scrollbugfix_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/_support.js\n/** Whether or not touch gestures are supported by the browser. */\nvar touch = 'ontouchstart' in window || (navigator.msMaxTouchPoints ? true : false) || false;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/core/scrollbugfix/mmenu.scrollbugfix.js\n\n\n\n\n\n //  Add the options.\n\nmmenu_oncanvas_Mmenu.options.scrollBugFix = scrollbugfix_options;\n/* harmony default export */ var mmenu_scrollbugfix = (function () {\n  var _this = this;\n\n  //\tThe scrollBugFix add-on fixes a scrolling bug\n  //\t\t1) on touch devices\n  //\t\t2) in an off-canvas menu\n  //\t\t3) that -when opened- blocks the UI from interaction\n  if (!touch || // 1\n  !this.opts.offCanvas || // 2\n  !this.opts.offCanvas.blockUI // 3\n  ) {\n      return;\n    } //\tExtend options.\n\n\n  var options = scrollbugfix_options_extendShorthandOptions(this.opts.scrollBugFix);\n  this.opts.scrollBugFix = extend(options, mmenu_oncanvas_Mmenu.options.scrollBugFix);\n\n  if (!options.fix) {\n    return;\n  }\n\n  var touchDir = touchDirection(this.node.menu);\n  /**\n   * Prevent an event from doing its default and stop its propagation.\n   * @param {ScrollBehavior} evnt The event to stop.\n   */\n\n  function stop(evnt) {\n    evnt.preventDefault();\n    evnt.stopPropagation();\n  } //  Prevent the page from scrolling when scrolling in the menu.\n\n\n  this.node.menu.addEventListener('scroll', stop, {\n    //  Make sure to tell the browser the event will be prevented.\n    passive: false\n  }); //  Prevent the page from scrolling when dragging in the menu.\n\n  this.node.menu.addEventListener('touchmove', function (evnt) {\n    var panel = evnt.target.closest('.mm-panel');\n\n    if (panel) {\n      //  When dragging a non-scrollable panel,\n      //      we can simple preventDefault and stopPropagation.\n      if (panel.scrollHeight === panel.offsetHeight) {\n        stop(evnt); //  When dragging a scrollable panel,\n        //      that is fully scrolled up (or down).\n        //      It will not trigger the scroll event when dragging down (or up) (because you can't scroll up (or down)),\n        //      so we need to match the dragging direction with the scroll position before preventDefault and stopPropagation,\n        //      otherwise the panel would not scroll at all in any direction.\n      } else if ( //  When scrolled up and dragging down\n      panel.scrollTop == 0 && touchDir.get() == 'down' || //  When scrolled down and dragging up\n      panel.scrollHeight == panel.scrollTop + panel.offsetHeight && touchDir.get() == 'up') {\n        stop(evnt);\n      } //  When dragging anything other than a panel.\n\n    } else {\n      stop(evnt);\n    }\n  }, {\n    //  Make sure to tell the browser the event can be prevented.\n    passive: false\n  }); //  Some small additional improvements\n  //\tScroll the current opened panel to the top when opening the menu.\n\n  this.bind('open:start', function () {\n    var panel = _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n    panel.scrollTop = 0;\n  }); //\tFix issue after device rotation change.\n\n  window.addEventListener('orientationchange', function (evnt) {\n    var panel = _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n    panel.scrollTop = 0; //\tApparently, changing the overflow-scrolling property triggers some event :)\n\n    panel.style['-webkit-overflow-scrolling'] = 'auto';\n    panel.style['-webkit-overflow-scrolling'] = 'touch';\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/autoheight/_options.js\n\n\n\nfunction autoheight_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { autoheight_options_typeof = function _typeof(obj) { return typeof obj; }; } else { autoheight_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return autoheight_options_typeof(obj); }\n\nvar opts = {\n  height: 'default'\n};\n/* harmony default export */ var autoheight_options = (opts);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction autoheight_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean' && options) {\n    options = {\n      height: 'auto'\n    };\n  }\n\n  if (typeof options == 'string') {\n    options = {\n      height: options\n    };\n  }\n\n  if (autoheight_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/autoheight/mmenu.autoheight.js\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.autoHeight = autoheight_options;\n/* harmony default export */ var mmenu_autoheight = (function () {\n  var _this = this;\n\n  var options = autoheight_options_extendShorthandOptions(this.opts.autoHeight);\n  this.opts.autoHeight = extend(options, mmenu_oncanvas_Mmenu.options.autoHeight);\n\n  if (options.height != 'auto' && options.height != 'highest') {\n    return;\n  }\n\n  var setHeight = function () {\n    var getCurrent = function getCurrent() {\n      var panel = _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n\n      if (panel) {\n        panel = measurablePanel(panel);\n      } //\tFallback, just to be sure we have a panel.\n\n\n      if (!panel) {\n        panel = _dom_children(_this.node.pnls, '.mm-panel')[0];\n      }\n\n      return panel.offsetHeight;\n    };\n\n    var getHighest = function getHighest() {\n      var highest = 0;\n      _dom_children(_this.node.pnls, '.mm-panel').forEach(function (panel) {\n        panel = measurablePanel(panel);\n        highest = Math.max(highest, panel.offsetHeight);\n      });\n      return highest;\n    };\n\n    var measurablePanel = function measurablePanel(panel) {\n      //\tIf it's a vertically expanding panel...\n      if (panel.parentElement.matches('.mm-listitem_vertical')) {\n        //\t...find the first parent panel that isn't.\n        panel = _dom_parents(panel, '.mm-panel').filter(function (panel) {\n          return !panel.parentElement.matches('.mm-listitem_vertical');\n        })[0];\n      }\n\n      return panel;\n    };\n\n    return function () {\n      if (_this.opts.offCanvas && !_this.vars.opened) {\n        return;\n      }\n\n      var style = window.getComputedStyle(_this.node.pnls);\n\n      var _top = Math.max(parseInt(style.top, 10), 0) || 0,\n          _bot = Math.max(parseInt(style.bottom, 10), 0) || 0,\n          _hgh = 0; //\tThe \"measuring\" classname undoes some CSS to be able to measure the height.\n\n\n      _this.node.menu.classList.add('mm-menu_autoheight-measuring'); //\tMeasure the height.\n\n\n      if (options.height == 'auto') {\n        _hgh = getCurrent();\n      } else if (options.height == 'highest') {\n        _hgh = getHighest();\n      } //\tSet the height.\n\n\n      _this.node.menu.style.height = _hgh + _top + _bot + 'px'; //\tRemove the \"measuring\" classname.\n\n      _this.node.menu.classList.remove('mm-menu_autoheight-measuring');\n    };\n  }(); //\tAdd the autoheight class to the menu.\n\n\n  this.bind('initMenu:after', function () {\n    _this.node.menu.classList.add('mm-menu_autoheight');\n  });\n\n  if (this.opts.offCanvas) {\n    //\tMeasure the height when opening the off-canvas menu.\n    this.bind('open:start', setHeight);\n  }\n\n  if (options.height == 'highest') {\n    //\tMeasure the height when initiating panels.\n    this.bind('initPanels:after', setHeight);\n  }\n\n  if (options.height == 'auto') {\n    //\tMeasure the height when updating listviews.\n    this.bind('updateListview', setHeight); //\tMeasure the height when opening a panel.\n\n    this.bind('openPanel:start', setHeight);\n  }\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.search.js\nvar es6_regexp_search = __webpack_require__(126);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/backbutton/_options.js\n\n\n\nfunction backbutton_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { backbutton_options_typeof = function _typeof(obj) { return typeof obj; }; } else { backbutton_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return backbutton_options_typeof(obj); }\n\nvar backbutton_options_options = {\n  close: false,\n  open: false\n};\n/* harmony default export */ var backbutton_options = (backbutton_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction backbutton_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      close: options\n    };\n  }\n\n  if (backbutton_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/backbutton/mmenu.backbutton.js\n\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.backButton = backbutton_options;\n/* harmony default export */ var mmenu_backbutton = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  var options = backbutton_options_extendShorthandOptions(this.opts.backButton);\n  this.opts.backButton = extend(options, mmenu_oncanvas_Mmenu.options.backButton);\n\n  var _menu = '#' + this.node.menu.id; //\tClose menu\n\n\n  if (options.close) {\n    var states = [];\n\n    var setStates = function setStates() {\n      states = [_menu];\n      _dom_children(_this.node.pnls, '.mm-panel_opened, .mm-panel_opened-parent').forEach(function (panel) {\n        states.push('#' + panel.id);\n      });\n    };\n\n    this.bind('open:finish', function () {\n      history.pushState(null, document.title, _menu);\n    });\n    this.bind('open:finish', setStates);\n    this.bind('openPanel:finish', setStates);\n    this.bind('close:finish', function () {\n      states = [];\n      history.back();\n      history.pushState(null, document.title, location.pathname + location.search);\n    });\n    window.addEventListener('popstate', function (evnt) {\n      if (_this.vars.opened) {\n        if (states.length) {\n          states = states.slice(0, -1);\n          var hash = states[states.length - 1];\n\n          if (hash == _menu) {\n            _this.close();\n          } else {\n            _this.openPanel(_this.node.menu.querySelector(hash));\n\n            history.pushState(null, document.title, _menu);\n          }\n        }\n      }\n    });\n  }\n\n  if (options.open) {\n    window.addEventListener('popstate', function (evnt) {\n      if (!_this.vars.opened && location.hash == _menu) {\n        _this.open();\n      }\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/columns/_options.js\n\n\n\nfunction columns_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { columns_options_typeof = function _typeof(obj) { return typeof obj; }; } else { columns_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return columns_options_typeof(obj); }\n\nvar columns_options_options = {\n  add: false,\n  visible: {\n    min: 1,\n    max: 3\n  }\n};\n/* harmony default export */ var columns_options = (columns_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction columns_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options\n    };\n  }\n\n  if (typeof options == 'number') {\n    options = {\n      add: true,\n      visible: options\n    };\n  }\n\n  if (columns_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.visible == 'number') {\n    options.visible = {\n      min: options.visible,\n      max: options.visible\n    };\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/columns/mmenu.columns.js\n\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.columns = columns_options;\n/* harmony default export */ var mmenu_columns = (function () {\n  var _this = this;\n\n  var options = columns_options_extendShorthandOptions(this.opts.columns);\n  this.opts.columns = extend(options, mmenu_oncanvas_Mmenu.options.columns); //\tAdd the columns\n\n  if (options.add) {\n    options.visible.min = Math.max(1, Math.min(6, options.visible.min));\n    options.visible.max = Math.max(options.visible.min, Math.min(6, options.visible.max));\n    /** Columns related clasnames for the menu. */\n\n    var colm = [];\n    /** Columns related clasnames for the panels. */\n\n    var colp = [];\n    /** Classnames to remove from panels in favor of showing columns. */\n\n    var rmvc = ['mm-panel_opened', 'mm-panel_opened-parent', 'mm-panel_highest'];\n\n    for (var i = 0; i <= options.visible.max; i++) {\n      colm.push('mm-menu_columns-' + i);\n      colp.push('mm-panel_columns-' + i);\n    }\n\n    rmvc.push.apply(rmvc, colp); //\tClose all later opened panels\n\n    this.bind('openPanel:before', function (panel) {\n      /** The parent panel. */\n      var parent;\n\n      if (panel) {\n        parent = panel['mmParent'];\n      }\n\n      if (!parent) {\n        return;\n      }\n\n      parent = parent.closest('.mm-panel');\n\n      if (!parent) {\n        return;\n      }\n\n      var classname = parent.className;\n\n      if (!classname.length) {\n        return;\n      }\n\n      classname = classname.split('mm-panel_columns-')[1];\n\n      if (!classname) {\n        return;\n      }\n\n      var colnr = parseInt(classname.split(' ')[0], 10) + 1;\n\n      while (colnr > 0) {\n        panel = _dom_children(_this.node.pnls, '.mm-panel_columns-' + colnr)[0];\n\n        if (panel) {\n          var _panel$classList;\n\n          console.log(panel);\n          colnr++;\n\n          (_panel$classList = panel.classList).remove.apply(_panel$classList, rmvc);\n\n          panel.classList.add('mm-hidden');\n        } else {\n          colnr = -1;\n          break;\n        }\n      }\n    });\n    this.bind('openPanel:start', function (panel) {\n      var _this$node$menu$class;\n\n      var columns = _dom_children(_this.node.pnls, '.mm-panel_opened-parent').length;\n\n      if (!panel.matches('.mm-panel_opened-parent')) {\n        columns++;\n      }\n\n      columns = Math.min(options.visible.max, Math.max(options.visible.min, columns));\n\n      (_this$node$menu$class = _this.node.menu.classList).remove.apply(_this$node$menu$class, colm);\n\n      _this.node.menu.classList.add('mm-menu_columns-' + columns);\n\n      var panels = [];\n      _dom_children(_this.node.pnls, '.mm-panel').forEach(function (panel) {\n        var _panel$classList2;\n\n        (_panel$classList2 = panel.classList).remove.apply(_panel$classList2, colp);\n\n        if (panel.matches('.mm-panel_opened-parent')) {\n          panels.push(panel);\n        }\n      });\n      panels.push(panel);\n      panels.slice(-options.visible.max).forEach(function (panel, p) {\n        panel.classList.add('mm-panel_columns-' + p);\n      });\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/counters/_options.js\n\n\n\nfunction counters_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { counters_options_typeof = function _typeof(obj) { return typeof obj; }; } else { counters_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return counters_options_typeof(obj); }\n\nvar counters_options_options = {\n  add: false,\n  addTo: 'panels',\n  count: false\n};\n/* harmony default export */ var counters_options = (counters_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction counters_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options,\n      addTo: 'panels',\n      count: options\n    };\n  }\n\n  if (counters_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (options.addTo == 'panels') {\n    options.addTo = '.mm-panel';\n  }\n\n  return options;\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/counters/mmenu.counters.js\n\n\n\n\n\n\n\n\n\nfunction mmenu_counters_toConsumableArray(arr) { return mmenu_counters_arrayWithoutHoles(arr) || mmenu_counters_iterableToArray(arr) || mmenu_counters_unsupportedIterableToArray(arr) || mmenu_counters_nonIterableSpread(); }\n\nfunction mmenu_counters_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_counters_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_counters_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_counters_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_counters_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_counters_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_counters_arrayLikeToArray(arr); }\n\nfunction mmenu_counters_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.counters = counters_options; //\tAdd the classnames.\n\nmmenu_oncanvas_Mmenu.configs.classNames.counters = {\n  counter: 'Counter'\n};\n/* harmony default export */ var mmenu_counters = (function () {\n  var _this = this;\n\n  var options = counters_options_extendShorthandOptions(this.opts.counters);\n  this.opts.counters = extend(options, mmenu_oncanvas_Mmenu.options.counters); //\tRefactor counter class\n\n  this.bind('initListview:after', function (panel) {\n    var cntrclss = _this.conf.classNames.counters.counter,\n        counters = panel.querySelectorAll('.' + cntrclss);\n    counters.forEach(function (counter) {\n      reClass(counter, cntrclss, 'mm-counter');\n    });\n  }); //\tAdd the counters after a listview is initiated.\n\n  if (options.add) {\n    this.bind('initListview:after', function (panel) {\n      if (!panel.matches(options.addTo)) {\n        return;\n      }\n\n      var parent = panel['mmParent'];\n\n      if (parent) {\n        //\tCheck if no counter already excists.\n        if (!parent.querySelector('.mm-counter')) {\n          var counter = create('span.mm-counter');\n          var btn = _dom_children(parent, '.mm-btn')[0];\n\n          if (btn) {\n            btn.prepend(counter);\n          }\n        }\n      }\n    });\n  }\n\n  if (options.count) {\n    var count = function count(panel) {\n      var panels = panel ? [panel] : _dom_children(_this.node.pnls, '.mm-panel');\n      panels.forEach(function (panel) {\n        var parent = panel['mmParent'];\n\n        if (!parent) {\n          return;\n        }\n\n        var counter = parent.querySelector('.mm-counter');\n\n        if (!counter) {\n          return;\n        }\n\n        var listitems = [];\n        _dom_children(panel, '.mm-listview').forEach(function (listview) {\n          listitems.push.apply(listitems, mmenu_counters_toConsumableArray(_dom_children(listview)));\n        });\n        counter.innerHTML = filterLI(listitems).length.toString();\n      });\n    };\n\n    this.bind('initListview:after', count);\n    this.bind('updateListview', count);\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/dividers/_options.js\n\n\n\nfunction dividers_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { dividers_options_typeof = function _typeof(obj) { return typeof obj; }; } else { dividers_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return dividers_options_typeof(obj); }\n\nvar dividers_options_options = {\n  add: false,\n  addTo: 'panels',\n  type: null\n};\n/* harmony default export */ var dividers_options = (dividers_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction dividers_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options\n    };\n  }\n\n  if (dividers_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (options.addTo == 'panels') {\n    options.addTo = '.mm-panel';\n  }\n\n  return options;\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/dividers/mmenu.dividers.js\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.dividers = dividers_options; //  Add the classnames.\n\nmmenu_oncanvas_Mmenu.configs.classNames.divider = 'Divider';\n/* harmony default export */ var mmenu_dividers = (function () {\n  var _this = this;\n\n  var options = dividers_options_extendShorthandOptions(this.opts.dividers);\n  this.opts.dividers = extend(options, mmenu_oncanvas_Mmenu.options.dividers); //\tRefactor divider classname\n\n  this.bind('initListview:after', function (panel) {\n    var listviews = _dom_children(panel, 'ul, ol');\n    listviews.forEach(function (listview) {\n      _dom_children(listview).forEach(function (listitem) {\n        reClass(listitem, _this.conf.classNames.divider, 'mm-divider');\n\n        if (listitem.matches('.mm-divider')) {\n          listitem.classList.remove('mm-listitem');\n        }\n      });\n    });\n  }); //\tAdd classname to the menu to specify the type of the dividers\n\n  if (options.type) {\n    this.bind('initMenu:after', function () {\n      _this.node.menu.classList.add('mm-menu_dividers-' + options.type);\n    });\n  } //\tAdd dividers\n\n\n  if (options.add) {\n    this.bind('initListview:after', function (panel) {\n      if (!panel.matches(options.addTo)) {\n        return;\n      }\n\n      find(panel, '.mm-divider').forEach(function (divider) {\n        divider.remove();\n      });\n      find(panel, '.mm-listview').forEach(function (listview) {\n        var lastletter = '',\n            listitems = _dom_children(listview);\n        filterLI(listitems).forEach(function (listitem) {\n          var letter = _dom_children(listitem, '.mm-listitem__text')[0].textContent.trim().toLowerCase()[0];\n\n          if (letter.length && letter != lastletter) {\n            lastletter = letter;\n            var divider = create('li.mm-divider');\n            divider.textContent = letter;\n            listview.insertBefore(divider, listitem);\n          }\n        });\n      });\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/drag/_options.js\n\n\n\nfunction drag_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { drag_options_typeof = function _typeof(obj) { return typeof obj; }; } else { drag_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return drag_options_typeof(obj); }\n\nvar drag_options_options = {\n  menu: {\n    open: false,\n    node: null,\n    maxStartPos: 100,\n    threshold: 50\n  },\n  panels: {\n    close: false\n  },\n  vendors: {\n    hammer: {}\n  }\n};\n/* harmony default export */ var drag_options = (drag_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction drag_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      menu: options,\n      panels: options\n    };\n  }\n\n  if (drag_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.menu == 'boolean') {\n    options.menu = {\n      open: options.menu\n    };\n  }\n\n  if (drag_options_typeof(options.menu) != 'object') {\n    options.menu = {};\n  }\n\n  if (typeof options.panels == 'boolean') {\n    options.panels = {\n      close: options.panels\n    };\n  }\n\n  if (drag_options_typeof(options.panels) != 'object') {\n    options.panels = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/drag/_configs.js\nvar drag_configs_configs = {\n  menu: {\n    width: {\n      perc: 0.8,\n      min: 140,\n      max: 440\n    },\n    height: {\n      perc: 0.8,\n      min: 140,\n      max: 880\n    }\n  }\n};\n/* harmony default export */ var drag_configs = (drag_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/drag/mmenu.drag.js\n\n\n\n\n\n //\tAdd the options and configs.\n\nmmenu_oncanvas_Mmenu.options.drag = drag_options;\nmmenu_oncanvas_Mmenu.configs.drag = drag_configs;\n/* harmony default export */ var mmenu_drag = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  if (typeof window['Hammer'] != 'function' || window['Hammer'].VERSION < 2) {\n    return;\n  }\n\n  var options = drag_options_extendShorthandOptions(this.opts.drag);\n  this.opts.drag = extend(options, mmenu_oncanvas_Mmenu.options.drag);\n  var configs = this.conf.drag;\n\n  function minMax(val, min, max) {\n    if (val < min) {\n      val = min;\n    }\n\n    if (val > max) {\n      val = max;\n    }\n\n    return val;\n  } //\tDrag open the menu\n\n\n  if (options.menu.open) {\n    this.bind('setPage:after', function () {\n      //\tdefaults for \"left\"\n      var drag = {\n        events: 'panleft panright',\n        typeLower: 'x',\n        typeUpper: 'X',\n        open_dir: 'right',\n        close_dir: 'left',\n        negative: false\n      };\n      var _dimension = 'width',\n          _winDimension = 'innerWidth',\n          _direction = drag.open_dir;\n\n      var doPanstart = function doPanstart(pos) {\n        if (pos <= options.menu.maxStartPos) {\n          _stage = 1;\n        }\n      };\n\n      var getSlideNodes = function getSlideNodes() {\n        return find(document.body, '.mm-slideout');\n      };\n\n      var _stage = 0,\n          _distance = 0,\n          _maxDistance = 0;\n      var new_distance, drag_distance; //\tFind menu position from Positioning extension\n\n      var x = _this.opts.extensions['all'];\n      var position = typeof x == 'undefined' ? 'left' : x.indexOf('mm-menu_position-right') > -1 ? 'right' : x.indexOf('mm-menu_position-top') > -1 ? 'top' : x.indexOf('mm-menu_position-bottom') > -1 ? 'bottom' : 'left';\n      var zposition = typeof x == 'undefined' ? 'back' : x.indexOf('mm-menu_position-top') > -1 || x.indexOf('mm-menu_position-bottom') > -1 || x.indexOf('mm-menu_position-front') > -1 ? 'front' : 'back';\n\n      switch (position) {\n        case 'top':\n        case 'bottom':\n          drag.events = 'panup pandown';\n          drag.typeLower = 'y';\n          drag.typeUpper = 'Y';\n          _dimension = 'height';\n          _winDimension = 'innerHeight';\n          break;\n      }\n\n      switch (position) {\n        case 'right':\n        case 'bottom':\n          drag.negative = true;\n\n          doPanstart = function doPanstart(pos) {\n            if (pos >= window[_winDimension] - options.menu.maxStartPos) {\n              _stage = 1;\n            }\n          };\n\n          break;\n      }\n\n      switch (position) {\n        case 'right':\n          drag.open_dir = 'left';\n          drag.close_dir = 'right';\n          break;\n\n        case 'top':\n          drag.open_dir = 'down';\n          drag.close_dir = 'up';\n          break;\n\n        case 'bottom':\n          drag.open_dir = 'up';\n          drag.close_dir = 'down';\n          break;\n      }\n\n      switch (zposition) {\n        case 'front':\n          getSlideNodes = function getSlideNodes() {\n            return [this.node.menu];\n          };\n\n          break;\n      }\n\n      var slideOutNodes;\n      var dragNode = valueOrFn(_this.node.menu, options.menu.node, mmenu_oncanvas_Mmenu.node.page);\n\n      if (typeof dragNode == 'string') {\n        dragNode = document.querySelector(dragNode);\n      } //\tBind events\n\n\n      var _hammer = new window['Hammer'](dragNode, _this.opts.drag.vendors.hammer);\n\n      _hammer.on('panstart', function (evnt) {\n        doPanstart.call(_this, evnt.center[drag.typeLower]);\n        slideOutNodes = getSlideNodes.call(_this);\n        _direction = drag.open_dir;\n      });\n\n      _hammer.on(drag.events + ' panend', function (evnt) {\n        if (_stage > 0) {\n          evnt.preventDefault();\n        }\n      });\n\n      _hammer.on(drag.events, function (evnt) {\n        new_distance = evnt['delta' + drag.typeUpper];\n\n        if (drag.negative) {\n          new_distance = -new_distance;\n        }\n\n        if (new_distance != _distance) {\n          _direction = new_distance >= _distance ? drag.open_dir : drag.close_dir;\n        }\n\n        _distance = new_distance;\n\n        if (_distance > options.menu.threshold) {\n          if (_stage == 1) {\n            if (_this.node.wrpr.matches('.mm-wrapper_opened')) {\n              return;\n            }\n\n            _stage = 2;\n\n            _this._openSetup();\n\n            _this.trigger('open:start');\n\n            _this.node.wrpr.classList.add('mm-wrapper_dragging');\n\n            _maxDistance = minMax(window[_winDimension] * configs.menu[_dimension].perc, configs.menu[_dimension].min, configs.menu[_dimension].max);\n          }\n        }\n\n        if (_stage == 2) {\n          drag_distance = minMax(_distance, 10, _maxDistance) - (zposition == 'front' ? _maxDistance : 0);\n\n          if (drag.negative) {\n            drag_distance = -drag_distance;\n          }\n\n          var css_value = 'translate' + drag.typeUpper + '(' + drag_distance + 'px )';\n          slideOutNodes.forEach(function (node) {\n            node.style['-webkit-transform'] = '-webkit-' + css_value;\n            node.style['transform'] = css_value;\n          });\n        }\n      });\n\n      _hammer.on('panend', function (evnt) {\n        if (_stage == 2) {\n          _this.node.wrpr.classList.remove('mm-wrapper_dragging');\n\n          slideOutNodes.forEach(function (node) {\n            node.style['-webkit-transform'] = '';\n            node.style['transform'] = '';\n          });\n\n          _this[_direction == drag.open_dir ? '_openStart' : 'close']();\n        }\n\n        _stage = 0;\n      });\n    });\n  } //\tDrag close panels\n\n\n  if (options.panels.close) {\n    this.bind('initPanel:after', function (panel) {\n      var parent = panel['mmParent '];\n\n      if (parent) {\n        parent = parent.closest('.mm-panel');\n\n        var _hammer = new window['Hammer'](panel, _this.opts.drag.vendors.hammer),\n            timeout = null;\n\n        _hammer.on('panright', function (evnt) {\n          if (timeout) {\n            return;\n          }\n\n          _this.openPanel(parent); //\tprevent dragging while panel still open.\n\n\n          timeout = setTimeout(function () {\n            clearTimeout(timeout);\n            timeout = null;\n          }, _this.conf.openingInterval + _this.conf.transitionDuration);\n        });\n      }\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/dropdown/_options.js\n\n\n\nfunction dropdown_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { dropdown_options_typeof = function _typeof(obj) { return typeof obj; }; } else { dropdown_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return dropdown_options_typeof(obj); }\n\nvar dropdown_options_options = {\n  drop: false,\n  fitViewport: true,\n  event: 'click',\n  position: {},\n  tip: true\n};\n/* harmony default export */ var dropdown_options = (dropdown_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction dropdown_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean' && options) {\n    options = {\n      drop: options\n    };\n  }\n\n  if (dropdown_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.position == 'string') {\n    options.position = {\n      of: options.position\n    };\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/dropdown/_configs.js\nvar dropdown_configs_configs = {\n  offset: {\n    button: {\n      x: -5,\n      y: 5\n    },\n    viewport: {\n      x: 20,\n      y: 20\n    }\n  },\n  height: {\n    max: 880\n  },\n  width: {\n    max: 440\n  }\n};\n/* harmony default export */ var dropdown_configs = (dropdown_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/dropdown/mmenu.dropdown.js\n\n\n\n\n\n\n\n\n\n\nfunction mmenu_dropdown_toConsumableArray(arr) { return mmenu_dropdown_arrayWithoutHoles(arr) || mmenu_dropdown_iterableToArray(arr) || mmenu_dropdown_unsupportedIterableToArray(arr) || mmenu_dropdown_nonIterableSpread(); }\n\nfunction mmenu_dropdown_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_dropdown_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_dropdown_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_dropdown_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_dropdown_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_dropdown_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_dropdown_arrayLikeToArray(arr); }\n\nfunction mmenu_dropdown_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n //\tAdd the options and configs.\n\nmmenu_oncanvas_Mmenu.options.dropdown = dropdown_options;\nmmenu_oncanvas_Mmenu.configs.dropdown = dropdown_configs;\n/* harmony default export */ var mmenu_dropdown = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  var options = dropdown_options_extendShorthandOptions(this.opts.dropdown);\n  this.opts.dropdown = extend(options, mmenu_oncanvas_Mmenu.options.dropdown);\n  var configs = this.conf.dropdown;\n\n  if (!options.drop) {\n    return;\n  }\n\n  var button;\n  this.bind('initMenu:after', function () {\n    _this.node.menu.classList.add('mm-menu_dropdown');\n\n    if (typeof options.position.of != 'string') {\n      var id = originalId(_this.node.menu.id);\n\n      if (id && id.length) {\n        options.position.of = '[href=\"#' + id + '\"]';\n      }\n    }\n\n    if (typeof options.position.of != 'string') {\n      return;\n    } //\tGet the button to put the menu next to\n\n\n    button = find(document.body, options.position.of)[0]; //\tEmulate hover effect\n\n    var events = options.event.split(' ');\n\n    if (events.length == 1) {\n      events[1] = events[0];\n    }\n\n    if (events[0] == 'hover') {\n      button.addEventListener('mouseenter', function (evnt) {\n        _this.open();\n      }, {\n        passive: true\n      });\n    }\n\n    if (events[1] == 'hover') {\n      _this.node.menu.addEventListener('mouseleave', function (evnt) {\n        _this.close();\n      }, {\n        passive: true\n      });\n    }\n  }); //\tAdd/remove classname and style when opening/closing the menu\n\n  this.bind('open:start', function () {\n    _this.node.menu['mmStyle'] = _this.node.menu.getAttribute('style');\n\n    _this.node.wrpr.classList.add('mm-wrapper_dropdown');\n  });\n  this.bind('close:finish', function () {\n    _this.node.menu.setAttribute('style', _this.node.menu['mmStyle']);\n\n    _this.node.wrpr.classList.remove('mm-wrapper_dropdown');\n  });\n  /**\n   * Find the position (x, y) and sizes (width, height) for the menu.\n   *\n   * @param  {string} dir The direction to measure (\"x\" for horizontal, \"y\" for vertical)\n   * @param  {object} obj The object where (previously) measured values are stored.\n   * @return {object}\t\tThe object where measered values are stored.\n   */\n\n  var getPosition = function getPosition(dir, obj) {\n    var css = obj[0],\n        cls = obj[1];\n\n    var _scrollPos = dir == 'x' ? 'scrollX' : 'scrollY',\n        _outerSize = dir == 'x' ? 'offsetWidth' : 'offsetHeight',\n        _startPos = dir == 'x' ? 'left' : 'top',\n        _stopPos = dir == 'x' ? 'right' : 'bottom',\n        _size = dir == 'x' ? 'width' : 'height',\n        _winSize = dir == 'x' ? 'innerWidth' : 'innerHeight',\n        _maxSize = dir == 'x' ? 'maxWidth' : 'maxHeight',\n        _position = null;\n\n    var scrollPos = window[_scrollPos],\n        startPos = offset(button, _startPos) - scrollPos,\n        stopPos = startPos + button[_outerSize],\n        windowSize = window[_winSize];\n    /** Offset for the menu relative to the button. */\n\n    var offs = configs.offset.button[dir] + configs.offset.viewport[dir]; //\tPosition set in option\n\n    if (options.position[dir]) {\n      switch (options.position[dir]) {\n        case 'left':\n        case 'bottom':\n          _position = 'after';\n          break;\n\n        case 'right':\n        case 'top':\n          _position = 'before';\n          break;\n      }\n    } //\tPosition not set in option, find most space\n\n\n    if (_position === null) {\n      _position = startPos + (stopPos - startPos) / 2 < windowSize / 2 ? 'after' : 'before';\n    } //\tSet position and max\n\n\n    var val, max;\n\n    if (_position == 'after') {\n      val = dir == 'x' ? startPos : stopPos;\n      max = windowSize - (val + offs);\n      css[_startPos] = val + configs.offset.button[dir] + 'px';\n      css[_stopPos] = 'auto';\n\n      if (options.tip) {\n        cls.push('mm-menu_tip-' + (dir == 'x' ? 'left' : 'top'));\n      }\n    } else {\n      val = dir == 'x' ? stopPos : startPos;\n      max = val - offs;\n      css[_stopPos] = 'calc( 100% - ' + (val - configs.offset.button[dir]) + 'px )';\n      css[_startPos] = 'auto';\n\n      if (options.tip) {\n        cls.push('mm-menu_tip-' + (dir == 'x' ? 'right' : 'bottom'));\n      }\n    }\n\n    if (options.fitViewport) {\n      css[_maxSize] = Math.min(configs[_size].max, max) + 'px';\n    }\n\n    return [css, cls];\n  };\n\n  function position() {\n    if (!this.vars.opened) {\n      return;\n    }\n\n    this.node.menu.setAttribute('style', this.node.menu['mmStyle']);\n    var obj = [{}, []];\n    obj = getPosition.call(this, 'y', obj);\n    obj = getPosition.call(this, 'x', obj);\n\n    for (var s in obj[0]) {\n      this.node.menu.style[s] = obj[0][s];\n    }\n\n    if (options.tip) {\n      var _this$node$menu$class;\n\n      this.node.menu.classList.remove('mm-menu_tip-left', 'mm-menu_tip-right', 'mm-menu_tip-top', 'mm-menu_tip-bottom');\n\n      (_this$node$menu$class = this.node.menu.classList).add.apply(_this$node$menu$class, mmenu_dropdown_toConsumableArray(obj[1]));\n    }\n  }\n\n  this.bind('open:start', position);\n  window.addEventListener('resize', function (evnt) {\n    position.call(_this);\n  }, {\n    passive: true\n  });\n\n  if (!this.opts.offCanvas.blockUI) {\n    window.addEventListener('scroll', function (evnt) {\n      position.call(_this);\n    }, {\n      passive: true\n    });\n  }\n});\n// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.string.fixed.js\nvar es6_string_fixed = __webpack_require__(156);\n\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/fixedelements/_configs.js\nvar fixedelements_configs_configs = {\n  fixed: {\n    insertMethod: 'append',\n    insertSelector: 'body'\n  },\n  sticky: {\n    offset: 0\n  }\n};\n/* harmony default export */ var fixedelements_configs = (fixedelements_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/fixedelements/mmenu.fixedelements.js\n\n\n\n //\tAdd the configs.\n\nmmenu_oncanvas_Mmenu.configs.fixedElements = fixedelements_configs; //\tAdd the classnames.\n\nmmenu_oncanvas_Mmenu.configs.classNames.fixedElements = {\n  fixed: 'Fixed',\n  sticky: 'Sticky'\n};\n/* harmony default export */ var mmenu_fixedelements = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  var configs = this.conf.fixedElements;\n\n  var _fixd, _stck, fixed, stick, wrppr;\n\n  this.bind('setPage:after', function (page) {\n    //\tFixed elements\n    _fixd = _this.conf.classNames.fixedElements.fixed;\n    wrppr = find(document, configs.fixed.insertSelector)[0];\n    fixed = find(page, '.' + _fixd);\n    fixed.forEach(function (fxd) {\n      reClass(fxd, _fixd, 'mm-slideout');\n      wrppr[configs.fixed.insertMethod](fxd);\n    }); //\tSticky elements\n\n    _stck = _this.conf.classNames.fixedElements.sticky;\n    find(page, '.' + _stck).forEach(function (stick) {\n      reClass(stick, _stck, 'mm-sticky');\n    });\n    stick = find(page, '.mm-sticky');\n  });\n  this.bind('open:start', function () {\n    if (stick.length) {\n      if (window.getComputedStyle(_this.node.wrpr).overflow == 'hidden') {\n        var scrollTop = window.scrollY + configs.sticky.offset;\n        stick.forEach(function (element) {\n          element.style.top = parseInt(window.getComputedStyle(element).top, 10) + scrollTop + 'px';\n        });\n      }\n    }\n  });\n  this.bind('close:finish', function () {\n    stick.forEach(function (element) {\n      element.style.top = '';\n    });\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/iconbar/_options.js\n\nvar iconbar_options_options = {\n  use: false,\n  top: [],\n  bottom: [],\n  position: 'left',\n  type: 'default'\n};\n/* harmony default export */ var iconbar_options = (iconbar_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction iconbar_options_extendShorthandOptions(options) {\n  if (type(options) == 'array') {\n    options = {\n      use: true,\n      top: options\n    };\n  }\n\n  if (type(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.use == 'undefined') {\n    options.use = true;\n  }\n\n  if (typeof options.use == 'boolean' && options.use) {\n    options.use = true;\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/iconbar/mmenu.iconbar.js\n\n\n\n\n\n //  Add the options.\n\nmmenu_oncanvas_Mmenu.options.iconbar = iconbar_options;\n/* harmony default export */ var mmenu_iconbar = (function () {\n  var _this = this;\n\n  var options = iconbar_options_extendShorthandOptions(this.opts.iconbar);\n  this.opts.iconbar = extend(options, mmenu_oncanvas_Mmenu.options.iconbar);\n\n  if (!options.use) {\n    return;\n  }\n\n  var iconbar;\n  ['top', 'bottom'].forEach(function (position, n) {\n    var ctnt = options[position]; //\tExtend shorthand options\n\n    if (type(ctnt) != 'array') {\n      ctnt = [ctnt];\n    } //\tCreate node\n\n\n    var part = create('div.mm-iconbar__' + position); //\tAdd content\n\n    for (var c = 0, l = ctnt.length; c < l; c++) {\n      if (typeof ctnt[c] == 'string') {\n        part.innerHTML += ctnt[c];\n      } else {\n        part.append(ctnt[c]);\n      }\n    }\n\n    if (part.children.length) {\n      if (!iconbar) {\n        iconbar = create('div.mm-iconbar');\n      }\n\n      iconbar.append(part);\n    }\n  }); //\tAdd to menu\n\n  if (iconbar) {\n    //\tAdd the iconbar.\n    this.bind('initMenu:after', function () {\n      _this.node.menu.prepend(iconbar);\n    }); //\tEn-/disable the iconbar.\n\n    var classname = 'mm-menu_iconbar-' + options.position;\n\n    var enable = function enable() {\n      _this.node.menu.classList.add(classname);\n\n      mmenu_oncanvas_Mmenu.sr_aria(iconbar, 'hidden', false);\n    };\n\n    var disable = function disable() {\n      _this.node.menu.classList.remove(classname);\n\n      mmenu_oncanvas_Mmenu.sr_aria(iconbar, 'hidden', true);\n    };\n\n    if (typeof options.use == 'boolean') {\n      this.bind('initMenu:after', enable);\n    } else {\n      _matchmedia_add(options.use, enable, disable);\n    } //\tTabs\n\n\n    if (options.type == 'tabs') {\n      iconbar.classList.add('mm-iconbar_tabs');\n      iconbar.addEventListener('click', function (evnt) {\n        var anchor = evnt.target;\n\n        if (!anchor.matches('a')) {\n          return;\n        }\n\n        if (anchor.matches('.mm-iconbar__tab_selected')) {\n          evnt.stopImmediatePropagation();\n          return;\n        }\n\n        try {\n          var panel = _this.node.menu.querySelector(anchor.getAttribute('href'))[0];\n\n          if (panel && panel.matches('.mm-panel')) {\n            evnt.preventDefault();\n            evnt.stopImmediatePropagation();\n\n            _this.openPanel(panel, false);\n          }\n        } catch (err) {}\n      });\n\n      var selectTab = function selectTab(panel) {\n        find(iconbar, 'a').forEach(function (anchor) {\n          anchor.classList.remove('mm-iconbar__tab_selected');\n        });\n        var anchor = find(iconbar, '[href=\"#' + panel.id + '\"]')[0];\n\n        if (anchor) {\n          anchor.classList.add('mm-iconbar__tab_selected');\n        } else {\n          var parent = panel['mmParent'];\n\n          if (parent) {\n            selectTab(parent.closest('.mm-panel'));\n          }\n        }\n      };\n\n      this.bind('openPanel:start', selectTab);\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/iconpanels/_options.js\n\n\n\nfunction iconpanels_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { iconpanels_options_typeof = function _typeof(obj) { return typeof obj; }; } else { iconpanels_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return iconpanels_options_typeof(obj); }\n\nvar iconpanels_options_options = {\n  add: false,\n  blockPanel: true,\n  hideDivider: false,\n  hideNavbar: true,\n  visible: 3\n};\n/* harmony default export */ var iconpanels_options = (iconpanels_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction iconpanels_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options\n    };\n  }\n\n  if (typeof options == 'number' || typeof options == 'string') {\n    options = {\n      add: true,\n      visible: options\n    };\n  }\n\n  if (iconpanels_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/iconpanels/mmenu.iconpanels.js\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.iconPanels = iconpanels_options;\n/* harmony default export */ var mmenu_iconpanels = (function () {\n  var _this = this;\n\n  var options = iconpanels_options_extendShorthandOptions(this.opts.iconPanels);\n  this.opts.iconPanels = extend(options, mmenu_oncanvas_Mmenu.options.iconPanels);\n  var keepFirst = false;\n\n  if (options.visible == 'first') {\n    keepFirst = true;\n    options.visible = 1;\n  }\n\n  options.visible = Math.min(3, Math.max(1, options.visible));\n  options.visible++; //\tAdd the iconpanels\n\n  if (options.add) {\n    this.bind('initMenu:after', function () {\n      var _this$node$menu$class;\n\n      var classnames = ['mm-menu_iconpanel'];\n\n      if (options.hideNavbar) {\n        classnames.push('mm-menu_hidenavbar');\n      }\n\n      if (options.hideDivider) {\n        classnames.push('mm-menu_hidedivider');\n      }\n\n      (_this$node$menu$class = _this.node.menu.classList).add.apply(_this$node$menu$class, classnames);\n    });\n    var classnames = [];\n\n    if (!keepFirst) {\n      for (var i = 0; i <= options.visible; i++) {\n        classnames.push('mm-panel_iconpanel-' + i);\n      }\n    }\n\n    this.bind('openPanel:start', function (panel) {\n      var panels = _dom_children(_this.node.pnls, '.mm-panel');\n      panel = panel || panels[0];\n\n      if (panel.parentElement.matches('.mm-listitem_vertical')) {\n        return;\n      }\n\n      if (keepFirst) {\n        panels.forEach(function (panel, p) {\n          panel.classList[p == 0 ? 'add' : 'remove']('mm-panel_iconpanel-first');\n        });\n      } else {\n        //\tRemove the \"iconpanel\" classnames from all panels.\n        panels.forEach(function (panel) {\n          var _panel$classList;\n\n          (_panel$classList = panel.classList).remove.apply(_panel$classList, classnames);\n        }); //\tFilter out panels that are not opened.\n\n        panels = panels.filter(function (panel) {\n          return panel.matches('.mm-panel_opened-parent');\n        }); //\tAdd the current panel to the list.\n\n        var panelAdded = false;\n        panels.forEach(function (elem) {\n          if (panel === elem) {\n            panelAdded = true;\n          }\n        });\n\n        if (!panelAdded) {\n          panels.push(panel);\n        } //\tRemove the \"hidden\" classname from all opened panels.\n\n\n        panels.forEach(function (panel) {\n          panel.classList.remove('mm-hidden');\n        }); //\tSlice the opened panels to the max visible amount.\n\n        panels = panels.slice(-options.visible); //\tAdd the \"iconpanel\" classnames.\n\n        panels.forEach(function (panel, p) {\n          panel.classList.add('mm-panel_iconpanel-' + p);\n        });\n      }\n    });\n    this.bind('initListview:after', function (panel) {\n      if (options.blockPanel && !panel.parentElement.matches('.mm-listitem_vertical') && !_dom_children(panel, '.mm-panel__blocker')[0]) {\n        var blocker = create('a.mm-panel__blocker');\n        blocker.setAttribute('href', '#' + panel.closest('.mm-panel').id);\n        panel.prepend(blocker);\n      }\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/keyboardnavigation/_options.js\n\n\n\nfunction keyboardnavigation_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { keyboardnavigation_options_typeof = function _typeof(obj) { return typeof obj; }; } else { keyboardnavigation_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return keyboardnavigation_options_typeof(obj); }\n\nvar keyboardnavigation_options_options = {\n  enable: false,\n  enhance: false\n};\n/* harmony default export */ var keyboardnavigation_options = (keyboardnavigation_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction keyboardnavigation_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean' || typeof options == 'string') {\n    options = {\n      enable: options\n    };\n  }\n\n  if (keyboardnavigation_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/keyboardnavigation/mmenu.keyboardnavigation.js\n\n\n\n\n\n\n\n\n\nfunction mmenu_keyboardnavigation_toConsumableArray(arr) { return mmenu_keyboardnavigation_arrayWithoutHoles(arr) || mmenu_keyboardnavigation_iterableToArray(arr) || mmenu_keyboardnavigation_unsupportedIterableToArray(arr) || mmenu_keyboardnavigation_nonIterableSpread(); }\n\nfunction mmenu_keyboardnavigation_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_keyboardnavigation_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_keyboardnavigation_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_keyboardnavigation_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_keyboardnavigation_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_keyboardnavigation_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_keyboardnavigation_arrayLikeToArray(arr); }\n\nfunction mmenu_keyboardnavigation_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n //  Add the options.\n\nmmenu_oncanvas_Mmenu.options.keyboardNavigation = keyboardnavigation_options;\n/* harmony default export */ var mmenu_keyboardnavigation = (function () {\n  var _this = this;\n\n  //\tKeyboard navigation on touchscreens opens the virtual keyboard :/\n  //\tLets prevent that.\n  if (touch) {\n    return;\n  }\n\n  var options = keyboardnavigation_options_extendShorthandOptions(this.opts.keyboardNavigation);\n  this.opts.keyboardNavigation = extend(options, mmenu_oncanvas_Mmenu.options.keyboardNavigation); //\tEnable keyboard navigation\n\n  if (options.enable) {\n    var menuStart = create('button.mm-tabstart.mm-sronly'),\n        menuEnd = create('button.mm-tabend.mm-sronly'),\n        blockerEnd = create('button.mm-tabend.mm-sronly');\n    this.bind('initMenu:after', function () {\n      if (options.enhance) {\n        _this.node.menu.classList.add('mm-menu_keyboardfocus');\n      }\n\n      mmenu_keyboardnavigation_initWindow.call(_this, options.enhance);\n    });\n    this.bind('initOpened:before', function () {\n      _this.node.menu.prepend(menuStart);\n\n      _this.node.menu.append(menuEnd);\n\n      _dom_children(_this.node.menu, '.mm-navbars-top, .mm-navbars-bottom').forEach(function (navbars) {\n        navbars.querySelectorAll('.mm-navbar__title').forEach(function (title) {\n          title.setAttribute('tabindex', '-1');\n        });\n      });\n    });\n    this.bind('initBlocker:after', function () {\n      mmenu_oncanvas_Mmenu.node.blck.append(blockerEnd);\n      _dom_children(mmenu_oncanvas_Mmenu.node.blck, 'a')[0].classList.add('mm-tabstart');\n    });\n    var focusable = 'input, select, textarea, button, label, a[href]';\n\n    var setFocus = function setFocus(panel) {\n      panel = panel || _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n      var focus = null; //\tFocus already is on an element in a navbar in this menu.\n\n      var navbar = document.activeElement.closest('.mm-navbar');\n\n      if (navbar) {\n        if (navbar.closest('.mm-menu') == _this.node.menu) {\n          return;\n        }\n      } //\tSet the focus to the first focusable element by default.\n\n\n      if (options.enable == 'default') {\n        //\tFirst visible anchor in a listview in the current panel.\n        focus = find(panel, '.mm-listview a[href]:not(.mm-hidden)')[0]; //\tFirst focusable and visible element in the current panel.\n\n        if (!focus) {\n          focus = find(panel, focusable + ':not(.mm-hidden)')[0];\n        } //\tFirst focusable and visible element in a navbar.\n\n\n        if (!focus) {\n          var elements = [];\n          _dom_children(_this.node.menu, '.mm-navbars_top, .mm-navbars_bottom').forEach(function (navbar) {\n            elements.push.apply(elements, mmenu_keyboardnavigation_toConsumableArray(find(navbar, focusable + ':not(.mm-hidden)')));\n          });\n          focus = elements[0];\n        }\n      } //\tDefault.\n\n\n      if (!focus) {\n        focus = _dom_children(_this.node.menu, '.mm-tabstart')[0];\n      }\n\n      if (focus) {\n        focus.focus();\n      }\n    };\n\n    this.bind('open:finish', setFocus);\n    this.bind('openPanel:finish', setFocus); //\tAdd screenreader / aria support.\n\n    this.bind('initOpened:after:sr-aria', function () {\n      [_this.node.menu, mmenu_oncanvas_Mmenu.node.blck].forEach(function (element) {\n        _dom_children(element, '.mm-tabstart, .mm-tabend').forEach(function (tabber) {\n          mmenu_oncanvas_Mmenu.sr_aria(tabber, 'hidden', true);\n          mmenu_oncanvas_Mmenu.sr_role(tabber, 'presentation');\n        });\n      });\n    });\n  }\n});\n/**\n * Initialize the window for keyboard navigation.\n * @param {boolean} enhance - Whether or not to also rich enhance the keyboard behavior.\n **/\n\nvar mmenu_keyboardnavigation_initWindow = function initWindow(enhance) {\n  var _this2 = this;\n\n  //\tRe-enable tabbing in general\n  off(document.body, 'keydown.tabguard'); //\tIntersept the target when tabbing.\n\n  off(document.body, 'focusin.tabguard');\n  on(document.body, 'focusin.tabguard', function (evnt) {\n    if (_this2.node.wrpr.matches('.mm-wrapper_opened')) {\n      var target = evnt.target;\n\n      if (target.matches('.mm-tabend')) {\n        var next; //\tJump from menu to blocker.\n\n        if (target.parentElement.matches('.mm-menu')) {\n          if (mmenu_oncanvas_Mmenu.node.blck) {\n            next = mmenu_oncanvas_Mmenu.node.blck;\n          }\n        } //\tJump to opened menu.\n\n\n        if (target.parentElement.matches('.mm-wrapper__blocker')) {\n          next = find(document.body, '.mm-menu_offcanvas.mm-menu_opened')[0];\n        } //\tIf no available element found, stay in current element.\n\n\n        if (!next) {\n          next = target.parentElement;\n        }\n\n        if (next) {\n          _dom_children(next, '.mm-tabstart')[0].focus();\n        }\n      }\n    }\n  }); //\tAdd Additional keyboard behavior.\n\n  off(document.body, 'keydown.navigate');\n  on(document.body, 'keydown.navigate', function (evnt) {\n    var target = evnt.target;\n    var menu = target.closest('.mm-menu');\n\n    if (menu) {\n      var api = menu['mmApi'];\n\n      if (!target.matches('input, textarea')) {\n        switch (evnt.keyCode) {\n          //\tpress enter to toggle and check\n          case 13:\n            if (target.matches('.mm-toggle') || target.matches('.mm-check')) {\n              target.dispatchEvent(new Event('click'));\n            }\n\n            break;\n          //\tprevent spacebar or arrows from scrolling the page\n\n          case 32: //\tspace\n\n          case 37: //\tleft\n\n          case 38: //\ttop\n\n          case 39: //\tright\n\n          case 40:\n            //\tbottom\n            evnt.preventDefault();\n            break;\n        }\n      }\n\n      if (enhance) {\n        //\tspecial case for input\n        if (target.matches('input')) {\n          switch (evnt.keyCode) {\n            //\tempty searchfield with esc\n            case 27:\n              target.value = '';\n              break;\n          }\n        } else {\n          var _api = menu['mmApi'];\n\n          switch (evnt.keyCode) {\n            //\tclose submenu with backspace\n            case 8:\n              var parent = find(menu, '.mm-panel_opened')[0]['mmParent'];\n\n              if (parent) {\n                _api.openPanel(parent.closest('.mm-panel'));\n              }\n\n              break;\n            //\tclose menu with esc\n\n            case 27:\n              if (menu.matches('.mm-menu_offcanvas')) {\n                _api.close();\n              }\n\n              break;\n          }\n        }\n      }\n    }\n  });\n};\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/lazysubmenus/_options.js\n\n\n\nfunction lazysubmenus_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { lazysubmenus_options_typeof = function _typeof(obj) { return typeof obj; }; } else { lazysubmenus_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return lazysubmenus_options_typeof(obj); }\n\nvar lazysubmenus_options_options = {\n  load: false\n};\n/* harmony default export */ var lazysubmenus_options = (lazysubmenus_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction lazysubmenus_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      load: options\n    };\n  }\n\n  if (lazysubmenus_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/lazysubmenus/mmenu.lazysubmenus.js\n\n\n\n\n\n\n\n\n\nfunction mmenu_lazysubmenus_toConsumableArray(arr) { return mmenu_lazysubmenus_arrayWithoutHoles(arr) || mmenu_lazysubmenus_iterableToArray(arr) || mmenu_lazysubmenus_unsupportedIterableToArray(arr) || mmenu_lazysubmenus_nonIterableSpread(); }\n\nfunction mmenu_lazysubmenus_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_lazysubmenus_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_lazysubmenus_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_lazysubmenus_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_lazysubmenus_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_lazysubmenus_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_lazysubmenus_arrayLikeToArray(arr); }\n\nfunction mmenu_lazysubmenus_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.lazySubmenus = lazysubmenus_options;\n/* harmony default export */ var mmenu_lazysubmenus = (function () {\n  var _this = this;\n\n  var options = lazysubmenus_options_extendShorthandOptions(this.opts.lazySubmenus);\n  this.opts.lazySubmenus = extend(options, mmenu_oncanvas_Mmenu.options.lazySubmenus);\n\n  if (options.load) {\n    //\tPrevent all sub panels from being initialized.\n    this.bind('initMenu:after', function () {\n      var panels = []; //\tFind all potential subpanels.\n\n      find(_this.node.pnls, 'li').forEach(function (listitem) {\n        panels.push.apply(panels, mmenu_lazysubmenus_toConsumableArray(_dom_children(listitem, _this.conf.panelNodetype.join(', '))));\n      }); //\tFilter out all non-panels and add the lazyload classes\n\n      panels.filter(function (panel) {\n        return !panel.matches('.mm-listview_inset');\n      }).filter(function (panel) {\n        return !panel.matches('.mm-nolistview');\n      }).filter(function (panel) {\n        return !panel.matches('.mm-nopanel');\n      }).forEach(function (panel) {\n        panel.classList.add('mm-panel_lazysubmenu', 'mm-nolistview', 'mm-nopanel');\n      });\n    }); //\tPrepare current and one level sub panels for initPanels\n\n    this.bind('initPanels:before', function () {\n      var panels = _dom_children(_this.node.pnls, _this.conf.panelNodetype.join(', '));\n      panels.forEach(function (panel) {\n        var filter = '.mm-panel_lazysubmenu',\n            children = find(panel, filter);\n\n        if (panel.matches(filter)) {\n          children.unshift(panel);\n        }\n\n        children.filter(function (child) {\n          return !child.matches('.mm-panel_lazysubmenu .mm-panel_lazysubmenu');\n        }).forEach(function (child) {\n          child.classList.remove('mm-panel_lazysubmenu', 'mm-nolistview', 'mm-nopanel');\n        });\n      });\n    }); //\tinitPanels for the default opened panel\n\n    this.bind('initOpened:before', function () {\n      var panels = [];\n      find(_this.node.pnls, '.' + _this.conf.classNames.selected).forEach(function (listitem) {\n        panels.push.apply(panels, mmenu_lazysubmenus_toConsumableArray(_dom_parents(listitem, '.mm-panel_lazysubmenu')));\n      });\n\n      if (panels.length) {\n        panels.forEach(function (panel) {\n          panel.classList.remove('mm-panel_lazysubmenu', 'mm-nolistview mm-nopanel');\n        });\n\n        _this.initPanel(panels[panels.length - 1]);\n      }\n    }); //\tinitPanels for current- and sub panels before openPanel\n\n    this.bind('openPanel:before', function (panel) {\n      var filter = '.mm-panel_lazysubmenu',\n          panels = find(panel, filter);\n\n      if (panel.matches(filter)) {\n        panels.unshift(panel);\n      }\n\n      panels = panels.filter(function (panel) {\n        return !panel.matches('.mm-panel_lazysubmenu .mm-panel_lazysubmenu');\n      });\n      panels.forEach(function (panel) {\n        _this.initPanel(panel);\n      });\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_options.js\n\n\n\nfunction navbars_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { navbars_options_typeof = function _typeof(obj) { return typeof obj; }; } else { navbars_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return navbars_options_typeof(obj); }\n\nvar navbars_options_options = [];\n/* harmony default export */ var navbars_options = (navbars_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction navbars_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean' && options) {\n    options = {};\n  }\n\n  if (navbars_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.content == 'undefined') {\n    options.content = ['prev', 'title'];\n  }\n\n  if (!(options.content instanceof Array)) {\n    options.content = [options.content];\n  }\n\n  if (typeof options.use == 'undefined') {\n    options.use = true;\n  }\n\n  if (typeof options.use == 'boolean' && options.use) {\n    options.use = true;\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_configs.js\nvar navbars_configs_configs = {\n  breadcrumbs: {\n    separator: '/',\n    removeFirst: false\n  }\n};\n/* harmony default export */ var navbars_configs = (navbars_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.breadcrumbs.js\n\n\n/* harmony default export */ var _navbar_breadcrumbs = (function (navbar) {\n  var _this = this;\n\n  //\tAdd content\n  var breadcrumbs = create('div.mm-navbar__breadcrumbs');\n  navbar.append(breadcrumbs);\n  this.bind('initNavbar:after', function (panel) {\n    if (panel.querySelector('.mm-navbar__breadcrumbs')) {\n      return;\n    }\n\n    _dom_children(panel, '.mm-navbar')[0].classList.add('mm-hidden');\n    var crumbs = [],\n        breadcrumbs = create('span.mm-navbar__breadcrumbs'),\n        current = panel,\n        first = true;\n\n    while (current) {\n      if (!current.matches('.mm-panel')) {\n        current = current.closest('.mm-panel');\n      }\n\n      if (!current.parentElement.matches('.mm-listitem_vertical')) {\n        var text = find(current, '.mm-navbar__title')[0].textContent;\n\n        if (text.length) {\n          crumbs.unshift(first ? '<span>' + text + '</span>' : '<a href=\"#' + current.id + '\">' + text + '</a>');\n        }\n\n        first = false;\n      }\n\n      current = current['mmParent'];\n    }\n\n    if (_this.conf.navbars.breadcrumbs.removeFirst) {\n      crumbs.shift();\n    }\n\n    breadcrumbs.innerHTML = crumbs.join('<span class=\"mm-separator\">' + _this.conf.navbars.breadcrumbs.separator + '</span>');\n    _dom_children(panel, '.mm-navbar')[0].append(breadcrumbs);\n  }); //\tUpdate for to opened panel\n\n  this.bind('openPanel:start', function (panel) {\n    var crumbs = panel.querySelector('.mm-navbar__breadcrumbs');\n\n    if (crumbs) {\n      breadcrumbs.innerHTML = crumbs.innerHTML;\n    }\n  }); //\tAdd screenreader / aria support\n\n  this.bind('initNavbar:after:sr-aria', function (panel) {\n    find(panel, '.mm-breadcrumbs a').forEach(function (anchor) {\n      mmenu_oncanvas_Mmenu.sr_aria(anchor, 'owns', anchor.getAttribute('href').slice(1));\n    });\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.close.js\n\n\n/* harmony default export */ var _navbar_close = (function (navbar) {\n  var _this = this;\n\n  //\tAdd content\n  var close = create('a.mm-btn.mm-btn_close.mm-navbar__btn');\n  navbar.append(close); //\tUpdate to page node\n\n  this.bind('setPage:after', function (page) {\n    close.setAttribute('href', '#' + page.id);\n  }); //\tAdd screenreader / text support\n\n  this.bind('setPage:after:sr-text', function () {\n    close.innerHTML = mmenu_oncanvas_Mmenu.sr_text(_this.i18n(_this.conf.screenReader.text.closeMenu));\n    mmenu_oncanvas_Mmenu.sr_aria(close, 'owns', close.getAttribute('href').slice(1));\n  });\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.next.js\n\n //\tDEPRECATED\n//\tWill be removed in version 8.2\n\n/* harmony default export */ var _navbar_next = (function (navbar) {\n  var _this = this;\n\n  //\tAdd content\n  var next = create('a.mm-btn.mm-btn_next.mm-navbar__btn');\n  navbar.append(next); //\tUpdate to opened panel\n\n  var org;\n\n  var _url, _txt;\n\n  this.bind('openPanel:start', function (panel) {\n    org = panel.querySelector('.' + _this.conf.classNames.navbars.panelNext);\n    _url = org ? org.getAttribute('href') : '';\n    _txt = org ? org.innerHTML : '';\n\n    if (_url) {\n      next.setAttribute('href', _url);\n    } else {\n      next.removeAttribute('href');\n    }\n\n    next.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n    next.innerHTML = _txt;\n  }); //\tAdd screenreader / aria support\n\n  this.bind('openPanel:start:sr-aria', function (panel) {\n    mmenu_oncanvas_Mmenu.sr_aria(next, 'hidden', next.matches('mm-hidden'));\n    mmenu_oncanvas_Mmenu.sr_aria(next, 'owns', (next.getAttribute('href') || '').slice(1));\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.prev.js\n\n\n/* harmony default export */ var _navbar_prev = (function (navbar) {\n  var _this = this;\n\n  //\tAdd content.\n  var prev = create('a.mm-btn.mm-btn_prev.mm-navbar__btn');\n  navbar.append(prev);\n  this.bind('initNavbar:after', function (panel) {\n    _dom_children(panel, '.mm-navbar')[0].classList.add('mm-hidden');\n  }); //\tUpdate to opened panel.\n\n  var org;\n\n  var _url, _txt;\n\n  this.bind('openPanel:start', function (panel) {\n    if (panel.parentElement.matches('.mm-listitem_vertical')) {\n      return;\n    }\n\n    org = panel.querySelector('.' + _this.conf.classNames.navbars.panelPrev);\n\n    if (!org) {\n      org = panel.querySelector('.mm-navbar__btn.mm-btn_prev');\n    }\n\n    _url = org ? org.getAttribute('href') : '';\n    _txt = org ? org.innerHTML : '';\n\n    if (_url) {\n      prev.setAttribute('href', _url);\n    } else {\n      prev.removeAttribute('href');\n    }\n\n    prev.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n    prev.innerHTML = _txt;\n  }); //\tAdd screenreader / aria support\n\n  this.bind('initNavbar:after:sr-aria', function (panel) {\n    mmenu_oncanvas_Mmenu.sr_aria(panel.querySelector('.mm-navbar'), 'hidden', true);\n  });\n  this.bind('openPanel:start:sr-aria', function (panel) {\n    mmenu_oncanvas_Mmenu.sr_aria(prev, 'hidden', prev.matches('.mm-hidden'));\n    mmenu_oncanvas_Mmenu.sr_aria(prev, 'owns', (prev.getAttribute('href') || '').slice(1));\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.searchfield.js\n\n\n/* harmony default export */ var _navbar_searchfield = (function (navbar) {\n  if (type(this.opts.searchfield) != 'object') {\n    this.opts.searchfield = {};\n  }\n\n  var searchfield = create('div.mm-navbar__searchfield');\n  navbar.append(searchfield);\n  this.opts.searchfield.add = true;\n  this.opts.searchfield.addTo = [searchfield];\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.title.js\n\n\n/* harmony default export */ var _navbar_title = (function (navbar) {\n  var _this = this;\n\n  //\tAdd content to the navbar.\n  var title = create('a.mm-navbar__title');\n  navbar.append(title); //\tUpdate the title to the opened panel.\n\n  var _url, _txt;\n\n  var original;\n  this.bind('openPanel:start', function (panel) {\n    //\tDo nothing in a vertically expanding panel.\n    if (panel.parentElement.matches('.mm-listitem_vertical')) {\n      return;\n    } //\tFind the original title in the opened panel.\n\n\n    original = panel.querySelector('.' + _this.conf.classNames.navbars.panelTitle);\n\n    if (!original) {\n      original = panel.querySelector('.mm-navbar__title');\n    } //\tGet the URL for the title.\n\n\n    _url = original ? original.getAttribute('href') : '';\n\n    if (_url) {\n      title.setAttribute('href', _url);\n    } else {\n      title.removeAttribute('href');\n    } //\tGet the text for the title.\n\n\n    _txt = original ? original.innerHTML : '';\n    title.innerHTML = _txt; //\tShow or hide the title.\n\n    title.classList[_url || _txt ? 'remove' : 'add']('mm-hidden');\n  }); //\tAdd screenreader / aria support\n\n  var prev;\n  this.bind('openPanel:start:sr-aria', function (panel) {\n    if (_this.opts.screenReader.text) {\n      if (!prev) {\n        var navbars = _dom_children(_this.node.menu, '.mm-navbars_top, .mm-navbars_bottom');\n        navbars.forEach(function (navbar) {\n          var btn = navbar.querySelector('.mm-btn_prev');\n\n          if (btn) {\n            prev = btn;\n          }\n        });\n      }\n\n      if (prev) {\n        var hidden = true;\n\n        if (_this.opts.navbar.titleLink == 'parent') {\n          hidden = !prev.matches('.mm-hidden');\n        }\n\n        mmenu_oncanvas_Mmenu.sr_aria(title, 'hidden', hidden);\n      }\n    }\n  });\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/_navbar.tabs.js\n\n/* harmony default export */ var _navbar_tabs = (function (navbar) {\n  var _this = this;\n\n  navbar.classList.add('mm-navbar_tabs');\n  navbar.parentElement.classList.add('mm-navbars_has-tabs');\n  var anchors = _dom_children(navbar, 'a');\n  navbar.addEventListener('click', function (evnt) {\n    var anchor = evnt.target;\n\n    if (!anchor.matches('a')) {\n      return;\n    }\n\n    if (anchor.matches('.mm-navbar__tab_selected')) {\n      evnt.stopImmediatePropagation();\n      return;\n    }\n\n    try {\n      _this.openPanel(_this.node.menu.querySelector(anchor.getAttribute('href')), false);\n\n      evnt.stopImmediatePropagation();\n    } catch (err) {}\n  });\n\n  function selectTab(panel) {\n    anchors.forEach(function (anchor) {\n      anchor.classList.remove('mm-navbar__tab_selected');\n    });\n    var anchor = anchors.filter(function (anchor) {\n      return anchor.matches('[href=\"#' + panel.id + '\"]');\n    })[0];\n\n    if (anchor) {\n      anchor.classList.add('mm-navbar__tab_selected');\n    } else {\n      var parent = panel['mmParent'];\n\n      if (parent) {\n        selectTab.call(this, parent.closest('.mm-panel'));\n      }\n    }\n  }\n\n  this.bind('openPanel:start', selectTab);\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/navbars/mmenu.navbars.js\n\n\n\n\n\n //  Add the options and configs.\n\nmmenu_oncanvas_Mmenu.options.navbars = navbars_options;\nmmenu_oncanvas_Mmenu.configs.navbars = navbars_configs; //  Add the classnames.\n\nmmenu_oncanvas_Mmenu.configs.classNames.navbars = {\n  panelNext: 'Next',\n  panelPrev: 'Prev',\n  panelTitle: 'Title'\n};\n\n\n\n\n\n\nNavbars.navbarContents = {\n  breadcrumbs: _navbar_breadcrumbs,\n  close: _navbar_close,\n  next: _navbar_next,\n  prev: _navbar_prev,\n  searchfield: _navbar_searchfield,\n  title: _navbar_title\n};\n\nNavbars.navbarTypes = {\n  tabs: _navbar_tabs\n};\nfunction Navbars() {\n  var _this = this;\n\n  var navs = this.opts.navbars;\n\n  if (typeof navs == 'undefined') {\n    return;\n  }\n\n  if (!(navs instanceof Array)) {\n    navs = [navs];\n  }\n\n  var navbars = {};\n\n  if (!navs.length) {\n    return;\n  }\n\n  navs.forEach(function (options) {\n    options = navbars_options_extendShorthandOptions(options);\n\n    if (!options.use) {\n      return false;\n    } //\tCreate the navbar element.\n\n\n    var navbar = create('div.mm-navbar'); //\tGet the position for the navbar.\n\n    var position = options.position; //\tRestrict the position to either \"bottom\" or \"top\" (default).\n\n    if (position !== 'bottom') {\n      position = 'top';\n    } //\tCreate the wrapper for the navbar position.\n\n\n    if (!navbars[position]) {\n      navbars[position] = create('div.mm-navbars_' + position);\n    }\n\n    navbars[position].append(navbar); //\tAdd content to the navbar.\n\n    for (var c = 0, l = options.content.length; c < l; c++) {\n      var ctnt = options.content[c]; //\tThe content is a string.\n\n      if (typeof ctnt == 'string') {\n        var func = Navbars.navbarContents[ctnt]; //\tThe content refers to one of the navbar-presets (\"prev\", \"title\", etc).\n\n        if (typeof func == 'function') {\n          //\tCall the preset function.\n          func.call(_this, navbar); //\tThe content is just HTML.\n        } else {\n          //\tAdd the HTML.\n          //  Wrap the HTML in a single node\n          var node = create('span');\n          node.innerHTML = ctnt; //  If there was only a single node, use that.\n\n          var children = _dom_children(node);\n\n          if (children.length == 1) {\n            node = children[0];\n          }\n\n          navbar.append(node);\n        } //\tThe content is not a string, it must be an element.\n\n      } else {\n        navbar.append(ctnt);\n      }\n    } //\tThe type option is set.\n\n\n    if (typeof options.type == 'string') {\n      //\tThe function refers to one of the navbar-presets (\"tabs\").\n      var _func = Navbars.navbarTypes[options.type];\n\n      if (typeof _func == 'function') {\n        //\tCall the preset function.\n        _func.call(_this, navbar);\n      }\n    } //\tEn-/disable the navbar.\n\n\n    var enable = function enable() {\n      navbar.classList.remove('mm-hidden');\n      mmenu_oncanvas_Mmenu.sr_aria(navbar, 'hidden', false);\n    };\n\n    var disable = function disable() {\n      navbar.classList.add('mm-hidden');\n      mmenu_oncanvas_Mmenu.sr_aria(navbar, 'hidden', true);\n    };\n\n    if (typeof options.use != 'boolean') {\n      _matchmedia_add(options.use, enable, disable);\n    }\n  }); //\tAdd to menu.\n\n  this.bind('initMenu:after', function () {\n    for (var position in navbars) {\n      _this.node.menu[position == 'bottom' ? 'append' : 'prepend'](navbars[position]);\n    }\n  });\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/pagescroll/_options.js\n\n\n\nfunction pagescroll_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { pagescroll_options_typeof = function _typeof(obj) { return typeof obj; }; } else { pagescroll_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return pagescroll_options_typeof(obj); }\n\nvar pagescroll_options_options = {\n  scroll: false,\n  update: false\n};\n/* harmony default export */ var pagescroll_options = (pagescroll_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction pagescroll_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      scroll: options\n    };\n  }\n\n  if (pagescroll_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/pagescroll/_configs.js\nvar pagescroll_configs_configs = {\n  scrollOffset: 0,\n  updateOffset: 50\n};\n/* harmony default export */ var pagescroll_configs = (pagescroll_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/pagescroll/mmenu.pagescroll.js\n\n\n\n\n\n //\tAdd the options and configs.\n\nmmenu_oncanvas_Mmenu.options.pageScroll = pagescroll_options;\nmmenu_oncanvas_Mmenu.configs.pageScroll = pagescroll_configs;\n/* harmony default export */ var mmenu_pagescroll = (function () {\n  var _this = this;\n\n  var options = pagescroll_options_extendShorthandOptions(this.opts.pageScroll);\n  this.opts.pageScroll = extend(options, mmenu_oncanvas_Mmenu.options.pageScroll);\n  var configs = this.conf.pageScroll;\n  /** The currently \"active\" section */\n\n  var section;\n\n  function scrollTo() {\n    if (section) {\n      // section.scrollIntoView({ behavior: 'smooth' });\n      window.scrollTo({\n        top: section.getBoundingClientRect().top - configs.scrollOffset,\n        behavior: 'smooth'\n      });\n    }\n\n    section = null;\n  }\n\n  function anchorInPage(href) {\n    try {\n      if (href != '#' && href.slice(0, 1) == '#') {\n        return mmenu_oncanvas_Mmenu.node.page.querySelector(href);\n      }\n\n      return null;\n    } catch (err) {\n      return null;\n    }\n  } //\tScroll to section after clicking menu item.\n\n\n  if (options.scroll) {\n    this.bind('close:finish', function () {\n      scrollTo();\n    });\n  } //\tAdd click behavior.\n  //\tPrevents default behavior when clicking an anchor.\n\n\n  if (this.opts.offCanvas && options.scroll) {\n    this.clck.push(function (anchor, args) {\n      section = null; //\tDon't continue if the clicked anchor is not in the menu.\n\n      if (!args.inMenu) {\n        return;\n      } //\tDon't continue if the targeted section is not on the page.\n\n\n      var href = anchor.getAttribute('href');\n      section = anchorInPage(href);\n\n      if (!section) {\n        return;\n      } //\tIf the sidebar add-on is \"expanded\"...\n\n\n      if (_this.node.menu.matches('.mm-menu_sidebar-expanded') && _this.node.wrpr.matches('.mm-wrapper_sidebar-expanded')) {\n        //\t... scroll the page to the section.\n        scrollTo(); //\t... otherwise...\n      } else {\n        //\t... close the menu.\n        return {\n          close: true\n        };\n      }\n    });\n  } //\tUpdate selected menu item after scrolling.\n\n\n  if (options.update) {\n    var scts = [];\n    this.bind('initListview:after', function (panel) {\n      var listitems = find(panel, '.mm-listitem');\n      filterLIA(listitems).forEach(function (anchor) {\n        var href = anchor.getAttribute('href');\n        var section = anchorInPage(href);\n\n        if (section) {\n          scts.unshift(section);\n        }\n      });\n    });\n\n    var _selected = -1;\n\n    window.addEventListener('scroll', function (evnt) {\n      var scrollTop = window.scrollY;\n\n      for (var s = 0; s < scts.length; s++) {\n        if (scts[s].offsetTop < scrollTop + configs.updateOffset) {\n          if (_selected !== s) {\n            _selected = s;\n            var panel = _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n            var listitems = find(panel, '.mm-listitem');\n            var anchors = filterLIA(listitems);\n            anchors = anchors.filter(function (anchor) {\n              return anchor.matches('[href=\"#' + scts[s].id + '\"]');\n            });\n\n            if (anchors.length) {\n              _this.setSelected(anchors[0].parentElement);\n            }\n          }\n\n          break;\n        }\n      }\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/_options.js\n\n\n\nfunction searchfield_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { searchfield_options_typeof = function _typeof(obj) { return typeof obj; }; } else { searchfield_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return searchfield_options_typeof(obj); }\n\nvar searchfield_options_options = {\n  add: false,\n  addTo: 'panels',\n  cancel: false,\n  noResults: 'No results found.',\n  placeholder: 'Search',\n  panel: {\n    add: false,\n    dividers: true,\n    fx: 'none',\n    id: null,\n    splash: null,\n    title: 'Search'\n  },\n  search: true,\n  showTextItems: false,\n  showSubPanels: true\n};\n/* harmony default export */ var searchfield_options = (searchfield_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction searchfield_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options\n    };\n  }\n\n  if (searchfield_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  if (typeof options.panel == 'boolean') {\n    options.panel = {\n      add: options.panel\n    };\n  }\n\n  if (searchfield_options_typeof(options.panel) != 'object') {\n    options.panel = {};\n  } //\tExtend logical options.\n\n\n  if (options.addTo == 'panel') {\n    options.panel.add = true;\n  }\n\n  if (options.panel.add) {\n    options.showSubPanels = false;\n\n    if (options.panel.splash) {\n      options.cancel = true;\n    }\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/_configs.js\nvar searchfield_configs_configs = {\n  clear: false,\n  form: false,\n  input: false,\n  submit: false\n};\n/* harmony default export */ var searchfield_configs = (searchfield_configs_configs);\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/translations/nl.js\n/* harmony default export */ var searchfield_translations_nl = ({\n  Search: 'Zoeken',\n  'No results found.': 'Geen resultaten gevonden.',\n  cancel: 'annuleren'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/translations/fa.js\n/* harmony default export */ var searchfield_translations_fa = ({\n  Search: 'جستجو',\n  'No results found.': 'نتیجه‌ای یافت نشد.',\n  cancel: 'انصراف'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/translations/de.js\n/* harmony default export */ var searchfield_translations_de = ({\n  Search: 'Suche',\n  'No results found.': 'Keine Ergebnisse gefunden.',\n  cancel: 'beenden'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/translations/ru.js\n/* harmony default export */ var searchfield_translations_ru = ({\n  Search: 'Найти',\n  'No results found.': 'Ничего не найдено.',\n  cancel: 'отменить'\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/translations/translate.js\n\n\n\n\n\n/* harmony default export */ var searchfield_translations_translate = (function () {\n  _i18n_add(searchfield_translations_nl, 'nl');\n  _i18n_add(searchfield_translations_fa, 'fa');\n  _i18n_add(searchfield_translations_de, 'de');\n  _i18n_add(searchfield_translations_ru, 'ru');\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/searchfield/mmenu.searchfield.js\n\n\n\n\n\n\n\n\n\n\nfunction mmenu_searchfield_toConsumableArray(arr) { return mmenu_searchfield_arrayWithoutHoles(arr) || mmenu_searchfield_iterableToArray(arr) || mmenu_searchfield_unsupportedIterableToArray(arr) || mmenu_searchfield_nonIterableSpread(); }\n\nfunction mmenu_searchfield_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction mmenu_searchfield_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return mmenu_searchfield_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mmenu_searchfield_arrayLikeToArray(o, minLen); }\n\nfunction mmenu_searchfield_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction mmenu_searchfield_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return mmenu_searchfield_arrayLikeToArray(arr); }\n\nfunction mmenu_searchfield_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\n //  Add the translations.\n\nsearchfield_translations_translate(); //  Add the options and configs.\n\nmmenu_oncanvas_Mmenu.options.searchfield = searchfield_options;\nmmenu_oncanvas_Mmenu.configs.searchfield = searchfield_configs;\n/* harmony default export */ var mmenu_searchfield = (function () {\n  var _this = this;\n\n  var options = searchfield_options_extendShorthandOptions(this.opts.searchfield);\n  this.opts.searchfield = extend(options, mmenu_oncanvas_Mmenu.options.searchfield);\n  var configs = this.conf.searchfield;\n\n  if (!options.add) {\n    return;\n  } //\tBlur searchfield\n\n\n  this.bind('close:start', function () {\n    find(_this.node.menu, '.mm-searchfield').forEach(function (input) {\n      input.blur();\n    });\n  });\n  this.bind('initPanel:after', function (panel) {\n    var searchpanel = null; //\tAdd the search panel\n\n    if (options.panel.add) {\n      searchpanel = mmenu_searchfield_initSearchPanel.call(_this);\n    } //\tAdd the searchfield\n\n\n    var addTo = null;\n\n    switch (options.addTo) {\n      case 'panels':\n        addTo = [panel];\n        break;\n\n      case 'panel':\n        addTo = [searchpanel];\n        break;\n\n      default:\n        if (typeof options.addTo == 'string') {\n          addTo = find(_this.node.menu, options.addTo);\n        } else if (type(options.addTo) == 'array') {\n          addTo = options.addTo;\n        }\n\n        break;\n    }\n\n    addTo.forEach(function (form) {\n      form = mmenu_searchfield_initSearchfield.call(_this, form);\n\n      if (options.search && form) {\n        mmenu_searchfield_initSearching.call(_this, form);\n      }\n    }); //\tAdd the no-results message\n\n    if (options.noResults) {\n      mmenu_searchfield_initNoResultsMsg.call(_this, options.panel.add ? searchpanel : panel);\n    }\n  }); //\tAdd click behavior.\n  //\tPrevents default behavior when clicking an anchor\n\n  this.clck.push(function (anchor, args) {\n    if (args.inMenu) {\n      if (anchor.matches('.mm-searchfield__btn')) {\n        //\tClicking the clear button\n        if (anchor.matches('.mm-btn_close')) {\n          var form = anchor.closest('.mm-searchfield'),\n              input = find(form, 'input')[0];\n          input.value = '';\n\n          _this.search(input);\n\n          return true;\n        } //\tClicking the submit button\n\n\n        if (anchor.matches('.mm-btn_next')) {\n          var _form = anchor.closest('form');\n\n          if (_form) {\n            _form.submit();\n          }\n\n          return true;\n        }\n      }\n    }\n  });\n});\n\nvar mmenu_searchfield_initSearchPanel = function initSearchPanel() {\n  var options = this.opts.searchfield,\n      configs = this.conf.searchfield; //\tOnly once\n\n  if (_dom_children(this.node.pnls, '.mm-panel_search').length) {\n    return null;\n  }\n\n  var searchpanel = create('div.mm-panel_search'),\n      listview = create('ul');\n  searchpanel.append(listview);\n  this.node.pnls.append(searchpanel);\n\n  if (options.panel.id) {\n    searchpanel.id = options.panel.id;\n  }\n\n  if (options.panel.title) {\n    searchpanel.setAttribute('data-mm-title', options.panel.title);\n  }\n\n  switch (options.panel.fx) {\n    case false:\n      break;\n\n    case 'none':\n      searchpanel.classList.add('mm-panel_noanimation');\n      break;\n\n    default:\n      searchpanel.classList.add('mm-panel_fx-' + options.panel.fx);\n      break;\n  } //\tAdd splash content\n\n\n  if (options.panel.splash) {\n    var splash = create('div.mm-panel__content');\n    splash.innerHTML = options.panel.splash;\n    searchpanel.append(splash);\n  }\n\n  this.initPanel(searchpanel);\n  return searchpanel;\n};\n\nvar mmenu_searchfield_initSearchfield = function initSearchfield(wrapper) {\n  var options = this.opts.searchfield,\n      configs = this.conf.searchfield; //\tNo searchfield in vertical submenus\n\n  if (wrapper.parentElement.matches('.mm-listitem_vertical')) {\n    return null;\n  } //\tOnly one searchfield per panel\n\n\n  var form = find(wrapper, '.mm-searchfield')[0];\n\n  if (form) {\n    return form;\n  }\n\n  function addAttributes(element, attr) {\n    if (attr) {\n      for (var a in attr) {\n        element.setAttribute(a, attr[a]);\n      }\n    }\n  }\n\n  var form = create((configs.form ? 'form' : 'div') + '.mm-searchfield'),\n      field = create('div.mm-searchfield__input'),\n      input = create('input');\n  input.type = 'text';\n  input.autocomplete = 'off';\n  input.placeholder = this.i18n(options.placeholder);\n  field.append(input);\n  form.append(field);\n  wrapper.prepend(form); //\tAdd attributes to the input\n\n  addAttributes(input, configs.input); //\tAdd the clear button\n\n  if (configs.clear) {\n    var anchor = create('a.mm-btn.mm-btn_close.mm-searchfield__btn');\n    anchor.setAttribute('href', '#');\n    field.append(anchor);\n  } //\tAdd attributes and submit to the form\n\n\n  addAttributes(form, configs.form);\n\n  if (configs.form && configs.submit && !configs.clear) {\n    var _anchor = create('a.mm-btn.mm-btn_next.mm-searchfield__btn');\n\n    _anchor.setAttribute('href', '#');\n\n    field.append(_anchor);\n  }\n\n  if (options.cancel) {\n    var _anchor2 = create('a.mm-searchfield__cancel');\n\n    _anchor2.setAttribute('href', '#');\n\n    _anchor2.textContent = this.i18n('cancel');\n    form.append(_anchor2);\n  }\n\n  return form;\n};\n\nvar mmenu_searchfield_initSearching = function initSearching(form) {\n  var _this2 = this;\n\n  var options = this.opts.searchfield,\n      configs = this.conf.searchfield;\n  var data = {}; //\tIn the searchpanel.\n\n  if (form.closest('.mm-panel_search')) {\n    data.panels = find(this.node.pnls, '.mm-panel');\n    data.noresults = [form.closest('.mm-panel')]; //\tIn a panel\n  } else if (form.closest('.mm-panel')) {\n    data.panels = [form.closest('.mm-panel')];\n    data.noresults = data.panels; //\tNot in a panel, global\n  } else {\n    data.panels = find(this.node.pnls, '.mm-panel');\n    data.noresults = [this.node.menu];\n  } //\tFilter out vertical submenus\n\n\n  data.panels = data.panels.filter(function (panel) {\n    return !panel.parentElement.matches('.mm-listitem_vertical');\n  }); //\tFilter out search panel\n\n  data.panels = data.panels.filter(function (panel) {\n    return !panel.matches('.mm-panel_search');\n  }); //  Find listitems and dividers.\n\n  data.listitems = [];\n  data.dividers = [];\n  data.panels.forEach(function (panel) {\n    var _data$listitems, _data$dividers;\n\n    (_data$listitems = data.listitems).push.apply(_data$listitems, mmenu_searchfield_toConsumableArray(find(panel, '.mm-listitem')));\n\n    (_data$dividers = data.dividers).push.apply(_data$dividers, mmenu_searchfield_toConsumableArray(find(panel, '.mm-divider')));\n  });\n  var searchpanel = _dom_children(this.node.pnls, '.mm-panel_search')[0],\n      input = find(form, 'input')[0],\n      cancel = find(form, '.mm-searchfield__cancel')[0];\n  input['mmSearchfield'] = data; //\tOpen the splash panel when focussing the input.\n\n  if (options.panel.add && options.panel.splash) {\n    off(input, 'focus.splash');\n    on(input, 'focus.splash', function (evnt) {\n      _this2.openPanel(searchpanel);\n    });\n  }\n\n  if (options.cancel) {\n    //\tShow the cancel button when focussing the input.\n    off(input, 'focus.cancel');\n    on(input, 'focus.cancel', function (evnt) {\n      cancel.classList.add('mm-searchfield__cancel-active');\n    }); //\tClose the splash panel when clicking the cancel button.\n\n    off(cancel, 'click.splash');\n    on(cancel, 'click.splash', function (evnt) {\n      evnt.preventDefault();\n      cancel.classList.remove('mm-searchfield__cancel-active');\n\n      if (searchpanel.matches('.mm-panel_opened')) {\n        var parents = _dom_children(_this2.node.pnls, '.mm-panel_opened-parent');\n\n        if (parents.length) {\n          _this2.openPanel(parents[parents.length - 1]);\n        }\n      }\n    });\n  } //\tFocus the input in the searchpanel when opening the searchpanel.\n\n\n  if (options.panel.add && options.addTo == 'panel') {\n    this.bind('openPanel:finish', function (panel) {\n      if (panel === searchpanel) {\n        input.focus();\n      }\n    });\n  } //\tSearch while typing.\n\n\n  off(input, 'input.search');\n  on(input, 'input.search', function (evnt) {\n    switch (evnt.keyCode) {\n      case 9: //\ttab\n\n      case 16: //\tshift\n\n      case 17: //\tcontrol\n\n      case 18: //\talt\n\n      case 37: //\tleft\n\n      case 38: //\ttop\n\n      case 39: //\tright\n\n      case 40:\n        //\tbottom\n        break;\n\n      default:\n        _this2.search(input);\n\n        break;\n    }\n  }); //\tSearch initially.\n\n  this.search(input);\n};\n\nvar mmenu_searchfield_initNoResultsMsg = function initNoResultsMsg(wrapper) {\n  if (!wrapper) {\n    return;\n  }\n\n  var options = this.opts.searchfield,\n      configs = this.conf.searchfield; //\tNot in a panel\n\n  if (!wrapper.closest('.mm-panel')) {\n    wrapper = _dom_children(this.node.pnls, '.mm-panel')[0];\n  } //\tOnly once\n\n\n  if (_dom_children(wrapper, '.mm-panel__noresultsmsg').length) {\n    return;\n  } //\tAdd no-results message\n\n\n  var message = create('div.mm-panel__noresultsmsg.mm-hidden');\n  message.innerHTML = this.i18n(options.noResults);\n  wrapper.append(message);\n};\n\nmmenu_oncanvas_Mmenu.prototype.search = function (input, query) {\n  var _this3 = this;\n\n  var options = this.opts.searchfield,\n      configs = this.conf.searchfield;\n  query = query || '' + input.value;\n  query = query.toLowerCase().trim();\n  var data = input['mmSearchfield'];\n  var form = input.closest('.mm-searchfield'),\n      buttons = find(form, '.mm-btn'),\n      searchpanel = _dom_children(this.node.pnls, '.mm-panel_search')[0];\n  /** The panels. */\n\n  var panels = data.panels;\n  /** The \"no results\" messages in a cloned array. */\n\n  var noresults = data.noresults;\n  /** The listitems in a cloned array. */\n\n  var listitems = data.listitems;\n  /** Tje dividers in a cloned array. */\n\n  var dividers = data.dividers; //\tReset previous results\n\n  listitems.forEach(function (listitem) {\n    listitem.classList.remove('mm-listitem_nosubitems', 'mm-listitem_onlysubitems', 'mm-hidden');\n  });\n\n  if (searchpanel) {\n    _dom_children(searchpanel, '.mm-listview')[0].innerHTML = '';\n  }\n\n  panels.forEach(function (panel) {\n    panel.scrollTop = 0;\n  }); //\tSearch\n\n  if (query.length) {\n    //\tInitially hide all dividers.\n    dividers.forEach(function (divider) {\n      divider.classList.add('mm-hidden');\n    }); //\tHide listitems that do not match.\n\n    listitems.forEach(function (listitem) {\n      var text = _dom_children(listitem, '.mm-listitem__text')[0];\n      var add = false; //  The listitem should be shown if:\n      //      1) The text matches the query and\n      //          2a) The text is a open-button and\n      //          2b) the option showSubPanels is set to true.\n      //      or  3a) The text is not an anchor and\n      //          3b) the option showTextItems is set to true.\n      //      or  4)  The text is an anchor.\n      //  1\n\n      if (text && _dom_text(text).toLowerCase().indexOf(query) > -1) {\n        //  2a\n        if (text.matches('.mm-listitem__btn')) {\n          //  2b\n          if (options.showSubPanels) {\n            add = true;\n          } //  3a\n\n        } else if (!text.matches('a')) {\n          //  3b\n          if (options.showTextItems) {\n            add = true;\n          } // 4\n\n        } else {\n          add = true;\n        }\n      }\n\n      if (!add) {\n        listitem.classList.add('mm-hidden');\n      }\n    });\n    /** Whether or not the query yielded results. */\n\n    var hasResults = listitems.filter(function (listitem) {\n      return !listitem.matches('.mm-hidden');\n    }).length; //\tShow all mached listitems in the search panel\n\n    if (options.panel.add) {\n      var _DOM$children$;\n\n      //\tClone all matched listitems into the search panel\n      var allitems = [];\n      panels.forEach(function (panel) {\n        var listitems = filterLI(find(panel, '.mm-listitem'));\n        listitems = listitems.filter(function (listitem) {\n          return !listitem.matches('.mm-hidden');\n        });\n\n        if (listitems.length) {\n          //  Add a divider to indicate in what panel the listitems were.\n          if (options.panel.dividers) {\n            var divider = create('li.mm-divider');\n            divider.innerHTML = panel.querySelector('.mm-navbar__title').innerHTML;\n            allitems.push(divider);\n          }\n\n          listitems.forEach(function (listitem) {\n            allitems.push(listitem.cloneNode(true));\n          });\n        }\n      }); //\tRemove toggles and checks.\n\n      allitems.forEach(function (listitem) {\n        listitem.querySelectorAll('.mm-toggle, .mm-check').forEach(function (element) {\n          element.remove();\n        });\n      }); //\tAdd to the search panel.\n\n      (_DOM$children$ = _dom_children(searchpanel, '.mm-listview')[0]).append.apply(_DOM$children$, allitems); //\tOpen the search panel.\n\n\n      this.openPanel(searchpanel);\n    } else {\n      //\tAlso show listitems in sub-panels for matched listitems\n      if (options.showSubPanels) {\n        panels.forEach(function (panel) {\n          var listitems = find(panel, '.mm-listitem');\n          filterLI(listitems).forEach(function (listitem) {\n            var child = listitem['mmChild'];\n\n            if (child) {\n              find(child, '.mm-listitem').forEach(function (listitem) {\n                listitem.classList.remove('mm-hidden');\n              });\n            }\n          });\n        });\n      } //\tUpdate parent for sub-panel\n      //  .reverse() mutates the original array, therefor we \"clone\" it first using [...panels].\n\n\n      mmenu_searchfield_toConsumableArray(panels).reverse().forEach(function (panel, p) {\n        var parent = panel['mmParent'];\n\n        if (parent) {\n          //\tThe current panel has mached listitems\n          var _listitems = find(panel, '.mm-listitem');\n\n          if (filterLI(_listitems).length) {\n            //\tShow parent\n            if (parent.matches('.mm-hidden')) {\n              parent.classList.remove('mm-hidden');\n            }\n\n            parent.classList.add('mm-listitem_onlysubitems');\n          } else if (!input.closest('.mm-panel')) {\n            if (panel.matches('.mm-panel_opened') || panel.matches('.mm-panel_opened-parent')) {\n              //\tCompensate the timeout for the opening animation\n              setTimeout(function () {\n                _this3.openPanel(parent.closest('.mm-panel'));\n              }, (p + 1) * (_this3.conf.openingInterval * 1.5));\n            }\n\n            parent.classList.add('mm-listitem_nosubitems');\n          }\n        }\n      }); //\tShow first preceeding divider of parent\n\n\n      panels.forEach(function (panel) {\n        var listitems = find(panel, '.mm-listitem');\n        filterLI(listitems).forEach(function (listitem) {\n          var divider = prevAll(listitem, '.mm-divider')[0];\n\n          if (divider) {\n            divider.classList.remove('mm-hidden');\n          }\n        });\n      });\n    } //\tShow submit / clear button\n\n\n    buttons.forEach(function (button) {\n      return button.classList.remove('mm-hidden');\n    }); //\tShow/hide no results message\n\n    noresults.forEach(function (wrapper) {\n      find(wrapper, '.mm-panel__noresultsmsg').forEach(function (message) {\n        return message.classList[hasResults ? 'add' : 'remove']('mm-hidden');\n      });\n    });\n\n    if (options.panel.add) {\n      //\tHide splash\n      if (options.panel.splash) {\n        find(searchpanel, '.mm-panel__content').forEach(function (splash) {\n          return splash.classList.add('mm-hidden');\n        });\n      } //\tRe-show original listitems when in search panel\n\n\n      listitems.forEach(function (listitem) {\n        return listitem.classList.remove('mm-hidden');\n      });\n      dividers.forEach(function (divider) {\n        return divider.classList.remove('mm-hidden');\n      });\n    } //\tDon't search\n\n  } else {\n    //\tShow all items\n    listitems.forEach(function (listitem) {\n      return listitem.classList.remove('mm-hidden');\n    });\n    dividers.forEach(function (divider) {\n      return divider.classList.remove('mm-hidden');\n    }); //\tHide submit / clear button\n\n    buttons.forEach(function (button) {\n      return button.classList.add('mm-hidden');\n    }); //\tHide no results message\n\n    noresults.forEach(function (wrapper) {\n      find(wrapper, '.mm-panel__noresultsmsg').forEach(function (message) {\n        return message.classList.add('mm-hidden');\n      });\n    });\n\n    if (options.panel.add) {\n      //\tShow splash\n      if (options.panel.splash) {\n        find(searchpanel, '.mm-panel__content').forEach(function (splash) {\n          return splash.classList.remove('mm-hidden');\n        }); //\tClose panel\n      } else if (!input.closest('.mm-panel_search')) {\n        var opened = _dom_children(this.node.pnls, '.mm-panel_opened-parent');\n        this.openPanel(opened.slice(-1)[0]);\n      }\n    }\n  } //\tUpdate for other addons\n\n\n  this.trigger('updateListview');\n};\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/sectionindexer/_options.js\n\n\n\nfunction sectionindexer_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { sectionindexer_options_typeof = function _typeof(obj) { return typeof obj; }; } else { sectionindexer_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return sectionindexer_options_typeof(obj); }\n\nvar sectionindexer_options_options = {\n  add: false,\n  addTo: 'panels'\n};\n/* harmony default export */ var sectionindexer_options = (sectionindexer_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction sectionindexer_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      add: options\n    };\n  }\n\n  if (sectionindexer_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/sectionindexer/mmenu.sectionindexer.js\n\n\n\n\n\n\n //  Add the options.\n\nmmenu_oncanvas_Mmenu.options.sectionIndexer = sectionindexer_options;\n/* harmony default export */ var mmenu_sectionindexer = (function () {\n  var _this = this;\n\n  var options = sectionindexer_options_extendShorthandOptions(this.opts.sectionIndexer);\n  this.opts.sectionIndexer = extend(options, mmenu_oncanvas_Mmenu.options.sectionIndexer);\n\n  if (!options.add) {\n    return;\n  }\n\n  this.bind('initPanels:after', function () {\n    //\tAdd the indexer, only if it does not allready excists\n    if (!_this.node.indx) {\n      var buttons = '';\n      'abcdefghijklmnopqrstuvwxyz'.split('').forEach(function (letter) {\n        buttons += '<a href=\"#\">' + letter + '</a>';\n      });\n      var indexer = create('div.mm-sectionindexer');\n      indexer.innerHTML = buttons;\n\n      _this.node.pnls.prepend(indexer);\n\n      _this.node.indx = indexer; //\tPrevent default behavior when clicking an anchor\n\n      _this.node.indx.addEventListener('click', function (evnt) {\n        var anchor = evnt.target;\n\n        if (anchor.matches('a')) {\n          evnt.preventDefault();\n        }\n      }); //\tScroll onMouseOver / onTouchStart\n\n\n      var mouseOverEvent = function mouseOverEvent(evnt) {\n        if (!evnt.target.matches('a')) {\n          return;\n        }\n\n        var letter = evnt.target.textContent,\n            panel = _dom_children(_this.node.pnls, '.mm-panel_opened')[0];\n        var newTop = -1,\n            oldTop = panel.scrollTop;\n        panel.scrollTop = 0;\n        find(panel, '.mm-divider').filter(function (divider) {\n          return !divider.matches('.mm-hidden');\n        }).forEach(function (divider) {\n          if (newTop < 0 && letter == divider.textContent.trim().slice(0, 1).toLowerCase()) {\n            newTop = divider.offsetTop;\n          }\n        });\n        panel.scrollTop = newTop > -1 ? newTop : oldTop;\n      };\n\n      if (touch) {\n        _this.node.indx.addEventListener('touchstart', mouseOverEvent);\n\n        _this.node.indx.addEventListener('touchmove', mouseOverEvent);\n      } else {\n        _this.node.indx.addEventListener('mouseover', mouseOverEvent);\n      }\n    } //\tShow or hide the indexer\n\n\n    _this.bind('openPanel:start', function (panel) {\n      var active = find(panel, '.mm-divider').filter(function (divider) {\n        return !divider.matches('.mm-hidden');\n      }).length;\n\n      _this.node.indx.classList[active ? 'add' : 'remove']('mm-sectionindexer_active');\n    });\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/setselected/_options.js\n\n\n\nfunction setselected_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { setselected_options_typeof = function _typeof(obj) { return typeof obj; }; } else { setselected_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return setselected_options_typeof(obj); }\n\nvar setselected_options_options = {\n  current: true,\n  hover: false,\n  parent: false\n};\n/* harmony default export */ var setselected_options = (setselected_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction setselected_options_extendShorthandOptions(options) {\n  if (typeof options == 'boolean') {\n    options = {\n      hover: options,\n      parent: options\n    };\n  }\n\n  if (setselected_options_typeof(options) != 'object') {\n    options = {};\n  }\n\n  return options;\n}\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/setselected/mmenu.setselected.js\n\n\n\n\n\n //\tAdd the options.\n\nmmenu_oncanvas_Mmenu.options.setSelected = setselected_options;\n/* harmony default export */ var mmenu_setselected = (function () {\n  var _this = this;\n\n  var options = setselected_options_extendShorthandOptions(this.opts.setSelected);\n  this.opts.setSelected = extend(options, mmenu_oncanvas_Mmenu.options.setSelected); //\tFind current by URL\n\n  if (options.current == 'detect') {\n    var findCurrent = function findCurrent(url) {\n      url = url.split('?')[0].split('#')[0];\n\n      var anchor = _this.node.menu.querySelector('a[href=\"' + url + '\"], a[href=\"' + url + '/\"]');\n\n      if (anchor) {\n        _this.setSelected(anchor.parentElement);\n      } else {\n        var arr = url.split('/').slice(0, -1);\n\n        if (arr.length) {\n          findCurrent(arr.join('/'));\n        }\n      }\n    };\n\n    this.bind('initMenu:after', function () {\n      findCurrent.call(_this, window.location.href);\n    }); //\tRemove current selected item\n  } else if (!options.current) {\n    this.bind('initListview:after', function (panel) {\n      find(panel, '.mm-listitem_selected').forEach(function (listitem) {\n        listitem.classList.remove('mm-listitem_selected');\n      });\n    });\n  } //\tAdd :hover effect on items\n\n\n  if (options.hover) {\n    this.bind('initMenu:after', function () {\n      _this.node.menu.classList.add('mm-menu_selected-hover');\n    });\n  } //\tSet parent item selected for submenus\n\n\n  if (options.parent) {\n    this.bind('openPanel:finish', function (panel) {\n      //\tRemove all\n      find(_this.node.pnls, '.mm-listitem_selected-parent').forEach(function (listitem) {\n        listitem.classList.remove('mm-listitem_selected-parent');\n      }); //\tMove up the DOM tree\n\n      var parent = panel['mmParent'];\n\n      while (parent) {\n        if (!parent.matches('.mm-listitem_vertical')) {\n          parent.classList.add('mm-listitem_selected-parent');\n        }\n\n        parent = parent.closest('.mm-panel');\n        parent = parent['mmParent'];\n      }\n    });\n    this.bind('initMenu:after', function () {\n      _this.node.menu.classList.add('mm-menu_selected-parent');\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/sidebar/_options.js\n\n\n\nfunction sidebar_options_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { sidebar_options_typeof = function _typeof(obj) { return typeof obj; }; } else { sidebar_options_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return sidebar_options_typeof(obj); }\n\nvar sidebar_options_options = {\n  collapsed: {\n    use: false,\n    blockMenu: true,\n    hideDivider: false,\n    hideNavbar: true\n  },\n  expanded: {\n    use: false,\n    initial: 'open'\n  }\n};\n/* harmony default export */ var sidebar_options = (sidebar_options_options);\n/**\n * Extend shorthand options.\n *\n * @param  {object} options The options to extend.\n * @return {object}\t\t\tThe extended options.\n */\n\nfunction sidebar_options_extendShorthandOptions(options) {\n  if (typeof options == 'string' || typeof options == 'boolean' && options || typeof options == 'number') {\n    options = {\n      expanded: options\n    };\n  }\n\n  if (sidebar_options_typeof(options) != 'object') {\n    options = {};\n  } //\tExtend collapsed shorthand options.\n\n\n  if (typeof options.collapsed == 'boolean' && options.collapsed) {\n    options.collapsed = {\n      use: true\n    };\n  }\n\n  if (typeof options.collapsed == 'string' || typeof options.collapsed == 'number') {\n    options.collapsed = {\n      use: options.collapsed\n    };\n  }\n\n  if (sidebar_options_typeof(options.collapsed) != 'object') {\n    options.collapsed = {};\n  } //\tExtend expanded shorthand options.\n\n\n  if (typeof options.expanded == 'boolean' && options.expanded) {\n    options.expanded = {\n      use: true\n    };\n  }\n\n  if (typeof options.expanded == 'string' || typeof options.expanded == 'number') {\n    options.expanded = {\n      use: options.expanded\n    };\n  }\n\n  if (sidebar_options_typeof(options.expanded) != 'object') {\n    options.expanded = {};\n  }\n\n  return options;\n}\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/sidebar/mmenu.sidebar.js\n\n\n\n\n\n //  Add the options.\n\nmmenu_oncanvas_Mmenu.options.sidebar = sidebar_options;\n/* harmony default export */ var mmenu_sidebar = (function () {\n  var _this = this;\n\n  if (!this.opts.offCanvas) {\n    return;\n  }\n\n  var options = sidebar_options_extendShorthandOptions(this.opts.sidebar);\n  this.opts.sidebar = extend(options, mmenu_oncanvas_Mmenu.options.sidebar); //\tCollapsed\n\n  if (options.collapsed.use) {\n    //\tMake the menu collapsable.\n    this.bind('initMenu:after', function () {\n      _this.node.menu.classList.add('mm-menu_sidebar-collapsed');\n\n      if (options.collapsed.blockMenu && _this.opts.offCanvas && !_dom_children(_this.node.menu, '.mm-menu__blocker')[0]) {\n        var anchor = create('a.mm-menu__blocker');\n        anchor.setAttribute('href', '#' + _this.node.menu.id);\n\n        _this.node.menu.prepend(anchor);\n      }\n\n      if (options.collapsed.hideNavbar) {\n        _this.node.menu.classList.add('mm-menu_hidenavbar');\n      }\n\n      if (options.collapsed.hideDivider) {\n        _this.node.menu.classList.add('mm-menu_hidedivider');\n      }\n    }); //\tEn-/disable the collapsed sidebar.\n\n    var enable = function enable() {\n      _this.node.wrpr.classList.add('mm-wrapper_sidebar-collapsed');\n    };\n\n    var disable = function disable() {\n      _this.node.wrpr.classList.remove('mm-wrapper_sidebar-collapsed');\n    };\n\n    if (typeof options.collapsed.use == 'boolean') {\n      this.bind('initMenu:after', enable);\n    } else {\n      _matchmedia_add(options.collapsed.use, enable, disable);\n    }\n  } //\tExpanded\n\n\n  if (options.expanded.use) {\n    //\tMake the menu expandable\n    this.bind('initMenu:after', function () {\n      _this.node.menu.classList.add('mm-menu_sidebar-expanded');\n    }); //\tEn-/disable the expanded sidebar.\n\n    var _enable = function _enable() {\n      _this.node.wrpr.classList.add('mm-wrapper_sidebar-expanded');\n\n      if (!_this.node.wrpr.matches('.mm-wrapper_sidebar-closed')) {\n        _this.open();\n      }\n    };\n\n    var _disable = function _disable() {\n      _this.node.wrpr.classList.remove('mm-wrapper_sidebar-expanded');\n\n      _this.close();\n    };\n\n    if (typeof options.expanded.use == 'boolean') {\n      this.bind('initMenu:after', _enable);\n    } else {\n      _matchmedia_add(options.expanded.use, _enable, _disable);\n    } //  Manually en-/disable the expanded sidebar (open / close the menu)\n\n\n    this.bind('close:start', function () {\n      if (_this.node.wrpr.matches('.mm-wrapper_sidebar-expanded')) {\n        _this.node.wrpr.classList.add('mm-wrapper_sidebar-closed');\n\n        if (options.expanded.initial == 'remember') {\n          window.localStorage.setItem('mmenuExpandedState', 'closed');\n        }\n      }\n    });\n    this.bind('open:start', function () {\n      if (_this.node.wrpr.matches('.mm-wrapper_sidebar-expanded')) {\n        _this.node.wrpr.classList.remove('mm-wrapper_sidebar-closed');\n\n        if (options.expanded.initial == 'remember') {\n          window.localStorage.setItem('mmenuExpandedState', 'open');\n        }\n      }\n    }); //  Set the initial state\n\n    var initialState = options.expanded.initial;\n\n    if (options.expanded.initial == 'remember') {\n      var state = window.localStorage.getItem('mmenuExpandedState');\n\n      switch (state) {\n        case 'open':\n        case 'closed':\n          initialState = state;\n          break;\n      }\n    }\n\n    if (initialState == 'closed') {\n      this.bind('initMenu:after', function () {\n        _this.node.wrpr.classList.add('mm-wrapper_sidebar-closed');\n      });\n    } //\tAdd click behavior.\n    //\tPrevents default behavior when clicking an anchor\n\n\n    this.clck.push(function (anchor, args) {\n      if (args.inMenu && args.inListview) {\n        if (_this.node.wrpr.matches('.mm-wrapper_sidebar-expanded')) {\n          return {\n            close: options.expanded.initial == 'closed'\n          };\n        }\n      }\n    });\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/addons/toggles/mmenu.toggles.js\n\n //\tAdd the classnames.\n\nmmenu_oncanvas_Mmenu.configs.classNames.toggles = {\n  toggle: 'Toggle',\n  check: 'Check'\n};\n/* harmony default export */ var mmenu_toggles = (function () {\n  var _this = this;\n\n  this.bind('initPanel:after', function (panel) {\n    //\tRefactor toggle classes\n    find(panel, 'input').forEach(function (input) {\n      reClass(input, _this.conf.classNames.toggles.toggle, 'mm-toggle');\n      reClass(input, _this.conf.classNames.toggles.check, 'mm-check');\n    });\n  });\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/wrappers/angular/mmenu.angular.js\n/* harmony default export */ var mmenu_angular = (function () {\n  this.opts.onClick = {\n    close: true,\n    preventDefault: false,\n    setSelected: true\n  };\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/wrappers/bootstrap/mmenu.bootstrap.js\n\n/* harmony default export */ var mmenu_bootstrap = (function () {\n  var _this = this;\n\n  //\tCreate the menu\n  if (this.node.menu.matches('.navbar-collapse')) {\n    //\tNo need for cloning the menu...\n    if (this.conf.offCanvas) {\n      this.conf.offCanvas.clone = false;\n    } //\t... We'll create a new menu\n\n\n    var nav = create('nav'),\n        panel = create('div');\n    nav.append(panel);\n    _dom_children(this.node.menu).forEach(function (child) {\n      switch (true) {\n        case child.matches('.navbar-nav'):\n          panel.append(cloneNav(child));\n          break;\n\n        case child.matches('.dropdown-menu'):\n          panel.append(cloneDropdown(child));\n          break;\n\n        case child.matches('.form-inline'):\n          _this.conf.searchfield.form = {\n            action: child.getAttribute('action') || null,\n            method: child.getAttribute('method') || null\n          };\n          _this.conf.searchfield.input = {\n            name: child.querySelector('input').getAttribute('name') || null\n          };\n          _this.conf.searchfield.clear = false;\n          _this.conf.searchfield.submit = true;\n          break;\n\n        default:\n          panel.append(child.cloneNode(true));\n          break;\n      }\n    }); //\tSet the menu\n\n    this.bind('initMenu:before', function () {\n      document.body.prepend(nav);\n      _this.node.menu = nav;\n    }); //\tHijack the toggler.\n\n    var parent = this.node.menu.parentElement;\n\n    if (parent) {\n      var toggler = parent.querySelector('.navbar-toggler');\n\n      if (toggler) {\n        // toggler.removeAttribute('data-target');\n        delete toggler.dataset.target;\n        toggler.removeAttribute('aria-controls'); //\tRemove all bound events.\n\n        toggler.outerHTML = toggler.outerHTML;\n        toggler = parent.querySelector('.navbar-toggler'); //  Open the menu on-click.\n\n        toggler.addEventListener('click', function (evnt) {\n          evnt.preventDefault();\n          evnt.stopImmediatePropagation();\n\n          _this[_this.vars.opened ? 'close' : 'open']();\n        });\n      }\n    }\n  }\n\n  function cloneLink(anchor) {\n    var link = create(anchor.matches('a') ? 'a' : 'span'); //\tCopy attributes\n\n    var attr = ['href', 'title', 'target'];\n\n    for (var a = 0; a < attr.length; a++) {\n      if (typeof anchor.getAttribute(attr[a]) != 'undefined') {\n        link.setAttribute(attr[a], anchor.getAttribute(attr[a]));\n      }\n    } //\tCopy contents\n\n\n    link.innerHTML = anchor.innerHTML; //\tRemove Screen reader text.\n\n    find(link, '.sr-only').forEach(function (sro) {\n      sro.remove();\n    });\n    return link;\n  }\n\n  function cloneDropdown(dropdown) {\n    var list = create('ul');\n    _dom_children(dropdown).forEach(function (anchor) {\n      var item = create('li');\n\n      if (anchor.matches('.dropdown-divider')) {\n        item.classList.add('Divider');\n      } else if (anchor.matches('.dropdown-item')) {\n        item.append(cloneLink(anchor));\n      }\n\n      list.append(item);\n    });\n    return list;\n  }\n\n  function cloneNav(nav) {\n    var list = create('ul');\n    find(nav, '.nav-item').forEach(function (anchor) {\n      var item = create('li');\n\n      if (anchor.matches('.active')) {\n        item.classList.add('Selected');\n      }\n\n      if (!anchor.matches('.nav-link')) {\n        var dropdown = _dom_children(anchor, '.dropdown-menu')[0];\n\n        if (dropdown) {\n          item.append(cloneDropdown(dropdown));\n        }\n\n        anchor = _dom_children(anchor, '.nav-link')[0];\n      }\n\n      item.prepend(cloneLink(anchor));\n      list.append(item);\n    });\n    return list;\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/wrappers/olark/mmenu.olark.js\n/* harmony default export */ var mmenu_olark = (function () {\n  this.conf.offCanvas.page.noSelector.push('#olark');\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/wrappers/turbolinks/mmenu.turbolinks.js\n\n/* harmony default export */ var mmenu_turbolinks = (function () {\n  var classnames;\n\n  var grep = function grep(items, callback) {\n    var filtered = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (callback(item)) {\n        filtered.push(item);\n      }\n    }\n\n    return filtered;\n  };\n\n  document.addEventListener('turbolinks:before-visit', function (evnt) {\n    classnames = document.documentElement.className;\n    classnames = grep(classnames.split(' '), function (name) {\n      return !/mm-/.test(name);\n    }).join(' ');\n  });\n  document.addEventListener('turbolinks:load', function (evnt) {\n    if (typeof classnames === 'undefined') {\n      return;\n    }\n\n    document.documentElement.className = classnames;\n  });\n});\n;\n// CONCATENATED MODULE: ./node_modules/mmenu-js/dist/wrappers/wordpress/mmenu.wordpress.js\n/* harmony default export */ var mmenu_wordpress = (function () {\n  this.conf.classNames.selected = 'current-menu-item';\n  var wpadminbar = document.getElementById('wpadminbar');\n\n  if (wpadminbar) {\n    wpadminbar.style.position = 'fixed';\n    wpadminbar.classList.add('mm-slideout');\n  }\n});\n// CONCATENATED MODULE: ./node_modules/mmenu-js/src/mmenu.js\n/*!\n * mmenu.js\n * mmenujs.com\n *\n * Copyright (c) Fred Heusschen\n * www.frebsite.nl\n *\n * License: CC-BY-NC-4.0\n * http://creativecommons.org/licenses/by-nc/4.0/\n */\n//\tCore\n //\tCore add-ons\n\n\n\n //\tAdd-ons\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n //\tWrappers\n\n\n\n\n\n\nmmenu_oncanvas_Mmenu.addons = {\n  //\tCore add-ons\n  offcanvas: mmenu_offcanvas,\n  screenReader: mmenu_screenreader,\n  scrollBugFix: mmenu_scrollbugfix,\n  //\tAdd-ons\n  autoHeight: mmenu_autoheight,\n  backButton: mmenu_backbutton,\n  columns: mmenu_columns,\n  counters: mmenu_counters,\n  dividers: mmenu_dividers,\n  drag: mmenu_drag,\n  dropdown: mmenu_dropdown,\n  fixedElements: mmenu_fixedelements,\n  iconbar: mmenu_iconbar,\n  iconPanels: mmenu_iconpanels,\n  keyboardNavigation: mmenu_keyboardnavigation,\n  lazySubmenus: mmenu_lazysubmenus,\n  navbars: Navbars,\n  pageScroll: mmenu_pagescroll,\n  searchfield: mmenu_searchfield,\n  sectionIndexer: mmenu_sectionindexer,\n  setSelected: mmenu_setselected,\n  sidebar: mmenu_sidebar,\n  toggles: mmenu_toggles\n}; //\tWrappers\n\nmmenu_oncanvas_Mmenu.wrappers = {\n  angular: mmenu_angular,\n  bootstrap: mmenu_bootstrap,\n  olark: mmenu_olark,\n  turbolinks: mmenu_turbolinks,\n  wordpress: mmenu_wordpress\n}; //\tGlobal namespace\n\nwindow.Mmenu = mmenu_oncanvas_Mmenu; //\tjQuery plugin\n\n(function ($) {\n  if ($) {\n    $.fn.mmenu = function (options, configs) {\n      var $result = $();\n      this.each(function (e, element) {\n        //\tDon't proceed if the element already is a mmenu.\n        if (element['mmApi']) {\n          return;\n        }\n\n        var menu = new mmenu_oncanvas_Mmenu(element, options, configs),\n            $menu = $(menu.node.menu); //\tStore the API.\n\n        $menu.data('mmenu', menu.API);\n        $result = $result.add($menu);\n      });\n      return $result;\n    };\n  }\n})(window.jQuery || window.Zepto || null);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///95\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/tiny-slider/src/helpers/Object.keys.js\nvar Object_keys = __webpack_require__(182);\n\n// EXTERNAL MODULE: ./node_modules/tiny-slider/src/helpers/childNode.remove.js\nvar childNode_remove = __webpack_require__(183);\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/raf.js\nvar raf_win = window;\n\nvar raf = raf_win.requestAnimationFrame\n  || raf_win.webkitRequestAnimationFrame\n  || raf_win.mozRequestAnimationFrame\n  || raf_win.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16); };\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/caf.js\nvar caf_win = window;\n\nvar caf = caf_win.cancelAnimationFrame\n  || caf_win.mozCancelAnimationFrame\n  || function(id){ clearTimeout(id); };\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/extend.js\nfunction extend() {\n  var obj, name, copy,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length;\n\n  for (; i < length; i++) {\n    if ((obj = arguments[i]) !== null) {\n      for (name in obj) {\n        copy = obj[name];\n\n        if (target === copy) {\n          continue;\n        } else if (copy !== undefined) {\n          target[name] = copy;\n        }\n      }\n    }\n  }\n  return target;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/checkStorageValue.js\nfunction checkStorageValue (value) {\n  return ['true', 'false'].indexOf(value) >= 0 ? JSON.parse(value) : value;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/setLocalStorage.js\nfunction setLocalStorage(storage, key, value, access) {\n  if (access) {\n    try { storage.setItem(key, value); } catch (e) {}\n  }\n  return value;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getSlideId.js\nfunction getSlideId() {\n  var id = window.tnsId;\n  window.tnsId = !id ? 1 : id + 1;\n  \n  return 'tns' + window.tnsId;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getBody.js\nfunction getBody () {\n  var doc = document,\n      body = doc.body;\n\n  if (!body) {\n    body = doc.createElement('body');\n    body.fake = true;\n  }\n\n  return body;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/docElement.js\nvar docElement = document.documentElement;\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/setFakeBody.js\n\n\nfunction setFakeBody (body) {\n  var docOverflow = '';\n  if (body.fake) {\n    docOverflow = docElement.style.overflow;\n    //avoid crashing IE8, if background image is used\n    body.style.background = '';\n    //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n    body.style.overflow = docElement.style.overflow = 'hidden';\n    docElement.appendChild(body);\n  }\n\n  return docOverflow;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/resetFakeBody.js\n\n\nfunction resetFakeBody (body, docOverflow) {\n  if (body.fake) {\n    body.remove();\n    docElement.style.overflow = docOverflow;\n    // Trigger layout so kinetic scrolling isn't disabled in iOS6+\n    // eslint-disable-next-line\n    docElement.offsetHeight;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/calc.js\n// get css-calc \n// @return - false | calc | -webkit-calc | -moz-calc\n// @usage - var calc = getCalc(); \n\n\n\n\nfunction calc() {\n  var doc = document, \n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      div = doc.createElement('div'), \n      result = false;\n\n  body.appendChild(div);\n  try {\n    var str = '(10px * 10)',\n        vals = ['calc' + str, '-moz-calc' + str, '-webkit-calc' + str],\n        val;\n    for (var i = 0; i < 3; i++) {\n      val = vals[i];\n      div.style.width = val;\n      if (div.offsetWidth === 100) { \n        result = val.replace(str, ''); \n        break;\n      }\n    }\n  } catch (e) {}\n  \n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n  return result;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/percentageLayout.js\n// get subpixel support value\n// @return - boolean\n\n\n\n\nfunction percentageLayout() {\n  // check subpixel layout supporting\n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      wrapper = doc.createElement('div'),\n      outer = doc.createElement('div'),\n      str = '',\n      count = 70,\n      perPage = 3,\n      supported = false;\n\n  wrapper.className = \"tns-t-subp2\";\n  outer.className = \"tns-t-ct\";\n\n  for (var i = 0; i < count; i++) {\n    str += '<div></div>';\n  }\n\n  outer.innerHTML = str;\n  wrapper.appendChild(outer);\n  body.appendChild(wrapper);\n\n  supported = Math.abs(wrapper.getBoundingClientRect().left - outer.children[count - perPage].getBoundingClientRect().left) < 2;\n\n  body.fake ? resetFakeBody(body, docOverflow) : wrapper.remove();\n\n  return supported;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/mediaquerySupport.js\n\n\n\n\nfunction mediaquerySupport () {\n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      div = doc.createElement('div'),\n      style = doc.createElement('style'),\n      rule = '@media all and (min-width:1px){.tns-mq-test{position:absolute}}',\n      position;\n\n  style.type = 'text/css';\n  div.className = 'tns-mq-test';\n\n  body.appendChild(style);\n  body.appendChild(div);\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = rule;\n  } else {\n    style.appendChild(doc.createTextNode(rule));\n  }\n\n  position = window.getComputedStyle ? window.getComputedStyle(div).position : div.currentStyle['position'];\n\n  body.fake ? resetFakeBody(body, docOverflow) : div.remove();\n\n  return position === \"absolute\";\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/createStyleSheet.js\n// create and append style sheet\nfunction createStyleSheet (media) {\n  // Create the <style> tag\n  var style = document.createElement(\"style\");\n  // style.setAttribute(\"type\", \"text/css\");\n\n  // Add a media (and/or media query) here if you'd like!\n  // style.setAttribute(\"media\", \"screen\")\n  // style.setAttribute(\"media\", \"only screen and (max-width : 1024px)\")\n  if (media) { style.setAttribute(\"media\", media); }\n\n  // WebKit hack :(\n  // style.appendChild(document.createTextNode(\"\"));\n\n  // Add the <style> element to the page\n  document.querySelector('head').appendChild(style);\n\n  return style.sheet ? style.sheet : style.styleSheet;\n};\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/addCSSRule.js\n// cross browsers addRule method\n\nfunction addCSSRule(sheet, selector, rules, index) {\n  // return raf(function() {\n    'insertRule' in sheet ?\n      sheet.insertRule(selector + '{' + rules + '}', index) :\n      sheet.addRule(selector, rules, index);\n  // });\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/removeCSSRule.js\n// cross browsers addRule method\n\nfunction removeCSSRule(sheet, index) {\n  // return raf(function() {\n    'deleteRule' in sheet ?\n      sheet.deleteRule(index) :\n      sheet.removeRule(index);\n  // });\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getCssRulesLength.js\nfunction getCssRulesLength(sheet) {\n  var rule = ('insertRule' in sheet) ? sheet.cssRules : sheet.rules;\n  return rule.length;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/toDegree.js\nfunction toDegree (y, x) {\n  return Math.atan2(y, x) * (180 / Math.PI);\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getTouchDirection.js\nfunction getTouchDirection(angle, range) {\n  var direction = false,\n      gap = Math.abs(90 - Math.abs(angle));\n      \n  if (gap >= 90 - range) {\n    direction = 'horizontal';\n  } else if (gap <= range) {\n    direction = 'vertical';\n  }\n\n  return direction;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/forEach.js\n// https://toddmotto.com/ditch-the-array-foreach-call-nodelist-hack/\nfunction forEach (arr, callback, scope) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    callback.call(scope, arr[i], i);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/classListSupport.js\nvar classListSupport = 'classList' in document.createElement('_');\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/hasClass.js\n\n\nvar hasClass = classListSupport ?\n    function (el, str) { return el.classList.contains(str); } :\n    function (el, str) { return el.className.indexOf(str) >= 0; };\n\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/addClass.js\n\nvar addClass = classListSupport ?\n    function (el, str) {\n      if (!hasClass(el,  str)) { el.classList.add(str); }\n    } :\n    function (el, str) {\n      if (!hasClass(el,  str)) { el.className += ' ' + str; }\n    };\n\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/removeClass.js\n\nvar removeClass = classListSupport ?\n    function (el, str) {\n      if (hasClass(el,  str)) { el.classList.remove(str); }\n    } :\n    function (el, str) {\n      if (hasClass(el, str)) { el.className = el.className.replace(str, ''); }\n    };\n\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/hasAttr.js\nfunction hasAttr(el, attr) {\n  return el.hasAttribute(attr);\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getAttr.js\nfunction getAttr(el, attr) {\n  return el.getAttribute(attr);\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/isNodeList.js\nfunction isNodeList(el) {\n  // Only NodeList has the \"item()\" function\n  return typeof el.item !== \"undefined\"; \n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/setAttrs.js\n\n\nfunction setAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  if (Object.prototype.toString.call(attrs) !== '[object Object]') { return; }\n\n  for (var i = els.length; i--;) {\n    for(var key in attrs) {\n      els[i].setAttribute(key, attrs[key]);\n    }\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/removeAttrs.js\n\n\nfunction removeAttrs(els, attrs) {\n  els = (isNodeList(els) || els instanceof Array) ? els : [els];\n  attrs = (attrs instanceof Array) ? attrs : [attrs];\n\n  var attrLength = attrs.length;\n  for (var i = els.length; i--;) {\n    for (var j = attrLength; j--;) {\n      els[i].removeAttribute(attrs[j]);\n    }\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/arrayFromNodeList.js\nfunction arrayFromNodeList (nl) {\n  var arr = [];\n  for (var i = 0, l = nl.length; i < l; i++) {\n    arr.push(nl[i]);\n  }\n  return arr;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/hideElement.js\nfunction hideElement(el, forceHide) {\n  if (el.style.display !== 'none') { el.style.display = 'none'; }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/showElement.js\nfunction showElement(el, forceHide) {\n  if (el.style.display === 'none') { el.style.display = ''; }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/isVisible.js\nfunction isVisible(el) {\n  return window.getComputedStyle(el).display !== 'none';\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/whichProperty.js\nfunction whichProperty(props){\n  if (typeof props === 'string') {\n    var arr = [props],\n        Props = props.charAt(0).toUpperCase() + props.substr(1),\n        prefixes = ['Webkit', 'Moz', 'ms', 'O'];\n        \n    prefixes.forEach(function(prefix) {\n      if (prefix !== 'ms' || props === 'transform') {\n        arr.push(prefix + Props);\n      }\n    });\n\n    props = arr;\n  }\n\n  var el = document.createElement('fakeelement'),\n      len = props.length;\n  for(var i = 0; i < props.length; i++){\n    var prop = props[i];\n    if( el.style[prop] !== undefined ){ return prop; }\n  }\n\n  return false; // explicit for ie9-\n}\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/has3DTransforms.js\n\n\n\n\nfunction has3DTransforms(tf){\n  if (!tf) { return false; }\n  if (!window.getComputedStyle) { return false; }\n  \n  var doc = document,\n      body = getBody(),\n      docOverflow = setFakeBody(body),\n      el = doc.createElement('p'),\n      has3d,\n      cssTF = tf.length > 9 ? '-' + tf.slice(0, -9).toLowerCase() + '-' : '';\n\n  cssTF += 'transform';\n\n  // Add it to the body to get the computed style\n  body.insertBefore(el, null);\n\n  el.style[tf] = 'translate3d(1px,1px,1px)';\n  has3d = window.getComputedStyle(el).getPropertyValue(cssTF);\n\n  body.fake ? resetFakeBody(body, docOverflow) : el.remove();\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== \"none\");\n}\n\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/getEndProperty.js\n// get transitionend, animationend based on transitionDuration\n// @propin: string\n// @propOut: string, first-letter uppercase\n// Usage: getEndProperty('WebkitTransitionDuration', 'Transition') => webkitTransitionEnd\nfunction getEndProperty(propIn, propOut) {\n  var endProp = false;\n  if (/^Webkit/.test(propIn)) {\n    endProp = 'webkit' + propOut + 'End';\n  } else if (/^O/.test(propIn)) {\n    endProp = 'o' + propOut + 'End';\n  } else if (propIn) {\n    endProp = propOut.toLowerCase() + 'end';\n  }\n  return endProp;\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/passiveOption.js\n// Test via a getter in the options object to see if the passive property is accessed\nvar supportsPassive = false;\ntry {\n  var passiveOption_opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener(\"test\", null, passiveOption_opts);\n} catch (e) {}\nvar passiveOption = supportsPassive ? { passive: true } : false;\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/addEvents.js\n\n\nfunction addEvents(el, obj, preventScrolling) {\n  for (var prop in obj) {\n    var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 && !preventScrolling ? passiveOption : false;\n    el.addEventListener(prop, obj[prop], option);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/removeEvents.js\n\n\nfunction removeEvents(el, obj) {\n  for (var prop in obj) {\n    var option = ['touchstart', 'touchmove'].indexOf(prop) >= 0 ? passiveOption : false;\n    el.removeEventListener(prop, obj[prop], option);\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/events.js\nfunction Events() {\n  return {\n    topics: {},\n    on: function (eventName, fn) {\n      this.topics[eventName] = this.topics[eventName] || [];\n      this.topics[eventName].push(fn);\n    },\n    off: function(eventName, fn) {\n      if (this.topics[eventName]) {\n        for (var i = 0; i < this.topics[eventName].length; i++) {\n          if (this.topics[eventName][i] === fn) {\n            this.topics[eventName].splice(i, 1);\n            break;\n          }\n        }\n      }\n    },\n    emit: function (eventName, data) {\n      data.type = eventName;\n      if (this.topics[eventName]) {\n        this.topics[eventName].forEach(function(fn) {\n          fn(data, eventName);\n        });\n      }\n    }\n  };\n};\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/helpers/jsTransform.js\nfunction jsTransform(element, attr, prefix, postfix, to, duration, callback) {\n  var tick = Math.min(duration, 10),\n      unit = (to.indexOf('%') >= 0) ? '%' : 'px',\n      to = to.replace(unit, ''),\n      from = Number(element.style[attr].replace(prefix, '').replace(postfix, '').replace(unit, '')),\n      positionTick = (to - from) / duration * tick,\n      running;\n\n  setTimeout(moveElement, tick);\n  function moveElement() {\n    duration -= tick;\n    from += positionTick;\n    element.style[attr] = prefix + from + unit + postfix;\n    if (duration > 0) { \n      setTimeout(moveElement, tick); \n    } else {\n      callback();\n    }\n  }\n}\n// CONCATENATED MODULE: ./node_modules/tiny-slider/src/tiny-slider.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return tns; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar tns = function(options) {\n  options = extend({\n    container: '.slider',\n    mode: 'carousel',\n    axis: 'horizontal',\n    items: 1,\n    gutter: 0,\n    edgePadding: 0,\n    fixedWidth: false,\n    autoWidth: false,\n    viewportMax: false,\n    slideBy: 1,\n    center: false,\n    controls: true,\n    controlsPosition: 'top',\n    controlsText: ['prev', 'next'],\n    controlsContainer: false,\n    prevButton: false,\n    nextButton: false,\n    nav: true,\n    navPosition: 'top',\n    navContainer: false,\n    navAsThumbnails: false,\n    arrowKeys: false,\n    speed: 300,\n    autoplay: false,\n    autoplayPosition: 'top',\n    autoplayTimeout: 5000,\n    autoplayDirection: 'forward',\n    autoplayText: ['start', 'stop'],\n    autoplayHoverPause: false,\n    autoplayButton: false,\n    autoplayButtonOutput: true,\n    autoplayResetOnVisibility: true,\n    animateIn: 'tns-fadeIn',\n    animateOut: 'tns-fadeOut',\n    animateNormal: 'tns-normal',\n    animateDelay: false,\n    loop: true,\n    rewind: false,\n    autoHeight: false,\n    responsive: false,\n    lazyload: false,\n    lazyloadSelector: '.tns-lazy-img',\n    touch: true,\n    mouseDrag: false,\n    swipeAngle: 15,\n    nested: false,\n    preventActionWhenRunning: false,\n    preventScrollOnTouch: false,\n    freezable: true,\n    onInit: false,\n    useLocalStorage: true\n  }, options || {});\n  \n  var doc = document,\n      win = window,\n      KEYS = {\n        ENTER: 13,\n        SPACE: 32,\n        LEFT: 37,\n        RIGHT: 39\n      },\n      tnsStorage = {},\n      localStorageAccess = options.useLocalStorage;\n\n  if (localStorageAccess) {\n    // check browser version and local storage access\n    var browserInfo = navigator.userAgent;\n    var uid = new Date;\n\n    try {\n      tnsStorage = win.localStorage;\n      if (tnsStorage) {\n        tnsStorage.setItem(uid, uid);\n        localStorageAccess = tnsStorage.getItem(uid) == uid;\n        tnsStorage.removeItem(uid);\n      } else {\n        localStorageAccess = false;\n      }\n      if (!localStorageAccess) { tnsStorage = {}; }\n    } catch(e) {\n      localStorageAccess = false;\n    }\n\n    if (localStorageAccess) {\n      // remove storage when browser version changes\n      if (tnsStorage['tnsApp'] && tnsStorage['tnsApp'] !== browserInfo) {\n        ['tC', 'tPL', 'tMQ', 'tTf', 't3D', 'tTDu', 'tTDe', 'tADu', 'tADe', 'tTE', 'tAE'].forEach(function(item) { tnsStorage.removeItem(item); });\n      }\n      // update browserInfo\n      localStorage['tnsApp'] = browserInfo;\n    }\n  }\n\n  var CALC = tnsStorage['tC'] ? checkStorageValue(tnsStorage['tC']) : setLocalStorage(tnsStorage, 'tC', calc(), localStorageAccess),\n      PERCENTAGELAYOUT = tnsStorage['tPL'] ? checkStorageValue(tnsStorage['tPL']) : setLocalStorage(tnsStorage, 'tPL', percentageLayout(), localStorageAccess),\n      CSSMQ = tnsStorage['tMQ'] ? checkStorageValue(tnsStorage['tMQ']) : setLocalStorage(tnsStorage, 'tMQ', mediaquerySupport(), localStorageAccess),\n      TRANSFORM = tnsStorage['tTf'] ? checkStorageValue(tnsStorage['tTf']) : setLocalStorage(tnsStorage, 'tTf', whichProperty('transform'), localStorageAccess),\n      HAS3DTRANSFORMS = tnsStorage['t3D'] ? checkStorageValue(tnsStorage['t3D']) : setLocalStorage(tnsStorage, 't3D', has3DTransforms(TRANSFORM), localStorageAccess),\n      TRANSITIONDURATION = tnsStorage['tTDu'] ? checkStorageValue(tnsStorage['tTDu']) : setLocalStorage(tnsStorage, 'tTDu', whichProperty('transitionDuration'), localStorageAccess),\n      TRANSITIONDELAY = tnsStorage['tTDe'] ? checkStorageValue(tnsStorage['tTDe']) : setLocalStorage(tnsStorage, 'tTDe', whichProperty('transitionDelay'), localStorageAccess),\n      ANIMATIONDURATION = tnsStorage['tADu'] ? checkStorageValue(tnsStorage['tADu']) : setLocalStorage(tnsStorage, 'tADu', whichProperty('animationDuration'), localStorageAccess),\n      ANIMATIONDELAY = tnsStorage['tADe'] ? checkStorageValue(tnsStorage['tADe']) : setLocalStorage(tnsStorage, 'tADe', whichProperty('animationDelay'), localStorageAccess),\n      TRANSITIONEND = tnsStorage['tTE'] ? checkStorageValue(tnsStorage['tTE']) : setLocalStorage(tnsStorage, 'tTE', getEndProperty(TRANSITIONDURATION, 'Transition'), localStorageAccess),\n      ANIMATIONEND = tnsStorage['tAE'] ? checkStorageValue(tnsStorage['tAE']) : setLocalStorage(tnsStorage, 'tAE', getEndProperty(ANIMATIONDURATION, 'Animation'), localStorageAccess);\n\n  // get element nodes from selectors\n  var supportConsoleWarn = win.console && typeof win.console.warn === \"function\",\n      tnsList = ['container', 'controlsContainer', 'prevButton', 'nextButton', 'navContainer', 'autoplayButton'], \n      optionsElements = {};\n      \n  tnsList.forEach(function(item) {\n    if (typeof options[item] === 'string') {\n      var str = options[item],\n          el = doc.querySelector(str);\n      optionsElements[item] = str;\n\n      if (el && el.nodeName) {\n        options[item] = el;\n      } else {\n        if (supportConsoleWarn) { console.warn('Can\\'t find', options[item]); }\n        return;\n      }\n    }\n  });\n\n  // make sure at least 1 slide\n  if (options.container.children.length < 1) {\n    if (supportConsoleWarn) { console.warn('No slides found in', options.container); }\n    return;\n   }\n\n  // update options\n  var responsive = options.responsive,\n      nested = options.nested,\n      carousel = options.mode === 'carousel' ? true : false;\n\n  if (responsive) {\n    // apply responsive[0] to options and remove it\n    if (0 in responsive) {\n      options = extend(options, responsive[0]);\n      delete responsive[0];\n    }\n\n    var responsiveTem = {};\n    for (var key in responsive) {\n      var val = responsive[key];\n      // update responsive\n      // from: 300: 2\n      // to: \n      //   300: { \n      //     items: 2 \n      //   } \n      val = typeof val === 'number' ? {items: val} : val;\n      responsiveTem[key] = val;\n    }\n    responsive = responsiveTem;\n    responsiveTem = null;\n  }\n\n  // update options\n  function updateOptions (obj) {\n    for (var key in obj) {\n      if (!carousel) {\n        if (key === 'slideBy') { obj[key] = 'page'; }\n        if (key === 'edgePadding') { obj[key] = false; }\n        if (key === 'autoHeight') { obj[key] = false; }\n      }\n\n      // update responsive options\n      if (key === 'responsive') { updateOptions(obj[key]); }\n    }\n  }\n  if (!carousel) { updateOptions(options); }\n\n\n  // === define and set variables ===\n  if (!carousel) {\n    options.axis = 'horizontal';\n    options.slideBy = 'page';\n    options.edgePadding = false;\n\n    var animateIn = options.animateIn,\n        animateOut = options.animateOut,\n        animateDelay = options.animateDelay,\n        animateNormal = options.animateNormal;\n  }\n\n  var horizontal = options.axis === 'horizontal' ? true : false,\n      outerWrapper = doc.createElement('div'),\n      innerWrapper = doc.createElement('div'),\n      middleWrapper,\n      container = options.container,\n      containerParent = container.parentNode,\n      containerHTML = container.outerHTML,\n      slideItems = container.children,\n      slideCount = slideItems.length,\n      breakpointZone,\n      windowWidth = getWindowWidth(),\n      isOn = false;\n  if (responsive) { setBreakpointZone(); }\n  if (carousel) { container.className += ' tns-vpfix'; }\n\n  // fixedWidth: viewport > rightBoundary > indexMax\n  var autoWidth = options.autoWidth,\n      fixedWidth = getOption('fixedWidth'),\n      edgePadding = getOption('edgePadding'),\n      gutter = getOption('gutter'),\n      viewport = getViewportWidth(),\n      center = getOption('center'),\n      items = !autoWidth ? Math.floor(getOption('items')) : 1,\n      slideBy = getOption('slideBy'),\n      viewportMax = options.viewportMax || options.fixedWidthViewportWidth,\n      arrowKeys = getOption('arrowKeys'),\n      speed = getOption('speed'),\n      rewind = options.rewind,\n      loop = rewind ? false : options.loop,\n      autoHeight = getOption('autoHeight'),\n      controls = getOption('controls'),\n      controlsText = getOption('controlsText'),\n      nav = getOption('nav'),\n      touch = getOption('touch'),\n      mouseDrag = getOption('mouseDrag'),\n      autoplay = getOption('autoplay'),\n      autoplayTimeout = getOption('autoplayTimeout'),\n      autoplayText = getOption('autoplayText'),\n      autoplayHoverPause = getOption('autoplayHoverPause'),\n      autoplayResetOnVisibility = getOption('autoplayResetOnVisibility'),\n      sheet = createStyleSheet(),\n      lazyload = options.lazyload,\n      lazyloadSelector = options.lazyloadSelector,\n      slidePositions, // collection of slide positions\n      slideItemsOut = [],\n      cloneCount = loop ? getCloneCountForLoop() : 0,\n      slideCountNew = !carousel ? slideCount + cloneCount : slideCount + cloneCount * 2,\n      hasRightDeadZone = (fixedWidth || autoWidth) && !loop ? true : false,\n      rightBoundary = fixedWidth ? getRightBoundary() : null,\n      updateIndexBeforeTransform = (!carousel || !loop) ? true : false,\n      // transform\n      transformAttr = horizontal ? 'left' : 'top',\n      transformPrefix = '',\n      transformPostfix = '',\n      // index\n      getIndexMax = (function () {\n        if (fixedWidth) {\n          return function() { return center && !loop ? slideCount - 1 : Math.ceil(- rightBoundary / (fixedWidth + gutter)); };\n        } else if (autoWidth) {\n          return function() {\n            for (var i = slideCountNew; i--;) {\n              if (slidePositions[i] >= - rightBoundary) { return i; }\n            }\n          };\n        } else {\n          return function() {\n            if (center && carousel && !loop) {\n              return slideCount - 1;\n            } else {\n              return loop || carousel ? Math.max(0, slideCountNew - Math.ceil(items)) : slideCountNew - 1;\n            }\n          };\n        }\n      })(),\n      index = getStartIndex(getOption('startIndex')),\n      indexCached = index,\n      displayIndex = getCurrentSlide(),\n      indexMin = 0,\n      indexMax = !autoWidth ? getIndexMax() : null,\n      // resize\n      resizeTimer,\n      preventActionWhenRunning = options.preventActionWhenRunning,\n      swipeAngle = options.swipeAngle,\n      moveDirectionExpected = swipeAngle ? '?' : true,\n      running = false,\n      onInit = options.onInit,\n      events = new Events(),\n      // id, class\n      newContainerClasses = ' tns-slider tns-' + options.mode,\n      slideId = container.id || getSlideId(),\n      disable = getOption('disable'),\n      disabled = false,\n      freezable = options.freezable,\n      freeze = freezable && !autoWidth ? getFreeze() : false,\n      frozen = false,\n      controlsEvents = {\n        'click': onControlsClick,\n        'keydown': onControlsKeydown\n      },\n      navEvents = {\n        'click': onNavClick,\n        'keydown': onNavKeydown\n      },\n      hoverEvents = {\n        'mouseover': mouseoverPause,\n        'mouseout': mouseoutRestart\n      },\n      visibilityEvent = {'visibilitychange': onVisibilityChange},\n      docmentKeydownEvent = {'keydown': onDocumentKeydown},\n      touchEvents = {\n        'touchstart': onPanStart,\n        'touchmove': onPanMove,\n        'touchend': onPanEnd,\n        'touchcancel': onPanEnd\n      }, dragEvents = {\n        'mousedown': onPanStart,\n        'mousemove': onPanMove,\n        'mouseup': onPanEnd,\n        'mouseleave': onPanEnd\n      },\n      hasControls = hasOption('controls'),\n      hasNav = hasOption('nav'),\n      navAsThumbnails = autoWidth ? true : options.navAsThumbnails,\n      hasAutoplay = hasOption('autoplay'),\n      hasTouch = hasOption('touch'),\n      hasMouseDrag = hasOption('mouseDrag'),\n      slideActiveClass = 'tns-slide-active',\n      imgCompleteClass = 'tns-complete',\n      imgEvents = {\n        'load': onImgLoaded,\n        'error': onImgFailed\n      },\n      imgsComplete,\n      liveregionCurrent,\n      preventScroll = options.preventScrollOnTouch === 'force' ? true : false;\n\n  // controls\n  if (hasControls) {\n    var controlsContainer = options.controlsContainer,\n        controlsContainerHTML = options.controlsContainer ? options.controlsContainer.outerHTML : '',\n        prevButton = options.prevButton,\n        nextButton = options.nextButton,\n        prevButtonHTML = options.prevButton ? options.prevButton.outerHTML : '',\n        nextButtonHTML = options.nextButton ? options.nextButton.outerHTML : '',\n        prevIsButton,\n        nextIsButton;\n  }\n\n  // nav\n  if (hasNav) {\n    var navContainer = options.navContainer,\n        navContainerHTML = options.navContainer ? options.navContainer.outerHTML : '',\n        navItems,\n        pages = autoWidth ? slideCount : getPages(),\n        pagesCached = 0,\n        navClicked = -1,\n        navCurrentIndex = getCurrentNavIndex(),\n        navCurrentIndexCached = navCurrentIndex,\n        navActiveClass = 'tns-nav-active',\n        navStr = 'Carousel Page ',\n        navStrCurrent = ' (Current Slide)';\n  }\n\n  // autoplay\n  if (hasAutoplay) {\n    var autoplayDirection = options.autoplayDirection === 'forward' ? 1 : -1,\n        autoplayButton = options.autoplayButton,\n        autoplayButtonHTML = options.autoplayButton ? options.autoplayButton.outerHTML : '',\n        autoplayHtmlStrings = ['<span class=\\'tns-visually-hidden\\'>', ' animation</span>'],\n        autoplayTimer,\n        animating,\n        autoplayHoverPaused,\n        autoplayUserPaused,\n        autoplayVisibilityPaused;\n  }\n\n  if (hasTouch || hasMouseDrag) {\n    var initPosition = {},\n        lastPosition = {},\n        translateInit,\n        disX,\n        disY,\n        panStart = false,\n        rafIndex,\n        getDist = horizontal ? \n          function(a, b) { return a.x - b.x; } :\n          function(a, b) { return a.y - b.y; };\n  }\n  \n  // disable slider when slidecount <= items\n  if (!autoWidth) { resetVariblesWhenDisable(disable || freeze); }\n\n  if (TRANSFORM) {\n    transformAttr = TRANSFORM;\n    transformPrefix = 'translate';\n\n    if (HAS3DTRANSFORMS) {\n      transformPrefix += horizontal ? '3d(' : '3d(0px, ';\n      transformPostfix = horizontal ? ', 0px, 0px)' : ', 0px)';\n    } else {\n      transformPrefix += horizontal ? 'X(' : 'Y(';\n      transformPostfix = ')';\n    }\n\n  }\n\n  if (carousel) { container.className = container.className.replace('tns-vpfix', ''); }\n  initStructure();\n  initSheet();\n  initSliderTransform();\n\n  // === COMMON FUNCTIONS === //\n  function resetVariblesWhenDisable (condition) {\n    if (condition) {\n      controls = nav = touch = mouseDrag = arrowKeys = autoplay = autoplayHoverPause = autoplayResetOnVisibility = false;\n    }\n  }\n\n  function getCurrentSlide () {\n    var tem = carousel ? index - cloneCount : index;\n    while (tem < 0) { tem += slideCount; }\n    return tem%slideCount + 1;\n  }\n\n  function getStartIndex (ind) {\n    ind = ind ? Math.max(0, Math.min(loop ? slideCount - 1 : slideCount - items, ind)) : 0;\n    return carousel ? ind + cloneCount : ind;\n  }\n\n  function getAbsIndex (i) {\n    if (i == null) { i = index; }\n\n    if (carousel) { i -= cloneCount; }\n    while (i < 0) { i += slideCount; }\n\n    return Math.floor(i%slideCount);\n  }\n\n  function getCurrentNavIndex () {\n    var absIndex = getAbsIndex(),\n        result;\n\n    result = navAsThumbnails ? absIndex : \n      fixedWidth || autoWidth ? Math.ceil((absIndex + 1) * pages / slideCount - 1) : \n          Math.floor(absIndex / items);\n\n    // set active nav to the last one when reaches the right edge\n    if (!loop && carousel && index === indexMax) { result = pages - 1; }\n\n    return result;\n  }\n\n  function getItemsMax () {\n    // fixedWidth or autoWidth while viewportMax is not available\n    if (autoWidth || (fixedWidth && !viewportMax)) {\n      return slideCount - 1;\n    // most cases\n    } else {\n      var str = fixedWidth ? 'fixedWidth' : 'items',\n          arr = [];\n\n      if (fixedWidth || options[str] < slideCount) { arr.push(options[str]); }\n\n      if (responsive) {\n        for (var bp in responsive) {\n          var tem = responsive[bp][str];\n          if (tem && (fixedWidth || tem < slideCount)) { arr.push(tem); }\n        }\n      }\n\n      if (!arr.length) { arr.push(0); }\n\n      return Math.ceil(fixedWidth ? viewportMax / Math.min.apply(null, arr) : Math.max.apply(null, arr));\n    }\n  }\n\n  function getCloneCountForLoop () {\n    var itemsMax = getItemsMax(),\n        result = carousel ? Math.ceil((itemsMax * 5 - slideCount)/2) : (itemsMax * 4 - slideCount);\n    result = Math.max(itemsMax, result);\n\n    return hasOption('edgePadding') ? result + 1 : result;\n  }\n\n  function getWindowWidth () {\n    return win.innerWidth || doc.documentElement.clientWidth || doc.body.clientWidth;\n  }\n\n  function getInsertPosition (pos) {\n    return pos === 'top' ? 'afterbegin' : 'beforeend';\n  }\n\n  function getClientWidth (el) {\n    var div = doc.createElement('div'), rect, width;\n    el.appendChild(div);\n    rect = div.getBoundingClientRect();\n    width = rect.right - rect.left;\n    div.remove();\n    return width || getClientWidth(el.parentNode);\n  }\n\n  function getViewportWidth () {\n    var gap = edgePadding ? edgePadding * 2 - gutter : 0;\n    return getClientWidth(containerParent) - gap;\n  }\n\n  function hasOption (item) {\n    if (options[item]) {\n      return true;\n    } else {\n      if (responsive) {\n        for (var bp in responsive) {\n          if (responsive[bp][item]) { return true; }\n        }\n      }\n      return false;\n    }\n  }\n\n  // get option:\n  // fixed width: viewport, fixedWidth, gutter => items\n  // others: window width => all variables\n  // all: items => slideBy\n  function getOption (item, ww) {\n    if (ww == null) { ww = windowWidth; }\n\n    if (item === 'items' && fixedWidth) {\n      return Math.floor((viewport + gutter) / (fixedWidth + gutter)) || 1;\n\n    } else {\n      var result = options[item];\n\n      if (responsive) {\n        for (var bp in responsive) {\n          // bp: convert string to number\n          if (ww >= parseInt(bp)) {\n            if (item in responsive[bp]) { result = responsive[bp][item]; }\n          }\n        }\n      }\n\n      if (item === 'slideBy' && result === 'page') { result = getOption('items'); }\n      if (!carousel && (item === 'slideBy' || item === 'items')) { result = Math.floor(result); }\n\n      return result;\n    }\n  }\n\n  function getSlideMarginLeft (i) {\n    return CALC ? \n      CALC + '(' + i * 100 + '% / ' + slideCountNew + ')' : \n      i * 100 / slideCountNew + '%';\n  }\n\n  function getInnerWrapperStyles (edgePaddingTem, gutterTem, fixedWidthTem, speedTem, autoHeightBP) {\n    var str = '';\n\n    if (edgePaddingTem !== undefined) {\n      var gap = edgePaddingTem;\n      if (gutterTem) { gap -= gutterTem; }\n      str = horizontal ?\n        'margin: 0 ' + gap + 'px 0 ' + edgePaddingTem + 'px;' :\n        'margin: ' + edgePaddingTem + 'px 0 ' + gap + 'px 0;';\n    } else if (gutterTem && !fixedWidthTem) {\n      var gutterTemUnit = '-' + gutterTem + 'px',\n          dir = horizontal ? gutterTemUnit + ' 0 0' : '0 ' + gutterTemUnit + ' 0';\n      str = 'margin: 0 ' + dir + ';'\n    }\n\n    if (!carousel && autoHeightBP && TRANSITIONDURATION && speedTem) { str += getTransitionDurationStyle(speedTem); }\n    return str;\n  }\n\n  function getContainerWidth (fixedWidthTem, gutterTem, itemsTem) {\n    if (fixedWidthTem) {\n      return (fixedWidthTem + gutterTem) * slideCountNew + 'px';\n    } else {\n      return CALC ?\n        CALC + '(' + slideCountNew * 100 + '% / ' + itemsTem + ')' :\n        slideCountNew * 100 / itemsTem + '%';\n    }\n  }\n\n  function getSlideWidthStyle (fixedWidthTem, gutterTem, itemsTem) {\n    var width;\n\n    if (fixedWidthTem) {\n      width = (fixedWidthTem + gutterTem) + 'px';\n    } else {\n      if (!carousel) { itemsTem = Math.floor(itemsTem); }\n      var dividend = carousel ? slideCountNew : itemsTem;\n      width = CALC ? \n        CALC + '(100% / ' + dividend + ')' : \n        100 / dividend + '%';\n    }\n\n    width = 'width:' + width;\n\n    // inner slider: overwrite outer slider styles\n    return nested !== 'inner' ? width + ';' : width + ' !important;';\n  }\n\n  function getSlideGutterStyle (gutterTem) {\n    var str = '';\n\n    // gutter maybe interger || 0\n    // so can't use 'if (gutter)'\n    if (gutterTem !== false) {\n      var prop = horizontal ? 'padding-' : 'margin-',\n          dir = horizontal ? 'right' : 'bottom';\n      str = prop +  dir + ': ' + gutterTem + 'px;';\n    }\n\n    return str;\n  }\n\n  function getCSSPrefix (name, num) {\n    var prefix = name.substring(0, name.length - num).toLowerCase();\n    if (prefix) { prefix = '-' + prefix + '-'; }\n\n    return prefix;\n  }\n\n  function getTransitionDurationStyle (speed) {\n    return getCSSPrefix(TRANSITIONDURATION, 18) + 'transition-duration:' + speed / 1000 + 's;';\n  }\n\n  function getAnimationDurationStyle (speed) {\n    return getCSSPrefix(ANIMATIONDURATION, 17) + 'animation-duration:' + speed / 1000 + 's;';\n  }\n\n  function initStructure () {\n    var classOuter = 'tns-outer',\n        classInner = 'tns-inner',\n        hasGutter = hasOption('gutter');\n\n    outerWrapper.className = classOuter;\n    innerWrapper.className = classInner;\n    outerWrapper.id = slideId + '-ow';\n    innerWrapper.id = slideId + '-iw';\n\n    // set container properties\n    if (container.id === '') { container.id = slideId; }\n    newContainerClasses += PERCENTAGELAYOUT || autoWidth ? ' tns-subpixel' : ' tns-no-subpixel';\n    newContainerClasses += CALC ? ' tns-calc' : ' tns-no-calc';\n    if (autoWidth) { newContainerClasses += ' tns-autowidth'; }\n    newContainerClasses += ' tns-' + options.axis;\n    container.className += newContainerClasses;\n\n    // add constrain layer for carousel\n    if (carousel) {\n      middleWrapper = doc.createElement('div');\n      middleWrapper.id = slideId + '-mw';\n      middleWrapper.className = 'tns-ovh';\n\n      outerWrapper.appendChild(middleWrapper);\n      middleWrapper.appendChild(innerWrapper);\n    } else {\n      outerWrapper.appendChild(innerWrapper);\n    }\n\n    if (autoHeight) {\n      var wp = middleWrapper ? middleWrapper : innerWrapper;\n      wp.className += ' tns-ah';\n    }\n\n    containerParent.insertBefore(outerWrapper, container);\n    innerWrapper.appendChild(container);\n\n    // add id, class, aria attributes \n    // before clone slides\n    forEach(slideItems, function(item, i) {\n      addClass(item, 'tns-item');\n      if (!item.id) { item.id = slideId + '-item' + i; }\n      if (!carousel && animateNormal) { addClass(item, animateNormal); }\n      setAttrs(item, {\n        'aria-hidden': 'true',\n        'tabindex': '-1'\n      });\n    });\n\n    // ## clone slides\n    // carousel: n + slides + n\n    // gallery:      slides + n\n    if (cloneCount) {\n      var fragmentBefore = doc.createDocumentFragment(), \n          fragmentAfter = doc.createDocumentFragment();\n\n      for (var j = cloneCount; j--;) {\n        var num = j%slideCount,\n            cloneFirst = slideItems[num].cloneNode(true);\n        removeAttrs(cloneFirst, 'id');\n        fragmentAfter.insertBefore(cloneFirst, fragmentAfter.firstChild);\n\n        if (carousel) {\n          var cloneLast = slideItems[slideCount - 1 - num].cloneNode(true);\n          removeAttrs(cloneLast, 'id');\n          fragmentBefore.appendChild(cloneLast);\n        }\n      }\n\n      container.insertBefore(fragmentBefore, container.firstChild);\n      container.appendChild(fragmentAfter);\n      slideItems = container.children;\n    }\n\n  }\n\n  function initSliderTransform () {\n    // ## images loaded/failed\n    if (hasOption('autoHeight') || autoWidth || !horizontal) {\n      var imgs = container.querySelectorAll('img');\n\n      // add complete class if all images are loaded/failed\n      forEach(imgs, function(img) {\n        var src = img.src;\n        \n        if (src && src.indexOf('data:image') < 0) {\n          addEvents(img, imgEvents);\n          img.src = '';\n          img.src = src;\n          addClass(img, 'loading');\n        } else if (!lazyload) {\n          imgLoaded(img);\n        }\n      });\n\n      // All imgs are completed\n      raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), function() { imgsComplete = true; }); });\n\n      // Check imgs in window only for auto height\n      if (!autoWidth && horizontal) { imgs = getImageArray(index, Math.min(index + items - 1, slideCountNew - 1)); }\n\n      lazyload ? initSliderTransformStyleCheck() : raf(function(){ imgsLoadedCheck(arrayFromNodeList(imgs), initSliderTransformStyleCheck); });\n\n    } else {\n      // set container transform property\n      if (carousel) { doContainerTransformSilent(); }\n\n      // update slider tools and events\n      initTools();\n      initEvents();\n    }\n  }\n\n  function initSliderTransformStyleCheck () {\n    if (autoWidth) {\n      // check styles application\n      var num = loop ? index : slideCount - 1;\n      (function stylesApplicationCheck() {\n        slideItems[num - 1].getBoundingClientRect().right.toFixed(2) === slideItems[num].getBoundingClientRect().left.toFixed(2) ?\n        initSliderTransformCore() :\n        setTimeout(function(){ stylesApplicationCheck() }, 16);\n      })();\n    } else {\n      initSliderTransformCore();\n    }\n  }\n\n\n  function initSliderTransformCore () {\n    // run Fn()s which are rely on image loading\n    if (!horizontal || autoWidth) {\n      setSlidePositions();\n\n      if (autoWidth) {\n        rightBoundary = getRightBoundary();\n        if (freezable) { freeze = getFreeze(); }\n        indexMax = getIndexMax(); // <= slidePositions, rightBoundary <=\n        resetVariblesWhenDisable(disable || freeze);\n      } else {\n        updateContentWrapperHeight();\n      }\n    }\n\n    // set container transform property\n    if (carousel) { doContainerTransformSilent(); }\n\n    // update slider tools and events\n    initTools();\n    initEvents();\n  }\n\n  function initSheet () {\n    // gallery:\n    // set animation classes and left value for gallery slider\n    if (!carousel) { \n      for (var i = index, l = index + Math.min(slideCount, items); i < l; i++) {\n        var item = slideItems[i];\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    }\n\n    // #### LAYOUT\n\n    // ## INLINE-BLOCK VS FLOAT\n\n    // ## PercentageLayout:\n    // slides: inline-block\n    // remove blank space between slides by set font-size: 0\n\n    // ## Non PercentageLayout:\n    // slides: float\n    //         margin-right: -100%\n    //         margin-left: ~\n\n    // Resource: https://docs.google.com/spreadsheets/d/147up245wwTXeQYve3BRSAD4oVcvQmuGsFteJOeA5xNQ/edit?usp=sharing\n    if (horizontal) {\n      if (PERCENTAGELAYOUT || autoWidth) {\n        addCSSRule(sheet, '#' + slideId + ' > .tns-item', 'font-size:' + win.getComputedStyle(slideItems[0]).fontSize + ';', getCssRulesLength(sheet));\n        addCSSRule(sheet, '#' + slideId, 'font-size:0;', getCssRulesLength(sheet));\n      } else if (carousel) {\n        forEach(slideItems, function (slide, i) {\n          slide.style.marginLeft = getSlideMarginLeft(i);\n        });\n      }\n    }\n\n\n    // ## BASIC STYLES\n    if (CSSMQ) {\n      // middle wrapper style\n      if (TRANSITIONDURATION) {\n        var str = middleWrapper && options.autoHeight ? getTransitionDurationStyle(options.speed) : '';\n        addCSSRule(sheet, '#' + slideId + '-mw', str, getCssRulesLength(sheet));\n      }\n\n      // inner wrapper styles\n      str = getInnerWrapperStyles(options.edgePadding, options.gutter, options.fixedWidth, options.speed, options.autoHeight);\n      addCSSRule(sheet, '#' + slideId + '-iw', str, getCssRulesLength(sheet));\n\n      // container styles\n      if (carousel) {\n        str = horizontal && !autoWidth ? 'width:' + getContainerWidth(options.fixedWidth, options.gutter, options.items) + ';' : '';\n        if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n        addCSSRule(sheet, '#' + slideId, str, getCssRulesLength(sheet));\n      }\n\n      // slide styles\n      str = horizontal && !autoWidth ? getSlideWidthStyle(options.fixedWidth, options.gutter, options.items) : '';\n      if (options.gutter) { str += getSlideGutterStyle(options.gutter); }\n      // set gallery items transition-duration\n      if (!carousel) {\n        if (TRANSITIONDURATION) { str += getTransitionDurationStyle(speed); }\n        if (ANIMATIONDURATION) { str += getAnimationDurationStyle(speed); }\n      }\n      if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n\n    // non CSS mediaqueries: IE8\n    // ## update inner wrapper, container, slides if needed\n    // set inline styles for inner wrapper & container\n    // insert stylesheet (one line) for slides only (since slides are many)\n    } else {\n      // middle wrapper styles\n      update_carousel_transition_duration();\n\n      // inner wrapper styles\n      innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, autoHeight);\n\n      // container styles\n      if (carousel && horizontal && !autoWidth) {\n        container.style.width = getContainerWidth(fixedWidth, gutter, items);\n      }\n\n      // slide styles\n      var str = horizontal && !autoWidth ? getSlideWidthStyle(fixedWidth, gutter, items) : '';\n      if (gutter) { str += getSlideGutterStyle(gutter); }\n\n      // append to the last line\n      if (str) { addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet)); }\n    }\n\n    // ## MEDIAQUERIES\n    if (responsive && CSSMQ) {\n      for (var bp in responsive) {\n        // bp: convert string to number\n        bp = parseInt(bp);\n\n        var opts = responsive[bp],\n            str = '',\n            middleWrapperStr = '',\n            innerWrapperStr = '',\n            containerStr = '',\n            slideStr = '',\n            itemsBP = !autoWidth ? getOption('items', bp) : null,\n            fixedWidthBP = getOption('fixedWidth', bp),\n            speedBP = getOption('speed', bp),\n            edgePaddingBP = getOption('edgePadding', bp),\n            autoHeightBP = getOption('autoHeight', bp),\n            gutterBP = getOption('gutter', bp);\n\n        // middle wrapper string\n        if (TRANSITIONDURATION && middleWrapper && getOption('autoHeight', bp) && 'speed' in opts) {\n          middleWrapperStr = '#' + slideId + '-mw{' + getTransitionDurationStyle(speedBP) + '}';\n        }\n\n        // inner wrapper string\n        if ('edgePadding' in opts || 'gutter' in opts) {\n          innerWrapperStr = '#' + slideId + '-iw{' + getInnerWrapperStyles(edgePaddingBP, gutterBP, fixedWidthBP, speedBP, autoHeightBP) + '}';\n        }\n\n        // container string\n        if (carousel && horizontal && !autoWidth && ('fixedWidth' in opts || 'items' in opts || (fixedWidth && 'gutter' in opts))) {\n          containerStr = 'width:' + getContainerWidth(fixedWidthBP, gutterBP, itemsBP) + ';';\n        }\n        if (TRANSITIONDURATION && 'speed' in opts) {\n          containerStr += getTransitionDurationStyle(speedBP);\n        }\n        if (containerStr) {\n          containerStr = '#' + slideId + '{' + containerStr + '}';\n        }\n\n        // slide string\n        if ('fixedWidth' in opts || (fixedWidth && 'gutter' in opts) || !carousel && 'items' in opts) {\n          slideStr += getSlideWidthStyle(fixedWidthBP, gutterBP, itemsBP);\n        }\n        if ('gutter' in opts) {\n          slideStr += getSlideGutterStyle(gutterBP);\n        }\n        // set gallery items transition-duration\n        if (!carousel && 'speed' in opts) {\n          if (TRANSITIONDURATION) { slideStr += getTransitionDurationStyle(speedBP); }\n          if (ANIMATIONDURATION) { slideStr += getAnimationDurationStyle(speedBP); }\n        }\n        if (slideStr) { slideStr = '#' + slideId + ' > .tns-item{' + slideStr + '}'; }\n\n        // add up\n        str = middleWrapperStr + innerWrapperStr + containerStr + slideStr;\n\n        if (str) {\n          sheet.insertRule('@media (min-width: ' + bp / 16 + 'em) {' + str + '}', sheet.cssRules.length);\n        }\n      }\n    }\n  }\n\n  function initTools () {\n    // == slides ==\n    updateSlideStatus();\n\n    // == live region ==\n    outerWrapper.insertAdjacentHTML('afterbegin', '<div class=\"tns-liveregion tns-visually-hidden\" aria-live=\"polite\" aria-atomic=\"true\">slide <span class=\"current\">' + getLiveRegionStr() + '</span>  of ' + slideCount + '</div>');\n    liveregionCurrent = outerWrapper.querySelector('.tns-liveregion .current');\n\n    // == autoplayInit ==\n    if (hasAutoplay) {\n      var txt = autoplay ? 'stop' : 'start';\n      if (autoplayButton) {\n        setAttrs(autoplayButton, {'data-action': txt});\n      } else if (options.autoplayButtonOutput) {\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.autoplayPosition), '<button data-action=\"' + txt + '\">' + autoplayHtmlStrings[0] + txt + autoplayHtmlStrings[1] + autoplayText[0] + '</button>');\n        autoplayButton = outerWrapper.querySelector('[data-action]');\n      }\n\n      // add event\n      if (autoplayButton) {\n        addEvents(autoplayButton, {'click': toggleAutoplay});\n      }\n\n      if (autoplay) {\n        startAutoplay();\n        if (autoplayHoverPause) { addEvents(container, hoverEvents); }\n        if (autoplayResetOnVisibility) { addEvents(container, visibilityEvent); }\n      }\n    }\n \n    // == navInit ==\n    if (hasNav) {\n      var initIndex = !carousel ? 0 : cloneCount;\n      // customized nav\n      // will not hide the navs in case they're thumbnails\n      if (navContainer) {\n        setAttrs(navContainer, {'aria-label': 'Carousel Pagination'});\n        navItems = navContainer.children;\n        forEach(navItems, function(item, i) {\n          setAttrs(item, {\n            'data-nav': i,\n            'tabindex': '-1',\n            'aria-label': navStr + (i + 1),\n            'aria-controls': slideId,\n          });\n        });\n\n      // generated nav \n      } else {\n        var navHtml = '',\n            hiddenStr = navAsThumbnails ? '' : 'style=\"display:none\"';\n        for (var i = 0; i < slideCount; i++) {\n          // hide nav items by default\n          navHtml += '<button data-nav=\"' + i +'\" tabindex=\"-1\" aria-controls=\"' + slideId + '\" ' + hiddenStr + ' aria-label=\"' + navStr + (i + 1) +'\"></button>';\n        }\n        navHtml = '<div class=\"tns-nav\" aria-label=\"Carousel Pagination\">' + navHtml + '</div>';\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.navPosition), navHtml);\n\n        navContainer = outerWrapper.querySelector('.tns-nav');\n        navItems = navContainer.children;\n      }\n\n      updateNavVisibility();\n\n      // add transition\n      if (TRANSITIONDURATION) {\n        var prefix = TRANSITIONDURATION.substring(0, TRANSITIONDURATION.length - 18).toLowerCase(),\n            str = 'transition: all ' + speed / 1000 + 's';\n\n        if (prefix) {\n          str = '-' + prefix + '-' + str;\n        }\n\n        addCSSRule(sheet, '[aria-controls^=' + slideId + '-item]', str, getCssRulesLength(sheet));\n      }\n\n      setAttrs(navItems[navCurrentIndex], {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n      removeAttrs(navItems[navCurrentIndex], 'tabindex');\n      addClass(navItems[navCurrentIndex], navActiveClass);\n\n      // add events\n      addEvents(navContainer, navEvents);\n    }\n\n\n\n    // == controlsInit ==\n    if (hasControls) {\n      if (!controlsContainer && (!prevButton || !nextButton)) {\n        outerWrapper.insertAdjacentHTML(getInsertPosition(options.controlsPosition), '<div class=\"tns-controls\" aria-label=\"Carousel Navigation\" tabindex=\"0\"><button data-controls=\"prev\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[0] + '</button><button data-controls=\"next\" tabindex=\"-1\" aria-controls=\"' + slideId +'\">' + controlsText[1] + '</button></div>');\n\n        controlsContainer = outerWrapper.querySelector('.tns-controls');\n      }\n\n      if (!prevButton || !nextButton) {\n        prevButton = controlsContainer.children[0];\n        nextButton = controlsContainer.children[1];\n      }\n\n      if (options.controlsContainer) {\n        setAttrs(controlsContainer, {\n          'aria-label': 'Carousel Navigation',\n          'tabindex': '0'\n        });\n      }\n\n      if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n        setAttrs([prevButton, nextButton], {\n          'aria-controls': slideId,\n          'tabindex': '-1',\n        });\n      }\n      \n      if (options.controlsContainer || (options.prevButton && options.nextButton)) {\n        setAttrs(prevButton, {'data-controls' : 'prev'});\n        setAttrs(nextButton, {'data-controls' : 'next'});\n      }\n\n      prevIsButton = isButton(prevButton);\n      nextIsButton = isButton(nextButton);\n\n      updateControlsStatus();\n\n      // add events\n      if (controlsContainer) {\n        addEvents(controlsContainer, controlsEvents);\n      } else {\n        addEvents(prevButton, controlsEvents);\n        addEvents(nextButton, controlsEvents);\n      }\n    }\n\n    // hide tools if needed\n    disableUI();\n  }\n\n  function initEvents () {\n    // add events\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      addEvents(container, eve);\n    }\n\n    if (touch) { addEvents(container, touchEvents, options.preventScrollOnTouch); }\n    if (mouseDrag) { addEvents(container, dragEvents); }\n    if (arrowKeys) { addEvents(doc, docmentKeydownEvent); }\n\n    if (nested === 'inner') {\n      events.on('outerResized', function () {\n        resizeTasks();\n        events.emit('innerLoaded', info());\n      });\n    } else if (responsive || fixedWidth || autoWidth || autoHeight || !horizontal) {\n      addEvents(win, {'resize': onResize});\n    }\n\n    if (autoHeight) {\n      if (nested === 'outer') {\n        events.on('innerLoaded', doAutoHeight);\n      } else if (!disable) { doAutoHeight(); }\n    }\n\n    doLazyLoad();\n    if (disable) { disableSlider(); } else if (freeze) { freezeSlider(); }\n\n    events.on('indexChanged', additionalUpdates);\n    if (nested === 'inner') { events.emit('innerLoaded', info()); }\n    if (typeof onInit === 'function') { onInit(info()); }\n    isOn = true;\n  }\n\n  function destroy () {\n    // sheet\n    sheet.disabled = true;\n    if (sheet.ownerNode) { sheet.ownerNode.remove(); }\n\n    // remove win event listeners\n    removeEvents(win, {'resize': onResize});\n\n    // arrowKeys, controls, nav\n    if (arrowKeys) { removeEvents(doc, docmentKeydownEvent); }\n    if (controlsContainer) { removeEvents(controlsContainer, controlsEvents); }\n    if (navContainer) { removeEvents(navContainer, navEvents); }\n\n    // autoplay\n    removeEvents(container, hoverEvents);\n    removeEvents(container, visibilityEvent);\n    if (autoplayButton) { removeEvents(autoplayButton, {'click': toggleAutoplay}); }\n    if (autoplay) { clearInterval(autoplayTimer); }\n\n    // container\n    if (carousel && TRANSITIONEND) {\n      var eve = {};\n      eve[TRANSITIONEND] = onTransitionEnd;\n      removeEvents(container, eve);\n    }\n    if (touch) { removeEvents(container, touchEvents); }\n    if (mouseDrag) { removeEvents(container, dragEvents); }\n\n    // cache Object values in options && reset HTML\n    var htmlList = [containerHTML, controlsContainerHTML, prevButtonHTML, nextButtonHTML, navContainerHTML, autoplayButtonHTML];\n\n    tnsList.forEach(function(item, i) {\n      var el = item === 'container' ? outerWrapper : options[item];\n\n      if (typeof el === 'object') {\n        var prevEl = el.previousElementSibling ? el.previousElementSibling : false,\n            parentEl = el.parentNode;\n        el.outerHTML = htmlList[i];\n        options[item] = prevEl ? prevEl.nextElementSibling : parentEl.firstElementChild;\n      }\n    });\n\n\n    // reset variables\n    tnsList = animateIn = animateOut = animateDelay = animateNormal = horizontal = outerWrapper = innerWrapper = container = containerParent = containerHTML = slideItems = slideCount = breakpointZone = windowWidth = autoWidth = fixedWidth = edgePadding = gutter = viewport = items = slideBy = viewportMax = arrowKeys = speed = rewind = loop = autoHeight = sheet = lazyload = slidePositions = slideItemsOut = cloneCount = slideCountNew = hasRightDeadZone = rightBoundary = updateIndexBeforeTransform = transformAttr = transformPrefix = transformPostfix = getIndexMax = index = indexCached = indexMin = indexMax = resizeTimer = swipeAngle = moveDirectionExpected = running = onInit = events = newContainerClasses = slideId = disable = disabled = freezable = freeze = frozen = controlsEvents = navEvents = hoverEvents = visibilityEvent = docmentKeydownEvent = touchEvents = dragEvents = hasControls = hasNav = navAsThumbnails = hasAutoplay = hasTouch = hasMouseDrag = slideActiveClass = imgCompleteClass = imgEvents = imgsComplete = controls = controlsText = controlsContainer = controlsContainerHTML = prevButton = nextButton = prevIsButton = nextIsButton = nav = navContainer = navContainerHTML = navItems = pages = pagesCached = navClicked = navCurrentIndex = navCurrentIndexCached = navActiveClass = navStr = navStrCurrent = autoplay = autoplayTimeout = autoplayDirection = autoplayText = autoplayHoverPause = autoplayButton = autoplayButtonHTML = autoplayResetOnVisibility = autoplayHtmlStrings = autoplayTimer = animating = autoplayHoverPaused = autoplayUserPaused = autoplayVisibilityPaused = initPosition = lastPosition = translateInit = disX = disY = panStart = rafIndex = getDist = touch = mouseDrag = null;\n    // check variables\n    // [animateIn, animateOut, animateDelay, animateNormal, horizontal, outerWrapper, innerWrapper, container, containerParent, containerHTML, slideItems, slideCount, breakpointZone, windowWidth, autoWidth, fixedWidth, edgePadding, gutter, viewport, items, slideBy, viewportMax, arrowKeys, speed, rewind, loop, autoHeight, sheet, lazyload, slidePositions, slideItemsOut, cloneCount, slideCountNew, hasRightDeadZone, rightBoundary, updateIndexBeforeTransform, transformAttr, transformPrefix, transformPostfix, getIndexMax, index, indexCached, indexMin, indexMax, resizeTimer, swipeAngle, moveDirectionExpected, running, onInit, events, newContainerClasses, slideId, disable, disabled, freezable, freeze, frozen, controlsEvents, navEvents, hoverEvents, visibilityEvent, docmentKeydownEvent, touchEvents, dragEvents, hasControls, hasNav, navAsThumbnails, hasAutoplay, hasTouch, hasMouseDrag, slideActiveClass, imgCompleteClass, imgEvents, imgsComplete, controls, controlsText, controlsContainer, controlsContainerHTML, prevButton, nextButton, prevIsButton, nextIsButton, nav, navContainer, navContainerHTML, navItems, pages, pagesCached, navClicked, navCurrentIndex, navCurrentIndexCached, navActiveClass, navStr, navStrCurrent, autoplay, autoplayTimeout, autoplayDirection, autoplayText, autoplayHoverPause, autoplayButton, autoplayButtonHTML, autoplayResetOnVisibility, autoplayHtmlStrings, autoplayTimer, animating, autoplayHoverPaused, autoplayUserPaused, autoplayVisibilityPaused, initPosition, lastPosition, translateInit, disX, disY, panStart, rafIndex, getDist, touch, mouseDrag ].forEach(function(item) { if (item !== null) { console.log(item); } });\n\n    for (var a in this) {\n      if (a !== 'rebuild') { this[a] = null; }\n    }\n    isOn = false;\n  }\n\n// === ON RESIZE ===\n  // responsive || fixedWidth || autoWidth || !horizontal\n  function onResize (e) {\n    raf(function(){ resizeTasks(getEvent(e)); });\n  }\n\n  function resizeTasks (e) {\n    if (!isOn) { return; }\n    if (nested === 'outer') { events.emit('outerResized', info(e)); }\n    windowWidth = getWindowWidth();\n    var bpChanged,\n        breakpointZoneTem = breakpointZone,\n        needContainerTransform = false;\n\n    if (responsive) {\n      setBreakpointZone();\n      bpChanged = breakpointZoneTem !== breakpointZone;\n      // if (hasRightDeadZone) { needContainerTransform = true; } // *?\n      if (bpChanged) { events.emit('newBreakpointStart', info(e)); }\n    }\n\n    var indChanged,\n        itemsChanged,\n        itemsTem = items,\n        disableTem = disable,\n        freezeTem = freeze,\n        arrowKeysTem = arrowKeys,\n        controlsTem = controls,\n        navTem = nav,\n        touchTem = touch,\n        mouseDragTem = mouseDrag,\n        autoplayTem = autoplay,\n        autoplayHoverPauseTem = autoplayHoverPause,\n        autoplayResetOnVisibilityTem = autoplayResetOnVisibility,\n        indexTem = index;\n\n    if (bpChanged) {\n      var fixedWidthTem = fixedWidth,\n          autoHeightTem = autoHeight,\n          controlsTextTem = controlsText,\n          centerTem = center,\n          autoplayTextTem = autoplayText;\n\n      if (!CSSMQ) {\n        var gutterTem = gutter,\n            edgePaddingTem = edgePadding;\n      }\n    }\n\n    // get option:\n    // fixed width: viewport, fixedWidth, gutter => items\n    // others: window width => all variables\n    // all: items => slideBy\n    arrowKeys = getOption('arrowKeys');\n    controls = getOption('controls');\n    nav = getOption('nav');\n    touch = getOption('touch');\n    center = getOption('center');\n    mouseDrag = getOption('mouseDrag');\n    autoplay = getOption('autoplay');\n    autoplayHoverPause = getOption('autoplayHoverPause');\n    autoplayResetOnVisibility = getOption('autoplayResetOnVisibility');\n\n    if (bpChanged) {\n      disable = getOption('disable');\n      fixedWidth = getOption('fixedWidth');\n      speed = getOption('speed');\n      autoHeight = getOption('autoHeight');\n      controlsText = getOption('controlsText');\n      autoplayText = getOption('autoplayText');\n      autoplayTimeout = getOption('autoplayTimeout');\n\n      if (!CSSMQ) {\n        edgePadding = getOption('edgePadding');\n        gutter = getOption('gutter');\n      }\n    }\n    // update options\n    resetVariblesWhenDisable(disable);\n\n    viewport = getViewportWidth(); // <= edgePadding, gutter\n    if ((!horizontal || autoWidth) && !disable) {\n      setSlidePositions();\n      if (!horizontal) {\n        updateContentWrapperHeight(); // <= setSlidePositions\n        needContainerTransform = true;\n      }\n    }\n    if (fixedWidth || autoWidth) {\n      rightBoundary = getRightBoundary(); // autoWidth: <= viewport, slidePositions, gutter\n                                          // fixedWidth: <= viewport, fixedWidth, gutter\n      indexMax = getIndexMax(); // autoWidth: <= rightBoundary, slidePositions\n                                // fixedWidth: <= rightBoundary, fixedWidth, gutter\n    }\n\n    if (bpChanged || fixedWidth) {\n      items = getOption('items');\n      slideBy = getOption('slideBy');\n      itemsChanged = items !== itemsTem;\n\n      if (itemsChanged) {\n        if (!fixedWidth && !autoWidth) { indexMax = getIndexMax(); } // <= items\n        // check index before transform in case\n        // slider reach the right edge then items become bigger\n        updateIndex();\n      }\n    }\n    \n    if (bpChanged) {\n      if (disable !== disableTem) {\n        if (disable) {\n          disableSlider();\n        } else {\n          enableSlider(); // <= slidePositions, rightBoundary, indexMax\n        }\n      }\n    }\n\n    if (freezable && (bpChanged || fixedWidth || autoWidth)) {\n      freeze = getFreeze(); // <= autoWidth: slidePositions, gutter, viewport, rightBoundary\n                            // <= fixedWidth: fixedWidth, gutter, rightBoundary\n                            // <= others: items\n\n      if (freeze !== freezeTem) {\n        if (freeze) {\n          doContainerTransform(getContainerTransformValue(getStartIndex(0)));\n          freezeSlider();\n        } else {\n          unfreezeSlider();\n          needContainerTransform = true;\n        }\n      }\n    }\n\n    resetVariblesWhenDisable(disable || freeze); // controls, nav, touch, mouseDrag, arrowKeys, autoplay, autoplayHoverPause, autoplayResetOnVisibility\n    if (!autoplay) { autoplayHoverPause = autoplayResetOnVisibility = false; }\n\n    if (arrowKeys !== arrowKeysTem) {\n      arrowKeys ?\n        addEvents(doc, docmentKeydownEvent) :\n        removeEvents(doc, docmentKeydownEvent);\n    }\n    if (controls !== controlsTem) {\n      if (controls) {\n        if (controlsContainer) {\n          showElement(controlsContainer);\n        } else {\n          if (prevButton) { showElement(prevButton); }\n          if (nextButton) { showElement(nextButton); }\n        }\n      } else {\n        if (controlsContainer) {\n          hideElement(controlsContainer);\n        } else {\n          if (prevButton) { hideElement(prevButton); }\n          if (nextButton) { hideElement(nextButton); }\n        }\n      }\n    }\n    if (nav !== navTem) {\n      nav ?\n        showElement(navContainer) :\n        hideElement(navContainer);\n    }\n    if (touch !== touchTem) {\n      touch ?\n        addEvents(container, touchEvents, options.preventScrollOnTouch) :\n        removeEvents(container, touchEvents);\n    }\n    if (mouseDrag !== mouseDragTem) {\n      mouseDrag ?\n        addEvents(container, dragEvents) :\n        removeEvents(container, dragEvents);\n    }\n    if (autoplay !== autoplayTem) {\n      if (autoplay) {\n        if (autoplayButton) { showElement(autoplayButton); }\n        if (!animating && !autoplayUserPaused) { startAutoplay(); }\n      } else {\n        if (autoplayButton) { hideElement(autoplayButton); }\n        if (animating) { stopAutoplay(); }\n      }\n    }\n    if (autoplayHoverPause !== autoplayHoverPauseTem) {\n      autoplayHoverPause ?\n        addEvents(container, hoverEvents) :\n        removeEvents(container, hoverEvents);\n    }\n    if (autoplayResetOnVisibility !== autoplayResetOnVisibilityTem) {\n      autoplayResetOnVisibility ?\n        addEvents(doc, visibilityEvent) :\n        removeEvents(doc, visibilityEvent);\n    }\n\n    if (bpChanged) {\n      if (fixedWidth !== fixedWidthTem || center !== centerTem) { needContainerTransform = true; }\n\n      if (autoHeight !== autoHeightTem) {\n        if (!autoHeight) { innerWrapper.style.height = ''; }\n      }\n\n      if (controls && controlsText !== controlsTextTem) {\n        prevButton.innerHTML = controlsText[0];\n        nextButton.innerHTML = controlsText[1];\n      }\n\n      if (autoplayButton && autoplayText !== autoplayTextTem) {\n        var i = autoplay ? 1 : 0,\n            html = autoplayButton.innerHTML,\n            len = html.length - autoplayTextTem[i].length;\n        if (html.substring(len) === autoplayTextTem[i]) {\n          autoplayButton.innerHTML = html.substring(0, len) + autoplayText[i];\n        }\n      }\n    } else {\n      if (center && (fixedWidth || autoWidth)) { needContainerTransform = true; }\n    }\n\n    if (itemsChanged || fixedWidth && !autoWidth) {\n      pages = getPages();\n      updateNavVisibility();\n    }\n\n    indChanged = index !== indexTem;\n    if (indChanged) { \n      events.emit('indexChanged', info());\n      needContainerTransform = true;\n    } else if (itemsChanged) {\n      if (!indChanged) { additionalUpdates(); }\n    } else if (fixedWidth || autoWidth) {\n      doLazyLoad(); \n      updateSlideStatus();\n      updateLiveRegion();\n    }\n\n    if (itemsChanged && !carousel) { updateGallerySlidePositions(); }\n\n    if (!disable && !freeze) {\n      // non-meduaqueries: IE8\n      if (bpChanged && !CSSMQ) {\n        // middle wrapper styles\n        if (autoHeight !== autoheightTem || speed !== speedTem) {\n          update_carousel_transition_duration();\n        }\n\n        // inner wrapper styles\n        if (edgePadding !== edgePaddingTem || gutter !== gutterTem) {\n          innerWrapper.style.cssText = getInnerWrapperStyles(edgePadding, gutter, fixedWidth, speed, autoHeight);\n        }\n\n        if (horizontal) {\n          // container styles\n          if (carousel) {\n            container.style.width = getContainerWidth(fixedWidth, gutter, items);\n          }\n\n          // slide styles\n          var str = getSlideWidthStyle(fixedWidth, gutter, items) + \n                    getSlideGutterStyle(gutter);\n\n          // remove the last line and\n          // add new styles\n          removeCSSRule(sheet, getCssRulesLength(sheet) - 1);\n          addCSSRule(sheet, '#' + slideId + ' > .tns-item', str, getCssRulesLength(sheet));\n        }\n      }\n\n      // auto height\n      if (autoHeight) { doAutoHeight(); }\n\n      if (needContainerTransform) {\n        doContainerTransformSilent();\n        indexCached = index;\n      }\n    }\n\n    if (bpChanged) { events.emit('newBreakpointEnd', info(e)); }\n  }\n\n\n\n\n\n  // === INITIALIZATION FUNCTIONS === //\n  function getFreeze () {\n    if (!fixedWidth && !autoWidth) {\n      var a = center ? items - (items - 1) / 2 : items;\n      return  slideCount <= a;\n    }\n\n    var width = fixedWidth ? (fixedWidth + gutter) * slideCount : slidePositions[slideCount],\n        vp = edgePadding ? viewport + edgePadding * 2 : viewport + gutter;\n\n    if (center) {\n      vp -= fixedWidth ? (viewport - fixedWidth) / 2 : (viewport - (slidePositions[index + 1] - slidePositions[index] - gutter)) / 2;\n    }\n\n    return width <= vp;\n  }\n\n  function setBreakpointZone () {\n    breakpointZone = 0;\n    for (var bp in responsive) {\n      bp = parseInt(bp); // convert string to number\n      if (windowWidth >= bp) { breakpointZone = bp; }\n    }\n  }\n\n  // (slideBy, indexMin, indexMax) => index\n  var updateIndex = (function () {\n    return loop ? \n      carousel ?\n        // loop + carousel\n        function () {\n          var leftEdge = indexMin,\n              rightEdge = indexMax;\n\n          leftEdge += slideBy;\n          rightEdge -= slideBy;\n\n          // adjust edges when has edge paddings\n          // or fixed-width slider with extra space on the right side\n          if (edgePadding) {\n            leftEdge += 1;\n            rightEdge -= 1;\n          } else if (fixedWidth) {\n            if ((viewport + gutter)%(fixedWidth + gutter)) { rightEdge -= 1; }\n          }\n\n          if (cloneCount) {\n            if (index > rightEdge) {\n              index -= slideCount;\n            } else if (index < leftEdge) {\n              index += slideCount;\n            }\n          }\n        } :\n        // loop + gallery\n        function() {\n          if (index > indexMax) {\n            while (index >= indexMin + slideCount) { index -= slideCount; }\n          } else if (index < indexMin) {\n            while (index <= indexMax - slideCount) { index += slideCount; }\n          }\n        } :\n      // non-loop\n      function() {\n        index = Math.max(indexMin, Math.min(indexMax, index));\n      };\n  })();\n\n  function disableUI () {\n    if (!autoplay && autoplayButton) { hideElement(autoplayButton); }\n    if (!nav && navContainer) { hideElement(navContainer); }\n    if (!controls) {\n      if (controlsContainer) {\n        hideElement(controlsContainer);\n      } else {\n        if (prevButton) { hideElement(prevButton); }\n        if (nextButton) { hideElement(nextButton); }\n      }\n    }\n  }\n\n  function enableUI () {\n    if (autoplay && autoplayButton) { showElement(autoplayButton); }\n    if (nav && navContainer) { showElement(navContainer); }\n    if (controls) {\n      if (controlsContainer) {\n        showElement(controlsContainer);\n      } else {\n        if (prevButton) { showElement(prevButton); }\n        if (nextButton) { showElement(nextButton); }\n      }\n    }\n  }\n\n  function freezeSlider () {\n    if (frozen) { return; }\n\n    // remove edge padding from inner wrapper\n    if (edgePadding) { innerWrapper.style.margin = '0px'; }\n\n    // add class tns-transparent to cloned slides\n    if (cloneCount) {\n      var str = 'tns-transparent';\n      for (var i = cloneCount; i--;) {\n        if (carousel) { addClass(slideItems[i], str); }\n        addClass(slideItems[slideCountNew - i - 1], str);\n      }\n    }\n\n    // update tools\n    disableUI();\n\n    frozen = true;\n  }\n\n  function unfreezeSlider () {\n    if (!frozen) { return; }\n\n    // restore edge padding for inner wrapper\n    // for mordern browsers\n    if (edgePadding && CSSMQ) { innerWrapper.style.margin = ''; }\n\n    // remove class tns-transparent to cloned slides\n    if (cloneCount) {\n      var str = 'tns-transparent';\n      for (var i = cloneCount; i--;) {\n        if (carousel) { removeClass(slideItems[i], str); }\n        removeClass(slideItems[slideCountNew - i - 1], str);\n      }\n    }\n\n    // update tools\n    enableUI();\n\n    frozen = false;\n  }\n\n  function disableSlider () {\n    if (disabled) { return; }\n\n    sheet.disabled = true;\n    container.className = container.className.replace(newContainerClasses.substring(1), '');\n    removeAttrs(container, ['style']);\n    if (loop) {\n      for (var j = cloneCount; j--;) {\n        if (carousel) { hideElement(slideItems[j]); }\n        hideElement(slideItems[slideCountNew - j - 1]);\n      }\n    }\n\n    // vertical slider\n    if (!horizontal || !carousel) { removeAttrs(innerWrapper, ['style']); }\n\n    // gallery\n    if (!carousel) { \n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i];\n        removeAttrs(item, ['style']);\n        removeClass(item, animateIn);\n        removeClass(item, animateNormal);\n      }\n    }\n\n    // update tools\n    disableUI();\n\n    disabled = true;\n  }\n\n  function enableSlider () {\n    if (!disabled) { return; }\n\n    sheet.disabled = false;\n    container.className += newContainerClasses;\n    doContainerTransformSilent();\n\n    if (loop) {\n      for (var j = cloneCount; j--;) {\n        if (carousel) { showElement(slideItems[j]); }\n        showElement(slideItems[slideCountNew - j - 1]);\n      }\n    }\n\n    // gallery\n    if (!carousel) { \n      for (var i = index, l = index + slideCount; i < l; i++) {\n        var item = slideItems[i],\n            classN = i < index + items ? animateIn : animateNormal;\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, classN);\n      }\n    }\n\n    // update tools\n    enableUI();\n\n    disabled = false;\n  }\n\n  function updateLiveRegion () {\n    var str = getLiveRegionStr();\n    if (liveregionCurrent.innerHTML !== str) { liveregionCurrent.innerHTML = str; }\n  }\n\n  function getLiveRegionStr () {\n    var arr = getVisibleSlideRange(),\n        start = arr[0] + 1,\n        end = arr[1] + 1;\n    return start === end ? start + '' : start + ' to ' + end; \n  }\n\n  function getVisibleSlideRange (val) {\n    if (val == null) { val = getContainerTransformValue(); }\n    var start = index, end, rangestart, rangeend;\n\n    // get range start, range end for autoWidth and fixedWidth\n    if (center || edgePadding) {\n      if (autoWidth || fixedWidth) {\n        rangestart = - (parseFloat(val) + edgePadding);\n        rangeend = rangestart + viewport + edgePadding * 2;\n      }\n    } else {\n      if (autoWidth) {\n        rangestart = slidePositions[index];\n        rangeend = rangestart + viewport;\n      }\n    }\n\n    // get start, end\n    // - check auto width\n    if (autoWidth) {\n      slidePositions.forEach(function(point, i) {\n        if (i < slideCountNew) {\n          if ((center || edgePadding) && point <= rangestart + 0.5) { start = i; }\n          if (rangeend - point >= 0.5) { end = i; }\n        }\n      });\n\n    // - check percentage width, fixed width\n    } else {\n\n      if (fixedWidth) {\n        var cell = fixedWidth + gutter;\n        if (center || edgePadding) {\n          start = Math.floor(rangestart/cell);\n          end = Math.ceil(rangeend/cell - 1);\n        } else {\n          end = start + Math.ceil(viewport/cell) - 1;\n        }\n\n      } else {\n        if (center || edgePadding) {\n          var a = items - 1;\n          if (center) {\n            start -= a / 2;\n            end = index + a / 2;\n          } else {\n            end = index + a;\n          }\n\n          if (edgePadding) {\n            var b = edgePadding * items / viewport;\n            start -= b;\n            end += b;\n          }\n\n          start = Math.floor(start);\n          end = Math.ceil(end);\n        } else {\n          end = start + items - 1;\n        }\n      }\n\n      start = Math.max(start, 0);\n      end = Math.min(end, slideCountNew - 1);\n    }\n\n    return [start, end];\n  }\n\n  function doLazyLoad () {\n    if (lazyload && !disable) {\n      getImageArray.apply(null, getVisibleSlideRange()).forEach(function (img) {\n        if (!hasClass(img, imgCompleteClass)) {\n          // stop propagation transitionend event to container\n          var eve = {};\n          eve[TRANSITIONEND] = function (e) { e.stopPropagation(); };\n          addEvents(img, eve);\n\n          addEvents(img, imgEvents);\n\n          // update src\n          img.src = getAttr(img, 'data-src');\n\n          // update srcset\n          var srcset = getAttr(img, 'data-srcset');\n          if (srcset) { img.srcset = srcset; }\n\n          addClass(img, 'loading');\n        }\n      });\n    }\n  }\n\n  function onImgLoaded (e) {\n    imgLoaded(getTarget(e));\n  }\n\n  function onImgFailed (e) {\n    imgFailed(getTarget(e));\n  }\n\n  function imgLoaded (img) {\n    addClass(img, 'loaded');\n    imgCompleted(img);\n  }\n\n  function imgFailed (img) {\n    addClass(img, 'failed');\n    imgCompleted(img);\n  }\n\n  function imgCompleted (img) {\n    addClass(img, 'tns-complete');\n    removeClass(img, 'loading');\n    removeEvents(img, imgEvents);\n  }\n\n  function getImageArray (start, end) {\n    var imgs = [];\n    while (start <= end) {\n      forEach(slideItems[start].querySelectorAll('img'), function (img) { imgs.push(img); });\n      start++;\n    }\n\n    return imgs;\n  }\n\n  // check if all visible images are loaded\n  // and update container height if it's done\n  function doAutoHeight () {\n    var imgs = getImageArray.apply(null, getVisibleSlideRange());\n    raf(function(){ imgsLoadedCheck(imgs, updateInnerWrapperHeight); });\n  }\n\n  function imgsLoadedCheck (imgs, cb) {\n    // directly execute callback function if all images are complete\n    if (imgsComplete) { return cb(); }\n\n    // check selected image classes otherwise\n    imgs.forEach(function (img, index) {\n      if (hasClass(img, imgCompleteClass)) { imgs.splice(index, 1); }\n    });\n\n    // execute callback function if selected images are all complete\n    if (!imgs.length) { return cb(); }\n\n    // otherwise execute this functiona again\n    raf(function(){ imgsLoadedCheck(imgs, cb); });\n  } \n\n  function additionalUpdates () {\n    doLazyLoad(); \n    updateSlideStatus();\n    updateLiveRegion();\n    updateControlsStatus();\n    updateNavStatus();\n  }\n\n\n  function update_carousel_transition_duration () {\n    if (carousel && autoHeight) {\n      middleWrapper.style[TRANSITIONDURATION] = speed / 1000 + 's';\n    }\n  }\n\n  function getMaxSlideHeight (slideStart, slideRange) {\n    var heights = [];\n    for (var i = slideStart, l = Math.min(slideStart + slideRange, slideCountNew); i < l; i++) {\n      heights.push(slideItems[i].offsetHeight);\n    }\n\n    return Math.max.apply(null, heights);\n  }\n\n  // update inner wrapper height\n  // 1. get the max-height of the visible slides\n  // 2. set transitionDuration to speed\n  // 3. update inner wrapper height to max-height\n  // 4. set transitionDuration to 0s after transition done\n  function updateInnerWrapperHeight () {\n    var maxHeight = autoHeight ? getMaxSlideHeight(index, items) : getMaxSlideHeight(cloneCount, slideCount),\n        wp = middleWrapper ? middleWrapper : innerWrapper;\n\n    if (wp.style.height !== maxHeight) { wp.style.height = maxHeight + 'px'; }\n  }\n\n  // get the distance from the top edge of the first slide to each slide\n  // (init) => slidePositions\n  function setSlidePositions () {\n    slidePositions = [0];\n    var attr = horizontal ? 'left' : 'top',\n        attr2 = horizontal ? 'right' : 'bottom',\n        base = slideItems[0].getBoundingClientRect()[attr];\n\n    forEach(slideItems, function(item, i) {\n      // skip the first slide\n      if (i) { slidePositions.push(item.getBoundingClientRect()[attr] - base); }\n      // add the end edge\n      if (i === slideCountNew - 1) { slidePositions.push(item.getBoundingClientRect()[attr2] - base); }\n    });\n  }\n\n  // update slide\n  function updateSlideStatus () {\n    var range = getVisibleSlideRange(),\n        start = range[0],\n        end = range[1];\n\n    forEach(slideItems, function(item, i) {\n      // show slides\n      if (i >= start && i <= end) {\n        if (hasAttr(item, 'aria-hidden')) {\n          removeAttrs(item, ['aria-hidden', 'tabindex']);\n          addClass(item, slideActiveClass);\n        }\n      // hide slides\n      } else {\n        if (!hasAttr(item, 'aria-hidden')) {\n          setAttrs(item, {\n            'aria-hidden': 'true',\n            'tabindex': '-1'\n          });\n          removeClass(item, slideActiveClass);\n        }\n      }\n    });\n  }\n\n  // gallery: update slide position\n  function updateGallerySlidePositions () {\n    var l = index + Math.min(slideCount, items);\n    for (var i = slideCountNew; i--;) {\n      var item = slideItems[i];\n\n      if (i >= index && i < l) {\n        // add transitions to visible slides when adjusting their positions\n        addClass(item, 'tns-moving');\n\n        item.style.left = (i - index) * 100 / items + '%';\n        addClass(item, animateIn);\n        removeClass(item, animateNormal);\n      } else if (item.style.left) {\n        item.style.left = '';\n        addClass(item, animateNormal);\n        removeClass(item, animateIn);\n      }\n\n      // remove outlet animation\n      removeClass(item, animateOut);\n    }\n\n    // removing '.tns-moving'\n    setTimeout(function() {\n      forEach(slideItems, function(el) {\n        removeClass(el, 'tns-moving');\n      });\n    }, 300);\n  }\n\n  // set tabindex on Nav\n  function updateNavStatus () {\n    // get current nav\n    if (nav) {\n      navCurrentIndex = navClicked >= 0 ? navClicked : getCurrentNavIndex();\n      navClicked = -1;\n\n      if (navCurrentIndex !== navCurrentIndexCached) {\n        var navPrev = navItems[navCurrentIndexCached],\n            navCurrent = navItems[navCurrentIndex];\n\n        setAttrs(navPrev, {\n          'tabindex': '-1',\n          'aria-label': navStr + (navCurrentIndexCached + 1)\n        });\n        removeClass(navPrev, navActiveClass);\n        \n        setAttrs(navCurrent, {'aria-label': navStr + (navCurrentIndex + 1) + navStrCurrent});\n        removeAttrs(navCurrent, 'tabindex');\n        addClass(navCurrent, navActiveClass);\n\n        navCurrentIndexCached = navCurrentIndex;\n      }\n    }\n  }\n\n  function getLowerCaseNodeName (el) {\n    return el.nodeName.toLowerCase();\n  }\n\n  function isButton (el) {\n    return getLowerCaseNodeName(el) === 'button';\n  }\n\n  function isAriaDisabled (el) {\n    return el.getAttribute('aria-disabled') === 'true';\n  }\n\n  function disEnableElement (isButton, el, val) {\n    if (isButton) {\n      el.disabled = val;\n    } else {\n      el.setAttribute('aria-disabled', val.toString());\n    }\n  }\n\n  // set 'disabled' to true on controls when reach the edges\n  function updateControlsStatus () {\n    if (!controls || rewind || loop) { return; }\n\n    var prevDisabled = (prevIsButton) ? prevButton.disabled : isAriaDisabled(prevButton),\n        nextDisabled = (nextIsButton) ? nextButton.disabled : isAriaDisabled(nextButton),\n        disablePrev = (index <= indexMin) ? true : false,\n        disableNext = (!rewind && index >= indexMax) ? true : false;\n\n    if (disablePrev && !prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, true);\n    }\n    if (!disablePrev && prevDisabled) {\n      disEnableElement(prevIsButton, prevButton, false);\n    }\n    if (disableNext && !nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, true);\n    }\n    if (!disableNext && nextDisabled) {\n      disEnableElement(nextIsButton, nextButton, false);\n    }\n  }\n\n  // set duration\n  function resetDuration (el, str) {\n    if (TRANSITIONDURATION) { el.style[TRANSITIONDURATION] = str; }\n  }\n\n  function getSliderWidth () {\n    return fixedWidth ? (fixedWidth + gutter) * slideCountNew : slidePositions[slideCountNew];\n  }\n\n  function getCenterGap (num) {\n    if (num == null) { num = index; }\n\n    var gap = edgePadding ? gutter : 0;\n    return autoWidth ? ((viewport - gap) - (slidePositions[num + 1] - slidePositions[num] - gutter))/2 :\n      fixedWidth ? (viewport - fixedWidth) / 2 :\n        (items - 1) / 2;\n  }\n\n  function getRightBoundary () {\n    var gap = edgePadding ? gutter : 0,\n        result = (viewport + gap) - getSliderWidth();\n\n    if (center && !loop) {\n      result = fixedWidth ? - (fixedWidth + gutter) * (slideCountNew - 1) - getCenterGap() :\n        getCenterGap(slideCountNew - 1) - slidePositions[slideCountNew - 1];\n    }\n    if (result > 0) { result = 0; }\n\n    return result;\n  }\n\n  function getContainerTransformValue (num) {\n    if (num == null) { num = index; }\n\n    var val;\n    if (horizontal && !autoWidth) {\n      if (fixedWidth) {\n        val = - (fixedWidth + gutter) * num;\n        if (center) { val += getCenterGap(); }\n      } else {\n        var denominator = TRANSFORM ? slideCountNew : items;\n        if (center) { num -= getCenterGap(); }\n        val = - num * 100 / denominator;\n      }\n    } else {\n      val = - slidePositions[num];\n      if (center && autoWidth) {\n        val += getCenterGap();\n      }\n    }\n\n    if (hasRightDeadZone) { val = Math.max(val, rightBoundary); }\n\n    val += (horizontal && !autoWidth && !fixedWidth) ? '%' : 'px';\n\n    return val;\n  }\n\n  function doContainerTransformSilent (val) {\n    resetDuration(container, '0s');\n    doContainerTransform(val);\n  }\n\n  function doContainerTransform (val) {\n    if (val == null) { val = getContainerTransformValue(); }\n    container.style[transformAttr] = transformPrefix + val + transformPostfix;\n  }\n\n  function animateSlide (number, classOut, classIn, isOut) {\n    var l = number + items;\n    if (!loop) { l = Math.min(l, slideCountNew); }\n\n    for (var i = number; i < l; i++) {\n        var item = slideItems[i];\n\n      // set item positions\n      if (!isOut) { item.style.left = (i - index) * 100 / items + '%'; }\n\n      if (animateDelay && TRANSITIONDELAY) {\n        item.style[TRANSITIONDELAY] = item.style[ANIMATIONDELAY] = animateDelay * (i - number) / 1000 + 's';\n      }\n      removeClass(item, classOut);\n      addClass(item, classIn);\n      \n      if (isOut) { slideItemsOut.push(item); }\n    }\n  }\n\n  // make transfer after click/drag:\n  // 1. change 'transform' property for mordern browsers\n  // 2. change 'left' property for legacy browsers\n  var transformCore = (function () {\n    return carousel ?\n      function () {\n        resetDuration(container, '');\n        if (TRANSITIONDURATION || !speed) {\n          // for morden browsers with non-zero duration or \n          // zero duration for all browsers\n          doContainerTransform();\n          // run fallback function manually \n          // when duration is 0 / container is hidden\n          if (!speed || !isVisible(container)) { onTransitionEnd(); }\n\n        } else {\n          // for old browser with non-zero duration\n          jsTransform(container, transformAttr, transformPrefix, transformPostfix, getContainerTransformValue(), speed, onTransitionEnd);\n        }\n\n        if (!horizontal) { updateContentWrapperHeight(); }\n      } :\n      function () {\n        slideItemsOut = [];\n\n        var eve = {};\n        eve[TRANSITIONEND] = eve[ANIMATIONEND] = onTransitionEnd;\n        removeEvents(slideItems[indexCached], eve);\n        addEvents(slideItems[index], eve);\n\n        animateSlide(indexCached, animateIn, animateOut, true);\n        animateSlide(index, animateNormal, animateIn);\n\n        // run fallback function manually \n        // when transition or animation not supported / duration is 0\n        if (!TRANSITIONEND || !ANIMATIONEND || !speed || !isVisible(container)) { onTransitionEnd(); }\n      };\n  })();\n\n  function render (e, sliderMoved) {\n    if (updateIndexBeforeTransform) { updateIndex(); }\n\n    // render when slider was moved (touch or drag) even though index may not change\n    if (index !== indexCached || sliderMoved) {\n      // events\n      events.emit('indexChanged', info());\n      events.emit('transitionStart', info());\n      if (autoHeight) { doAutoHeight(); }\n\n      // pause autoplay when click or keydown from user\n      if (animating && e && ['click', 'keydown'].indexOf(e.type) >= 0) { stopAutoplay(); }\n\n      running = true;\n      transformCore();\n    }\n  }\n\n  /*\n   * Transfer prefixed properties to the same format\n   * CSS: -Webkit-Transform => webkittransform\n   * JS: WebkitTransform => webkittransform\n   * @param {string} str - property\n   *\n   */\n  function strTrans (str) {\n    return str.toLowerCase().replace(/-/g, '');\n  }\n\n  // AFTER TRANSFORM\n  // Things need to be done after a transfer:\n  // 1. check index\n  // 2. add classes to visible slide\n  // 3. disable controls buttons when reach the first/last slide in non-loop slider\n  // 4. update nav status\n  // 5. lazyload images\n  // 6. update container height\n  function onTransitionEnd (event) {\n    // check running on gallery mode\n    // make sure trantionend/animationend events run only once\n    if (carousel || running) {\n      events.emit('transitionEnd', info(event));\n\n      if (!carousel && slideItemsOut.length > 0) {\n        for (var i = 0; i < slideItemsOut.length; i++) {\n          var item = slideItemsOut[i];\n          // set item positions\n          item.style.left = '';\n\n          if (ANIMATIONDELAY && TRANSITIONDELAY) { \n            item.style[ANIMATIONDELAY] = '';\n            item.style[TRANSITIONDELAY] = '';\n          }\n          removeClass(item, animateOut);\n          addClass(item, animateNormal);\n        }\n      }\n\n      /* update slides, nav, controls after checking ...\n       * => legacy browsers who don't support 'event' \n       *    have to check event first, otherwise event.target will cause an error \n       * => or 'gallery' mode: \n       *   + event target is slide item\n       * => or 'carousel' mode: \n       *   + event target is container, \n       *   + event.property is the same with transform attribute\n       */\n      if (!event || \n          !carousel && event.target.parentNode === container || \n          event.target === container && strTrans(event.propertyName) === strTrans(transformAttr)) {\n\n        if (!updateIndexBeforeTransform) { \n          var indexTem = index;\n          updateIndex();\n          if (index !== indexTem) { \n            events.emit('indexChanged', info());\n\n            doContainerTransformSilent();\n          }\n        } \n\n        if (nested === 'inner') { events.emit('innerLoaded', info()); }\n        running = false;\n        indexCached = index;\n      }\n    }\n\n  }\n\n  // # ACTIONS\n  function goTo (targetIndex, e) {\n    if (freeze) { return; }\n\n    // prev slideBy\n    if (targetIndex === 'prev') {\n      onControlsClick(e, -1);\n\n    // next slideBy\n    } else if (targetIndex === 'next') {\n      onControlsClick(e, 1);\n\n    // go to exact slide\n    } else {\n      if (running) {\n        if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n      }\n\n      var absIndex = getAbsIndex(), \n          indexGap = 0;\n\n      if (targetIndex === 'first') {\n        indexGap = - absIndex;\n      } else if (targetIndex === 'last') {\n        indexGap = carousel ? slideCount - items - absIndex : slideCount - 1 - absIndex;\n      } else {\n        if (typeof targetIndex !== 'number') { targetIndex = parseInt(targetIndex); }\n\n        if (!isNaN(targetIndex)) {\n          // from directly called goTo function\n          if (!e) { targetIndex = Math.max(0, Math.min(slideCount - 1, targetIndex)); }\n\n          indexGap = targetIndex - absIndex;\n        }\n      }\n\n      // gallery: make sure new page won't overlap with current page\n      if (!carousel && indexGap && Math.abs(indexGap) < items) {\n        var factor = indexGap > 0 ? 1 : -1;\n        indexGap += (index + indexGap - slideCount) >= indexMin ? slideCount * factor : slideCount * 2 * factor * -1;\n      }\n\n      index += indexGap;\n\n      // make sure index is in range\n      if (carousel && loop) {\n        if (index < indexMin) { index += slideCount; }\n        if (index > indexMax) { index -= slideCount; }\n      }\n\n      // if index is changed, start rendering\n      if (getAbsIndex(index) !== getAbsIndex(indexCached)) {\n        render(e);\n      }\n\n    }\n  }\n\n  // on controls click\n  function onControlsClick (e, dir) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n    var passEventObject;\n\n    if (!dir) {\n      e = getEvent(e);\n      var target = getTarget(e);\n\n      while (target !== controlsContainer && [prevButton, nextButton].indexOf(target) < 0) { target = target.parentNode; }\n\n      var targetIn = [prevButton, nextButton].indexOf(target);\n      if (targetIn >= 0) {\n        passEventObject = true;\n        dir = targetIn === 0 ? -1 : 1;\n      }\n    }\n\n    if (rewind) {\n      if (index === indexMin && dir === -1) {\n        goTo('last', e);\n        return;\n      } else if (index === indexMax && dir === 1) {\n        goTo('first', e);\n        return;\n      }\n    }\n\n    if (dir) {\n      index += slideBy * dir;\n      if (autoWidth) { index = Math.floor(index); }\n      // pass e when click control buttons or keydown\n      render((passEventObject || (e && e.type === 'keydown')) ? e : null);\n    }\n  }\n\n  // on nav click\n  function onNavClick (e) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n    \n    e = getEvent(e);\n    var target = getTarget(e), navIndex;\n\n    // find the clicked nav item\n    while (target !== navContainer && !hasAttr(target, 'data-nav')) { target = target.parentNode; }\n    if (hasAttr(target, 'data-nav')) {\n      var navIndex = navClicked = Number(getAttr(target, 'data-nav')),\n          targetIndexBase = fixedWidth || autoWidth ? navIndex * slideCount / pages : navIndex * items,\n          targetIndex = navAsThumbnails ? navIndex : Math.min(Math.ceil(targetIndexBase), slideCount - 1);\n      goTo(targetIndex, e);\n\n      if (navCurrentIndex === navIndex) {\n        if (animating) { stopAutoplay(); }\n        navClicked = -1; // reset navClicked\n      }\n    }\n  }\n\n  // autoplay functions\n  function setAutoplayTimer () {\n    autoplayTimer = setInterval(function () {\n      onControlsClick(null, autoplayDirection);\n    }, autoplayTimeout);\n\n    animating = true;\n  }\n\n  function stopAutoplayTimer () {\n    clearInterval(autoplayTimer);\n    animating = false;\n  }\n\n  function updateAutoplayButton (action, txt) {\n    setAttrs(autoplayButton, {'data-action': action});\n    autoplayButton.innerHTML = autoplayHtmlStrings[0] + action + autoplayHtmlStrings[1] + txt;\n  }\n\n  function startAutoplay () {\n    setAutoplayTimer();\n    if (autoplayButton) { updateAutoplayButton('stop', autoplayText[1]); }\n  }\n\n  function stopAutoplay () {\n    stopAutoplayTimer();\n    if (autoplayButton) { updateAutoplayButton('start', autoplayText[0]); }\n  }\n\n  // programaitcally play/pause the slider\n  function play () {\n    if (autoplay && !animating) {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n  function pause () {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    }\n  }\n\n  function toggleAutoplay () {\n    if (animating) {\n      stopAutoplay();\n      autoplayUserPaused = true;\n    } else {\n      startAutoplay();\n      autoplayUserPaused = false;\n    }\n  }\n\n  function onVisibilityChange () {\n    if (doc.hidden) {\n      if (animating) {\n        stopAutoplayTimer();\n        autoplayVisibilityPaused = true;\n      }\n    } else if (autoplayVisibilityPaused) {\n      setAutoplayTimer();\n      autoplayVisibilityPaused = false;\n    }\n  }\n\n  function mouseoverPause () {\n    if (animating) { \n      stopAutoplayTimer();\n      autoplayHoverPaused = true;\n    }\n  }\n\n  function mouseoutRestart () {\n    if (autoplayHoverPaused) { \n      setAutoplayTimer();\n      autoplayHoverPaused = false;\n    }\n  }\n\n  // keydown events on document \n  function onDocumentKeydown (e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      onControlsClick(e, keyIndex === 0 ? -1 : 1);\n    }\n  }\n\n  // on key control\n  function onControlsKeydown (e) {\n    e = getEvent(e);\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT].indexOf(e.keyCode);\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (!prevButton.disabled) { onControlsClick(e, -1); }\n      } else if (!nextButton.disabled) {\n        onControlsClick(e, 1);\n      }\n    }\n  }\n\n  // set focus\n  function setFocus (el) {\n    el.focus();\n  }\n\n  // on key nav\n  function onNavKeydown (e) {\n    e = getEvent(e);\n    var curElement = doc.activeElement;\n    if (!hasAttr(curElement, 'data-nav')) { return; }\n\n    // var code = e.keyCode,\n    var keyIndex = [KEYS.LEFT, KEYS.RIGHT, KEYS.ENTER, KEYS.SPACE].indexOf(e.keyCode),\n        navIndex = Number(getAttr(curElement, 'data-nav'));\n\n    if (keyIndex >= 0) {\n      if (keyIndex === 0) {\n        if (navIndex > 0) { setFocus(navItems[navIndex - 1]); }\n      } else if (keyIndex === 1) {\n        if (navIndex < pages - 1) { setFocus(navItems[navIndex + 1]); }\n      } else {\n        navClicked = navIndex;\n        goTo(navIndex, e);\n      }\n    }\n  }\n\n  function getEvent (e) {\n    e = e || win.event;\n    return isTouchEvent(e) ? e.changedTouches[0] : e;\n  }\n  function getTarget (e) {\n    return e.target || win.event.srcElement;\n  }\n\n  function isTouchEvent (e) {\n    return e.type.indexOf('touch') >= 0;\n  }\n\n  function preventDefaultBehavior (e) {\n    e.preventDefault ? e.preventDefault() : e.returnValue = false;\n  }\n\n  function getMoveDirectionExpected () {\n    return getTouchDirection(toDegree(lastPosition.y - initPosition.y, lastPosition.x - initPosition.x), swipeAngle) === options.axis;\n  }\n\n  function onPanStart (e) {\n    if (running) {\n      if (preventActionWhenRunning) { return; } else { onTransitionEnd(); }\n    }\n\n    if (autoplay && animating) { stopAutoplayTimer(); }\n    \n    panStart = true;\n    if (rafIndex) {\n      caf(rafIndex);\n      rafIndex = null;\n    }\n\n    var $ = getEvent(e);\n    events.emit(isTouchEvent(e) ? 'touchStart' : 'dragStart', info(e));\n\n    if (!isTouchEvent(e) && ['img', 'a'].indexOf(getLowerCaseNodeName(getTarget(e))) >= 0) {\n      preventDefaultBehavior(e);\n    }\n\n    lastPosition.x = initPosition.x = $.clientX;\n    lastPosition.y = initPosition.y = $.clientY;\n    if (carousel) {\n      translateInit = parseFloat(container.style[transformAttr].replace(transformPrefix, ''));\n      resetDuration(container, '0s');\n    }\n  }\n\n  function onPanMove (e) {\n    if (panStart) {\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n\n      if (carousel) {\n        if (!rafIndex) { rafIndex = raf(function(){ panUpdate(e); }); }\n      } else {\n        if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n        if (moveDirectionExpected) { preventScroll = true; }\n      }\n\n      if (preventScroll) { e.preventDefault(); }\n    }\n  }\n\n  function panUpdate (e) {\n    if (!moveDirectionExpected) {\n      panStart = false;\n      return;\n    }\n    caf(rafIndex);\n    if (panStart) { rafIndex = raf(function(){ panUpdate(e); }); }\n\n    if (moveDirectionExpected === '?') { moveDirectionExpected = getMoveDirectionExpected(); }\n    if (moveDirectionExpected) {\n      if (!preventScroll && isTouchEvent(e)) { preventScroll = true; }\n\n      try {\n        if (e.type) { events.emit(isTouchEvent(e) ? 'touchMove' : 'dragMove', info(e)); }\n      } catch(err) {}\n\n      var x = translateInit,\n          dist = getDist(lastPosition, initPosition);\n      if (!horizontal || fixedWidth || autoWidth) {\n        x += dist;\n        x += 'px';\n      } else {\n        var percentageX = TRANSFORM ? dist * items * 100 / ((viewport + gutter) * slideCountNew): dist * 100 / (viewport + gutter);\n        x += percentageX;\n        x += '%';\n      }\n\n      container.style[transformAttr] = transformPrefix + x + transformPostfix;\n    }\n  }\n\n  function onPanEnd (e) {\n    if (panStart) {\n      if (rafIndex) {\n        caf(rafIndex);\n        rafIndex = null;\n      }\n      if (carousel) { resetDuration(container, ''); }\n      panStart = false;\n\n      var $ = getEvent(e);\n      lastPosition.x = $.clientX;\n      lastPosition.y = $.clientY;\n      var dist = getDist(lastPosition, initPosition);\n\n      if (Math.abs(dist)) {\n        // drag vs click\n        if (!isTouchEvent(e)) {\n          // prevent \"click\"\n          var target = getTarget(e);\n          addEvents(target, {'click': function preventClick (e) {\n            preventDefaultBehavior(e);\n            removeEvents(target, {'click': preventClick});\n          }}); \n        }\n\n        if (carousel) {\n          rafIndex = raf(function() {\n            if (horizontal && !autoWidth) {\n              var indexMoved = - dist * items / (viewport + gutter);\n              indexMoved = dist > 0 ? Math.floor(indexMoved) : Math.ceil(indexMoved);\n              index += indexMoved;\n            } else {\n              var moved = - (translateInit + dist);\n              if (moved <= 0) {\n                index = indexMin;\n              } else if (moved >= slidePositions[slideCountNew - 1]) {\n                index = indexMax;\n              } else {\n                var i = 0;\n                while (i < slideCountNew && moved >= slidePositions[i]) {\n                  index = i;\n                  if (moved > slidePositions[i] && dist < 0) { index += 1; }\n                  i++;\n                }\n              }\n            }\n\n            render(e, dist);\n            events.emit(isTouchEvent(e) ? 'touchEnd' : 'dragEnd', info(e));\n          });\n        } else {\n          if (moveDirectionExpected) {\n            onControlsClick(e, dist > 0 ? -1 : 1);\n          }\n        }\n      }\n    }\n\n    // reset\n    if (options.preventScrollOnTouch === 'auto') { preventScroll = false; }\n    if (swipeAngle) { moveDirectionExpected = '?'; } \n    if (autoplay && !animating) { setAutoplayTimer(); }\n  }\n\n  // === RESIZE FUNCTIONS === //\n  // (slidePositions, index, items) => vertical_conentWrapper.height\n  function updateContentWrapperHeight () {\n    var wp = middleWrapper ? middleWrapper : innerWrapper;\n    wp.style.height = slidePositions[index + items] - slidePositions[index] + 'px';\n  }\n\n  function getPages () {\n    var rough = fixedWidth ? (fixedWidth + gutter) * slideCount / viewport : slideCount / items;\n    return Math.min(Math.ceil(rough), slideCount);\n  }\n\n  /*\n   * 1. update visible nav items list\n   * 2. add \"hidden\" attributes to previous visible nav items\n   * 3. remove \"hidden\" attrubutes to new visible nav items\n   */\n  function updateNavVisibility () {\n    if (!nav || navAsThumbnails) { return; }\n\n    if (pages !== pagesCached) {\n      var min = pagesCached,\n          max = pages,\n          fn = showElement;\n\n      if (pagesCached > pages) {\n        min = pages;\n        max = pagesCached;\n        fn = hideElement;\n      }\n\n      while (min < max) {\n        fn(navItems[min]);\n        min++;\n      }\n\n      // cache pages\n      pagesCached = pages;\n    }\n  }\n\n  function info (e) {\n    return {\n      container: container,\n      slideItems: slideItems,\n      navContainer: navContainer,\n      navItems: navItems,\n      controlsContainer: controlsContainer,\n      hasControls: hasControls,\n      prevButton: prevButton,\n      nextButton: nextButton,\n      items: items,\n      slideBy: slideBy,\n      cloneCount: cloneCount,\n      slideCount: slideCount,\n      slideCountNew: slideCountNew,\n      index: index,\n      indexCached: indexCached,\n      displayIndex: getCurrentSlide(),\n      navCurrentIndex: navCurrentIndex,\n      navCurrentIndexCached: navCurrentIndexCached,\n      pages: pages,\n      pagesCached: pagesCached,\n      sheet: sheet,\n      isOn: isOn,\n      event: e || {},\n    };\n  }\n\n  return {\n    version: '2.9.2',\n    getInfo: info,\n    events: events,\n    goTo: goTo,\n    play: play,\n    pause: pause,\n    isOn: isOn,\n    updateSliderHeight: updateInnerWrapperHeight,\n    refresh: initSliderTransform,\n    destroy: destroy,\n    rebuild: function() {\n      return tns(extend(options, optionsElements));\n    }\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///96\n")},function(module,exports,__webpack_require__){eval("// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(56);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1wcmltaXRpdmUuanM/NmE5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///97\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = __webpack_require__(11);\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcz8wYmZiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IGFuT2JqZWN0KHRoaXMpO1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGlmICh0aGF0Lmdsb2JhbCkgcmVzdWx0ICs9ICdnJztcbiAgaWYgKHRoYXQuaWdub3JlQ2FzZSkgcmVzdWx0ICs9ICdpJztcbiAgaWYgKHRoYXQubXVsdGlsaW5lKSByZXN1bHQgKz0gJ20nO1xuICBpZiAodGhhdC51bmljb2RlKSByZXN1bHQgKz0gJ3UnO1xuICBpZiAodGhhdC5zdGlja3kpIHJlc3VsdCArPSAneSc7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///98\n")},function(module,exports,__webpack_require__){eval("// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(76);\nvar TAG = __webpack_require__(9)('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jbGFzc29mLmpzPzIzYzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///99\n")},function(module,exports,__webpack_require__){eval("var shared = __webpack_require__(74)('keys');\nvar uid = __webpack_require__(62);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLWtleS5qcz82MTNiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///100\n")},function(module,exports){eval("// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1idWcta2V5cy5qcz9lMTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIElFIDgtIGRvbid0IGVudW0gYnVnIGtleXNcbm1vZHVsZS5leHBvcnRzID0gKFxuICAnY29uc3RydWN0b3IsaGFzT3duUHJvcGVydHksaXNQcm90b3R5cGVPZixwcm9wZXJ0eUlzRW51bWVyYWJsZSx0b0xvY2FsZVN0cmluZyx0b1N0cmluZyx2YWx1ZU9mJ1xuKS5zcGxpdCgnLCcpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///101\n")},function(module,exports,__webpack_require__){eval("var def = __webpack_require__(15).f;\nvar has = __webpack_require__(35);\nvar TAG = __webpack_require__(9)('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanM/N2YyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZGVmID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIHRhZywgc3RhdCkge1xuICBpZiAoaXQgJiYgIWhhcyhpdCA9IHN0YXQgPyBpdCA6IGl0LnByb3RvdHlwZSwgVEFHKSkgZGVmKGl0LCBUQUcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCB2YWx1ZTogdGFnIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///102\n")},function(module,exports){eval("exports.f = {}.propertyIsEnumerable;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXBpZS5qcz81MmE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZiA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///103\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar at = __webpack_require__(113)(true);\n\n // `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? at(S, index).length : 1);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWR2YW5jZS1zdHJpbmctaW5kZXguanM/MDM5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuIC8vIGBBZHZhbmNlU3RyaW5nSW5kZXhgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYWR2YW5jZXN0cmluZ2luZGV4XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChTLCBpbmRleCwgdW5pY29kZSkge1xuICByZXR1cm4gaW5kZXggKyAodW5pY29kZSA/IGF0KFMsIGluZGV4KS5sZW5ndGggOiAxKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///104\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar regexpFlags = __webpack_require__(98);\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar LAST_INDEX = 'lastIndex';\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/,\n      re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;\n})();\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + re.source + '$(?!\\\\s)', regexpFlags.call(re));\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];\n\n    match = nativeExec.call(re, str);\n\n    if (UPDATES_LAST_INDEX_WRONG && match) {\n      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      // eslint-disable-next-line no-loop-func\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMuanM/NTIwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZWdleHBGbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG5cbnZhciBuYXRpdmVFeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjO1xuLy8gVGhpcyBhbHdheXMgcmVmZXJzIHRvIHRoZSBuYXRpdmUgaW1wbGVtZW50YXRpb24sIGJlY2F1c2UgdGhlXG4vLyBTdHJpbmcjcmVwbGFjZSBwb2x5ZmlsbCB1c2VzIC4vZml4LXJlZ2V4cC13ZWxsLWtub3duLXN5bWJvbC1sb2dpYy5qcyxcbi8vIHdoaWNoIGxvYWRzIHRoaXMgZmlsZSBiZWZvcmUgcGF0Y2hpbmcgdGhlIG1ldGhvZC5cbnZhciBuYXRpdmVSZXBsYWNlID0gU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlO1xuXG52YXIgcGF0Y2hlZEV4ZWMgPSBuYXRpdmVFeGVjO1xuXG52YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnO1xuXG52YXIgVVBEQVRFU19MQVNUX0lOREVYX1dST05HID0gKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHJlMSA9IC9hLyxcbiAgICAgIHJlMiA9IC9iKi9nO1xuICBuYXRpdmVFeGVjLmNhbGwocmUxLCAnYScpO1xuICBuYXRpdmVFeGVjLmNhbGwocmUyLCAnYScpO1xuICByZXR1cm4gcmUxW0xBU1RfSU5ERVhdICE9PSAwIHx8IHJlMltMQVNUX0lOREVYXSAhPT0gMDtcbn0pKCk7XG5cbi8vIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nIGdyb3VwLCBjb3BpZWQgZnJvbSBlczUtc2hpbSdzIFN0cmluZyNzcGxpdCBwYXRjaC5cbnZhciBOUENHX0lOQ0xVREVEID0gLygpPz8vLmV4ZWMoJycpWzFdICE9PSB1bmRlZmluZWQ7XG5cbnZhciBQQVRDSCA9IFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyB8fCBOUENHX0lOQ0xVREVEO1xuXG5pZiAoUEFUQ0gpIHtcbiAgcGF0Y2hlZEV4ZWMgPSBmdW5jdGlvbiBleGVjKHN0cikge1xuICAgIHZhciByZSA9IHRoaXM7XG4gICAgdmFyIGxhc3RJbmRleCwgcmVDb3B5LCBtYXRjaCwgaTtcblxuICAgIGlmIChOUENHX0lOQ0xVREVEKSB7XG4gICAgICByZUNvcHkgPSBuZXcgUmVnRXhwKCdeJyArIHJlLnNvdXJjZSArICckKD8hXFxcXHMpJywgcmVnZXhwRmxhZ3MuY2FsbChyZSkpO1xuICAgIH1cbiAgICBpZiAoVVBEQVRFU19MQVNUX0lOREVYX1dST05HKSBsYXN0SW5kZXggPSByZVtMQVNUX0lOREVYXTtcblxuICAgIG1hdGNoID0gbmF0aXZlRXhlYy5jYWxsKHJlLCBzdHIpO1xuXG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyAmJiBtYXRjaCkge1xuICAgICAgcmVbTEFTVF9JTkRFWF0gPSByZS5nbG9iYWwgPyBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aCA6IGxhc3RJbmRleDtcbiAgICB9XG4gICAgaWYgKE5QQ0dfSU5DTFVERUQgJiYgbWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID4gMSkge1xuICAgICAgLy8gRml4IGJyb3dzZXJzIHdob3NlIGBleGVjYCBtZXRob2RzIGRvbid0IGNvbnNpc3RlbnRseSByZXR1cm4gYHVuZGVmaW5lZGBcbiAgICAgIC8vIGZvciBOUENHLCBsaWtlIElFOC4gTk9URTogVGhpcyBkb2Vzbicgd29yayBmb3IgLyguPyk/L1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWxvb3AtZnVuY1xuICAgICAgbmF0aXZlUmVwbGFjZS5jYWxsKG1hdGNoWzBdLCByZUNvcHksIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGggLSAyOyBpKyspIHtcbiAgICAgICAgICBpZiAoYXJndW1lbnRzW2ldID09PSB1bmRlZmluZWQpIG1hdGNoW2ldID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2g7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcGF0Y2hlZEV4ZWM7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///105\n")},,,,,function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcz9jZDAwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnO1xuXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxuZyA9IChmdW5jdGlvbigpIHtcblx0cmV0dXJuIHRoaXM7XG59KSgpO1xuXG50cnkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcblx0ZyA9IGcgfHwgbmV3IEZ1bmN0aW9uKFwicmV0dXJuIHRoaXNcIikoKTtcbn0gY2F0Y2ggKGUpIHtcblx0Ly8gVGhpcyB3b3JrcyBpZiB0aGUgd2luZG93IHJlZmVyZW5jZSBpcyBhdmFpbGFibGVcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XG59XG5cbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cbi8vIFdlIHJldHVybiB1bmRlZmluZWQsIGluc3RlYWQgb2Ygbm90aGluZyBoZXJlLCBzbyBpdCdzXG4vLyBlYXNpZXIgdG8gaGFuZGxlIHRoaXMgY2FzZS4gaWYoIWdsb2JhbCkgeyAuLi59XG5cbm1vZHVsZS5leHBvcnRzID0gZztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///110\n')},function(module,exports,__webpack_require__){eval("module.exports = !__webpack_require__(16) && !__webpack_require__(26)(function () {\n  return Object.defineProperty(__webpack_require__(112)('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanM/YzY5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///111\n")},function(module,exports,__webpack_require__){eval("var isObject = __webpack_require__(56);\nvar document = __webpack_require__(17).document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcz8yMzBlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///112\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(77);\nvar defined = __webpack_require__(57);\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzPzAyZjQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///113\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar LIBRARY = __webpack_require__(75);\nvar $export = __webpack_require__(36);\nvar redefine = __webpack_require__(34);\nvar hide = __webpack_require__(27);\nvar Iterators = __webpack_require__(64);\nvar $iterCreate = __webpack_require__(132);\nvar setToStringTag = __webpack_require__(102);\nvar getPrototypeOf = __webpack_require__(137);\nvar ITERATOR = __webpack_require__(9)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanM/MDFmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgJGl0ZXJDcmVhdGUgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEJVR0dZID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpOyAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG52YXIgRkZfSVRFUkFUT1IgPSAnQEBpdGVyYXRvcic7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICBpZiAoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pIHJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICB2YXIgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTO1xuICB2YXIgVkFMVUVTX0JVRyA9IGZhbHNlO1xuICB2YXIgcHJvdG8gPSBCYXNlLnByb3RvdHlwZTtcbiAgdmFyICRuYXRpdmUgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF07XG4gIHZhciAkZGVmYXVsdCA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpO1xuICB2YXIgJGVudHJpZXMgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkO1xuICB2YXIgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmU7XG4gIHZhciBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmICgkYW55TmF0aXZlKSB7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UoKSkpO1xuICAgIGlmIChJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYgKCFMSUJSQVJZICYmIHR5cGVvZiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0gIT0gJ2Z1bmN0aW9uJykgaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmIChERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKSB7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSA9IHJldHVyblRoaXM7XG4gIGlmIChERUZBVUxUKSB7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiBJU19TRVQgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKGtleSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoIShrZXkgaW4gcHJvdG8pKSByZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///114\n")},function(module,exports,__webpack_require__){eval("// optional / simple context binding\nvar aFunction = __webpack_require__(116);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY3R4LmpzPzliNDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///115\n")},function(module,exports){eval("module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcz9kOGU4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///116\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = __webpack_require__(11);\nvar dPs = __webpack_require__(133);\nvar enumBugKeys = __webpack_require__(101);\nvar IE_PROTO = __webpack_require__(100)('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = __webpack_require__(112)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __webpack_require__(136).appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWNyZWF0ZS5qcz8yYWViIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///117\n")},function(module,exports,__webpack_require__){eval("var has = __webpack_require__(35);\nvar toIObject = __webpack_require__(58);\nvar arrayIndexOf = __webpack_require__(119)(false);\nvar IE_PROTO = __webpack_require__(100)('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanM/Y2UxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5SW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSBpZiAoa2V5ICE9IElFX1BST1RPKSBoYXMoTywga2V5KSAmJiByZXN1bHQucHVzaChrZXkpO1xuICAvLyBEb24ndCBlbnVtIGJ1ZyAmIGhpZGRlbiBrZXlzXG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSBpZiAoaGFzKE8sIGtleSA9IG5hbWVzW2krK10pKSB7XG4gICAgfmFycmF5SW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcmVzdWx0LnB1c2goa2V5KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///118\n")},function(module,exports,__webpack_require__){eval("// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = __webpack_require__(58);\nvar toLength = __webpack_require__(65);\nvar toAbsoluteIndex = __webpack_require__(135);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktaW5jbHVkZXMuanM/YzM2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///119\n")},function(module,exports,__webpack_require__){eval("// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = __webpack_require__(9)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(27)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzPzljNmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjIuMS4zLjMxIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxudmFyIFVOU0NPUEFCTEVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3Vuc2NvcGFibGVzJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcbmlmIChBcnJheVByb3RvW1VOU0NPUEFCTEVTXSA9PSB1bmRlZmluZWQpIHJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///120\n")},function(module,exports,__webpack_require__){eval("var global = __webpack_require__(17);\nvar core = __webpack_require__(63);\nvar LIBRARY = __webpack_require__(75);\nvar wksExt = __webpack_require__(122);\nvar defineProperty = __webpack_require__(15).f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcz8zYTcyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTtcbiAgaWYgKG5hbWUuY2hhckF0KDApICE9ICdfJyAmJiAhKG5hbWUgaW4gJFN5bWJvbCkpIGRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHsgdmFsdWU6IHdrc0V4dC5mKG5hbWUpIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///121\n")},function(module,exports,__webpack_require__){eval("exports.f = __webpack_require__(9);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWV4dC5qcz8zN2M4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX3drcycpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///122\n")},function(module,exports){eval("exports.f = Object.getOwnPropertySymbols;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcHMuanM/MjYyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///123\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = __webpack_require__(118);\nvar hiddenKeys = __webpack_require__(101).concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcG4uanM/OTA5MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///124\n")},function(module,exports,__webpack_require__){eval("// 7.2.8 IsRegExp(argument)\nvar isObject = __webpack_require__(56);\nvar cof = __webpack_require__(76);\nvar MATCH = __webpack_require__(9)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtcmVnZXhwLmpzP2FhZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gNy4yLjggSXNSZWdFeHAoYXJndW1lbnQpXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIGlzUmVnRXhwO1xuICByZXR1cm4gaXNPYmplY3QoaXQpICYmICgoaXNSZWdFeHAgPSBpdFtNQVRDSF0pICE9PSB1bmRlZmluZWQgPyAhIWlzUmVnRXhwIDogY29mKGl0KSA9PSAnUmVnRXhwJyk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///125\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(11);\nvar sameValue = __webpack_require__(155);\nvar regExpExec = __webpack_require__(84);\n\n// @@search logic\n__webpack_require__(85)('search', 1, function (defined, SEARCH, $search, maybeCallNative) {\n  return [\n    // `String.prototype.search` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.search\n    function search(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[SEARCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n    },\n    // `RegExp.prototype[@@search]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search\n    function (regexp) {\n      var res = maybeCallNative($search, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      var previousLastIndex = rx.lastIndex;\n      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;\n      var result = regExpExec(rx, S);\n      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;\n      return result === null ? -1 : result.index;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaC5qcz8zODZkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///126\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9zY3NzL19uYXYuc2Nzcz85NTNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///127\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTI4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Rpbnktc2xpZGVyL2Rpc3QvdGlueS1zbGlkZXIuY3NzP2M2ODUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///128\n")},,function(module,exports,__webpack_require__){eval("// 21.2.5.3 get RegExp.prototype.flags()\nif (__webpack_require__(16) && /./g.flags != 'g') __webpack_require__(15).f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: __webpack_require__(98)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmZsYWdzLmpzPzM4NDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3MoKVxuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgLy4vZy5mbGFncyAhPSAnZycpIHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYoUmVnRXhwLnByb3RvdHlwZSwgJ2ZsYWdzJywge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogcmVxdWlyZSgnLi9fZmxhZ3MnKVxufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///130\n")},function(module,exports,__webpack_require__){eval("module.exports = __webpack_require__(74)('native-function-to-string', Function.toString);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZnVuY3Rpb24tdG8tc3RyaW5nLmpzP2ZhNWIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnbmF0aXZlLWZ1bmN0aW9uLXRvLXN0cmluZycsIEZ1bmN0aW9uLnRvU3RyaW5nKTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///131\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar create = __webpack_require__(117);\nvar descriptor = __webpack_require__(61);\nvar setToStringTag = __webpack_require__(102);\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n__webpack_require__(27)(IteratorPrototype, __webpack_require__(9)('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jcmVhdGUuanM/NDFhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///132\n")},function(module,exports,__webpack_require__){eval("var dP = __webpack_require__(15);\nvar anObject = __webpack_require__(11);\nvar getKeys = __webpack_require__(78);\n\nmodule.exports = __webpack_require__(16) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcz8xNDk1Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///133\n")},function(module,exports,__webpack_require__){eval("// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = __webpack_require__(76);\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW9iamVjdC5qcz82MjZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///134\n")},function(module,exports,__webpack_require__){eval("var toInteger = __webpack_require__(77);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanM/NzdmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///135\n")},function(module,exports,__webpack_require__){eval("var document = __webpack_require__(17).document;\nmodule.exports = document && document.documentElement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faHRtbC5qcz9mYWIyIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///136\n")},function(module,exports,__webpack_require__){eval("// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = __webpack_require__(35);\nvar toObject = __webpack_require__(79);\nvar IE_PROTO = __webpack_require__(100)('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcz8zOGZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///137\n")},function(module,exports,__webpack_require__){eval("// call something on iterator step with safe closing on error\nvar anObject = __webpack_require__(11);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzPzFmYTgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///138\n")},function(module,exports,__webpack_require__){eval("// check on default Array iterator\nvar Iterators = __webpack_require__(64);\nvar ITERATOR = __webpack_require__(9)('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcz8zM2E0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///139\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar $defineProperty = __webpack_require__(15);\nvar createDesc = __webpack_require__(61);\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzP2YxYWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgaW5kZXgsIHZhbHVlKSB7XG4gIGlmIChpbmRleCBpbiBvYmplY3QpICRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///140\n")},function(module,exports,__webpack_require__){eval("var classof = __webpack_require__(99);\nvar ITERATOR = __webpack_require__(9)('iterator');\nvar Iterators = __webpack_require__(64);\nmodule.exports = __webpack_require__(63).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QuanM/MjdlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///141\n")},function(module,exports,__webpack_require__){eval("var ITERATOR = __webpack_require__(9)('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZXRlY3QuanM/NWNjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbiAoKSB7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uICgpIHsgdGhyb3cgMjsgfSk7XG59IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgc2tpcENsb3NpbmcpIHtcbiAgaWYgKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IFs3XTtcbiAgICB2YXIgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB7IGRvbmU6IHNhZmUgPSB0cnVlIH07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///142\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar addToUnscopables = __webpack_require__(120);\nvar step = __webpack_require__(144);\nvar Iterators = __webpack_require__(64);\nvar toIObject = __webpack_require__(58);\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = __webpack_require__(114)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanM/Y2FkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///143\n")},function(module,exports){eval("module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1zdGVwLmpzP2Q1M2IiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///144\n")},function(module,exports,__webpack_require__){eval("var META = __webpack_require__(62)('meta');\nvar isObject = __webpack_require__(56);\nvar has = __webpack_require__(35);\nvar setDesc = __webpack_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__webpack_require__(26)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWV0YS5qcz82N2FiIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBNRVRBID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHNldERlc2MgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGlkID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbiAoaXQpIHtcbiAgc2V0RGVzYyhpdCwgTUVUQSwgeyB2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKSBzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogTUVUQSxcbiAgTkVFRDogZmFsc2UsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWs6IGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///145\n")},function(module,exports,__webpack_require__){eval("// all enumerable object keys, includes symbols\nvar getKeys = __webpack_require__(78);\nvar gOPS = __webpack_require__(123);\nvar pIE = __webpack_require__(103);\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZW51bS1rZXlzLmpzP2Q0YzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWxsIGVudW1lcmFibGUgb2JqZWN0IGtleXMsIGluY2x1ZGVzIHN5bWJvbHNcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciBnT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgcmVzdWx0ID0gZ2V0S2V5cyhpdCk7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICBpZiAoZ2V0U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gZ2V0U3ltYm9scyhpdCk7XG4gICAgdmFyIGlzRW51bSA9IHBJRS5mO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChzeW1ib2xzLmxlbmd0aCA+IGkpIGlmIChpc0VudW0uY2FsbChpdCwga2V5ID0gc3ltYm9sc1tpKytdKSkgcmVzdWx0LnB1c2goa2V5KTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///146\n")},function(module,exports,__webpack_require__){eval("// 7.2.2 IsArray(argument)\nvar cof = __webpack_require__(76);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXkuanM/MTE2OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///147\n")},function(module,exports,__webpack_require__){eval("// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = __webpack_require__(58);\nvar gOPN = __webpack_require__(124).f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzPzdiYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzXG4gID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdO1xuXG52YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///148\n")},function(module,exports,__webpack_require__){eval("var pIE = __webpack_require__(103);\nvar createDesc = __webpack_require__(61);\nvar toIObject = __webpack_require__(58);\nvar toPrimitive = __webpack_require__(97);\nvar has = __webpack_require__(35);\nvar IE8_DOM_DEFINE = __webpack_require__(111);\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = __webpack_require__(16) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanM/MTFlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///149\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nvar getScrollTop = function getScrollTop() {\n  return window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n};\n\nvar getScrollLeft = function getScrollLeft() {\n  return window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;\n};\n\nvar getOffset = exports.getOffset = function getOffset(el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    top: rect.top + getScrollTop(),\n    left: rect.left + getScrollLeft()\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Jlc3BvbnNpdmUtYXV0by1oZWlnaHQvbGliL3V0aWwuanM/ZmI0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBnZXRTY3JvbGxUb3AgPSBmdW5jdGlvbiBnZXRTY3JvbGxUb3AoKSB7XG4gIHJldHVybiB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCB8fCAwO1xufTtcblxudmFyIGdldFNjcm9sbExlZnQgPSBmdW5jdGlvbiBnZXRTY3JvbGxMZWZ0KCkge1xuICByZXR1cm4gd2luZG93LnBhZ2VYT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxMZWZ0IHx8IGRvY3VtZW50LmJvZHkuc2Nyb2xsTGVmdCB8fCAwO1xufTtcblxudmFyIGdldE9mZnNldCA9IGV4cG9ydHMuZ2V0T2Zmc2V0ID0gZnVuY3Rpb24gZ2V0T2Zmc2V0KGVsKSB7XG4gIHZhciByZWN0ID0gZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gIHJldHVybiB7XG4gICAgdG9wOiByZWN0LnRvcCArIGdldFNjcm9sbFRvcCgpLFxuICAgIGxlZnQ6IHJlY3QubGVmdCArIGdldFNjcm9sbExlZnQoKVxuICB9O1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///150\n')},function(module,exports){eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2FtZC1vcHRpb25zLmpzPzAwODYiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFscyBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXyAqL1xubW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfYW1kX29wdGlvbnNfXztcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///151\n")},function(module,exports,__webpack_require__){"use strict";eval("\nvar regexpExec = __webpack_require__(105);\n__webpack_require__(36)({\n  target: 'RegExp',\n  proto: true,\n  forced: regexpExec !== /./.exec\n}, {\n  exec: regexpExec\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMuanM/YjBjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG52YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjJyk7XG5yZXF1aXJlKCcuL19leHBvcnQnKSh7XG4gIHRhcmdldDogJ1JlZ0V4cCcsXG4gIHByb3RvOiB0cnVlLFxuICBmb3JjZWQ6IHJlZ2V4cEV4ZWMgIT09IC8uLy5leGVjXG59LCB7XG4gIGV4ZWM6IHJlZ2V4cEV4ZWNcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///152\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar anObject = __webpack_require__(11);\nvar toLength = __webpack_require__(65);\nvar advanceStringIndex = __webpack_require__(104);\nvar regExpExec = __webpack_require__(84);\n\n// @@match logic\n__webpack_require__(85)('match', 1, function (defined, MATCH, $match, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = defined(this);\n      var fn = regexp == undefined ? undefined : regexp[MATCH];\n      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative($match, regexp, this);\n      if (res.done) return res.value;\n      var rx = anObject(regexp);\n      var S = String(this);\n      if (!rx.global) return regExpExec(rx, S);\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoLmpzPzQ5MTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///153\n")},function(module,exports,__webpack_require__){eval("// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = __webpack_require__(11);\nvar aFunction = __webpack_require__(116);\nvar SPECIES = __webpack_require__(9)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3BlY2llcy1jb25zdHJ1Y3Rvci5qcz9lYmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMy4yMCBTcGVjaWVzQ29uc3RydWN0b3IoTywgZGVmYXVsdENvbnN0cnVjdG9yKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywgRCkge1xuICB2YXIgQyA9IGFuT2JqZWN0KE8pLmNvbnN0cnVjdG9yO1xuICB2YXIgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBEIDogYUZ1bmN0aW9uKFMpO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///154\n")},function(module,exports){eval("// 7.2.9 SameValue(x, y)\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2FtZS12YWx1ZS5qcz84M2ExIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIDcuMi45IFNhbWVWYWx1ZSh4LCB5KVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaXMgfHwgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiB4ID09PSB5ID8geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHkgOiB4ICE9IHggJiYgeSAhPSB5O1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///155\n")},function(module,exports,__webpack_require__){"use strict";eval("\n// B.2.3.6 String.prototype.fixed()\n__webpack_require__(157)('fixed', function (createHTML) {\n  return function fixed() {\n    return createHTML(this, 'tt', '', '');\n  };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkLmpzP2QyNjMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNiBTdHJpbmcucHJvdG90eXBlLmZpeGVkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZpeGVkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZpeGVkKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICd0dCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///156\n")},function(module,exports,__webpack_require__){eval("var $export = __webpack_require__(36);\nvar fails = __webpack_require__(26);\nvar defined = __webpack_require__(57);\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanM/Mzg2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHF1b3QgPSAvXCIvZztcbi8vIEIuMi4zLjIuMSBDcmVhdGVIVE1MKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKVxudmFyIGNyZWF0ZUhUTUwgPSBmdW5jdGlvbiAoc3RyaW5nLCB0YWcsIGF0dHJpYnV0ZSwgdmFsdWUpIHtcbiAgdmFyIFMgPSBTdHJpbmcoZGVmaW5lZChzdHJpbmcpKTtcbiAgdmFyIHAxID0gJzwnICsgdGFnO1xuICBpZiAoYXR0cmlidXRlICE9PSAnJykgcDEgKz0gJyAnICsgYXR0cmlidXRlICsgJz1cIicgKyBTdHJpbmcodmFsdWUpLnJlcGxhY2UocXVvdCwgJyZxdW90OycpICsgJ1wiJztcbiAgcmV0dXJuIHAxICsgJz4nICsgUyArICc8LycgKyB0YWcgKyAnPic7XG59O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSwgZXhlYykge1xuICB2YXIgTyA9IHt9O1xuICBPW05BTUVdID0gZXhlYyhjcmVhdGVIVE1MKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHRlc3QgPSAnJ1tOQU1FXSgnXCInKTtcbiAgICByZXR1cm4gdGVzdCAhPT0gdGVzdC50b0xvd2VyQ2FzZSgpIHx8IHRlc3Quc3BsaXQoJ1wiJykubGVuZ3RoID4gMztcbiAgfSksICdTdHJpbmcnLCBPKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///157\n")},function(module,exports,__webpack_require__){eval("// helper for String#{startsWith, endsWith, includes}\nvar isRegExp = __webpack_require__(125);\nvar defined = __webpack_require__(57);\n\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWNvbnRleHQuanM/ZDJjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBoZWxwZXIgZm9yIFN0cmluZyN7c3RhcnRzV2l0aCwgZW5kc1dpdGgsIGluY2x1ZGVzfVxudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgc2VhcmNoU3RyaW5nLCBOQU1FKSB7XG4gIGlmIChpc1JlZ0V4cChzZWFyY2hTdHJpbmcpKSB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZyMnICsgTkFNRSArIFwiIGRvZXNuJ3QgYWNjZXB0IHJlZ2V4IVwiKTtcbiAgcmV0dXJuIFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///158\n")},function(module,exports,__webpack_require__){eval("var MATCH = __webpack_require__(9)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) { /* empty */ }\n  } return true;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTU5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmFpbHMtaXMtcmVnZXhwLmpzPzUxNDciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIHJlID0gLy4vO1xuICB0cnkge1xuICAgICcvLi8nW0tFWV0ocmUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlW01BVENIXSA9IGZhbHNlO1xuICAgICAgcmV0dXJuICEnLy4vJ1tLRVldKHJlKTtcbiAgICB9IGNhdGNoIChmKSB7IC8qIGVtcHR5ICovIH1cbiAgfSByZXR1cm4gdHJ1ZTtcbn07XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///159\n")},,,,,,,,,,,,,,,,,,,,,,,function(module,exports){eval("// Object.keys\nif (!Object.keys) {\n  Object.keys = function(object) {\n    var keys = [];\n    for (var name in object) {\n      if (Object.prototype.hasOwnProperty.call(object, name)) {\n        keys.push(name);\n      }\n    }\n    return keys;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Rpbnktc2xpZGVyL3NyYy9oZWxwZXJzL09iamVjdC5rZXlzLmpzPzY0MzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gT2JqZWN0LmtleXNcbmlmICghT2JqZWN0LmtleXMpIHtcbiAgT2JqZWN0LmtleXMgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIGZvciAodmFyIG5hbWUgaW4gb2JqZWN0KSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgbmFtZSkpIHtcbiAgICAgICAga2V5cy5wdXNoKG5hbWUpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ga2V5cztcbiAgfTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///182\n")},function(module,exports){eval('// ChildNode.remove\nif(!("remove" in Element.prototype)){\n  Element.prototype.remove = function(){\n    if(this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTgzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Rpbnktc2xpZGVyL3NyYy9oZWxwZXJzL2NoaWxkTm9kZS5yZW1vdmUuanM/NDY2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDaGlsZE5vZGUucmVtb3ZlXG5pZighKFwicmVtb3ZlXCIgaW4gRWxlbWVudC5wcm90b3R5cGUpKXtcbiAgRWxlbWVudC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24oKXtcbiAgICBpZih0aGlzLnBhcmVudE5vZGUpIHtcbiAgICAgIHRoaXMucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICB9XG4gIH07XG59Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///183\n')}]]);